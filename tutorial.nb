(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    702659,      13548]
NotebookOptionsPosition[    696667,      13349]
NotebookOutlinePosition[    697585,      13380]
CellTagsIndexPosition[    697404,      13373]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sec", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7173311894080825`*^9, 3.717331207174182*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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
BbwFJ+2YKg6qdesWfPtGwcn3z5c/VHDQv64OJvE=
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$3376#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6}, {-8.040986339240202, 8.046132583102528}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.717331208329491*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"1", "/", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7173312482416544`*^9, 3.7173312685175695`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
xii8ktV1ORbHhGPu69gE2pvaRfYvSGRCRYtxXfgnhWtIirmXxoSFKbOgiXbf
3P5XR/OYKPHKkNL8RcEpLVGNr5CJxJaoBQG0N1yzn84pZuKWcp7KL9pmFatu
yFUyEWwTkuT7m0KHu7b2/GYmJOb9yGv+Q+Gh2qrZOa1MVPoX3dgwQWH1L1aG
dQcT03N33r1B+9Spx7K9vUxcWT/5ZYJ2w9qEBdkcJuqviiXyTNHPr/ZR7p1R
JqJ/vbXeT3v5Uy072TEm0g2/+d+nfbSfOfjpD71e0YJdXNqjn+ID9KaY4L32
K0hqmsKbw4+M5s4wcfjixKMztCujV5Tcns2CwPR1xzzaN0yY9jLzWNgofCJ2
jDb/0njFbj46hzTw6m74S+HwncNhugIsTP7nM/CIduGehy7SIiwc6/yVtG6G
wkW25v6u1SzcsNHxPER7tq/wrw9rWOjOlZq4SluFJ+7SbEkW+DW374qi3Z3w
QDxjIwuvFEoEy2jbX9BsuCXDwknlaKsB2tlFPWqdW1iY2rk6XfwfhbO2sdMe
21loz5kdpEB7SuZBsrY8C5e9fi7To+3dpnGDV5GF+edEF1ykvcdNSPLrHhZc
ygOe29Ju3t/TZrmPhYTMxHeutG1GY95vBAtzttyX8qW9Iui+docKC3oH1x2K
oZ1yXGO2hxoLJqj8nkn7uXa6s5gGCzebmk6W/H89B2X4Qg+zQOW9uV9He+te
75ebdVh4N8E07qDNu5N/caoeC6sq82b1026Qffhm/1EW6odErnBoh6/nLCs+
zsJKw8bXY7QfiJp4HDnJQqgNy+4PbT3B6hXNRizILdwmM01bYuEBL9MzLKTJ
hPjO0P45K2H1kDELa/U2Nf+jXTIh4WdlyoKjTlzL//35u/u6yfMsJBmKBP//
+JtDs4MdL7EQx3Ns1//Pp9pjLcV/lX7/iirv/n894Za+sPfXWbhzuCrt/+sZ
rDkpK2bBAk9/V8T/15tZUhwdYslCmejZq/+/n9eM3Vs332bh4Enpn/+/X7P0
iIQUaxbir8jo1dOWjxeV32/Dgrf9QZtS2vPDXVOL7FjYs+30rWzarf7Tu488
ZGHYQl8pnrbDm05lUwcW5I9cVHOnfeLZEcbgUxZEytRcHGhL2zNUrVxYcHJ4
6WNJu+pmkIajKwsFAQWHNWkHXl5etvA1C5q8Nr07aFubOOm8f8vCc4+Fx8Vo
i+pdPhrygYVUXy3Cpr8vzqGmOjlP+vvZH59VS5uhrHkyxZuFzRevfUilfXmz
7JkiOpdrz1Ftf0h7j9TnDr0gFnj7hXVMaC8SX2TaFEL/v9gX7/20kxZxLw5G
sLCz1bhpit4fLnPODdyKpp+f0K7iZtqnp6uvTcTS3wOftFcybZ6RhJsLk1kw
F83ov0pbp/yurVwOC9dMOlBA77+1+f2TyQx6//1iGXrS/pFh+Eg5n36+B6KM
zGl7Re5x1Cthwd8xY6UA7f4Xf11vfWPBUj0xSJ3e//aazv7J/SyEpwcHONH1
5JvJ1bPbhlg4q5/apklb8q62SDSbBef5uSsW0S4LXPY+eJSFfRZJb97Q9Upo
ytfFfZKF66oBgS/pehYek2pxS6APtoPeg0fHKUzme8mOLO1DyLxv9+fR1m19
OHBleR8GlLxXZdD188e8g2bnVvVBb0mS3Rra+0yrT+it74NGOulr+0H3H8HB
vXIKfXgd/2SWLF2/18uU/wnb3YeDncUB1XS9v4vYlA17+zBYln3SmrboDeut
qw/0IWn0xoJMLl1vCnk2LNTqQ5wcw0eZQ+GPjcjCQeM+BF6aXLqK7icSHVrN
wc59WDtfrWgjk8LLvL1xBs/p8xkdu/all15fmJzLfNc+GDO1BKVo590WkDd/
24cWVVm7tXR/u8j37c2Oz33Q5lbF89H9MXznKY3c+D582bDdJobun1teXknt
bOsDn4N/zqFaCh8tjdzedvbhm+Ae/7AaCv9OHL6o2tOHFbxSfny0a9ZuEvzS
34ffUu0TxXQ/t0rhWlh878NdvtnK+yooJHfflZqe149VXAP3qSIKSopOHiI7
+mGgvvhcayaFxvMiCr7y/ZDPiP62mfad17FN6xT7YW687cOTDLp/9jWLSu/r
x77f/Ask6fyxxmNzoIJ6P1inV2SeT6Xr0ffGmOOn++H4y4AQOq+UR8oUuzn2
oyA8cWQqhK5na6onZtX1o9DEqtXTlc57IrdTMhv6Mf67b33iSwq5y4Wt7jb3
I/qgN6OMzmMbF5wZHOzox7swwZmJZxSosf7G6sF+eJWde6fvRMGxdCbJd6Yf
v06PeXY+pJ+f9Zabe2QHcMDCTdDRgu7vZW69txwGcJhS+jBHl4LnHBPrY5KD
YBmdUSik8+3yzpQg3oJBLH+1tpzK52LuI4cTe6yGcHVZ6qkOKy54IkziegWH
8fSKvf41CS5ue8e5CeYNY/41gzPziznI3vScb9lNNpRimnwGzDlYpnVbzlFg
BCeD96Rcpuel9s01dXZZIzh9OMzbNXUE8X6QZJlwEJKtOmJpPALjOIVl4jMc
ZMkuih+aO4InzoEO7ZFcaDx6sGJlGD1fDop/FqBzsf/n/d5/9dh47uts2qlH
7wPlGxfu6rJx8RhHKvYonXPs/tvN0WZDLCsrXpfOybPqXeZ0aLLx8s2Zolfn
6b4d+UU2W5WNqwpe3xfaURB/JJdhr8DGeichzflfKES0pB4VWMPGzO6Hi5vo
XJphFhn5TIyNFg7z25coCqHmy5fNWs3GW8MkY/UEus6m28/7uZKNf7LH7jhn
UaiwPPahdRkb7bVv/GbX0TmSqB6JnEvPty6/L9TRubH2wm4XyTlseOw9JxPc
TNcRplO5Hy8b2qFbklU7KVhsOeXw/t8wMmwrSx3o3Lb0mvnnRxPD+Lh515uj
dE6rTvNQ//N7GFa9Pick6H36StKB586vYUjr3Ohi0Ps+zq854OrYMObMqg95
S9eRmR0mz5jfh9Gdsve66SS978faHpqMDiPrevDWbXQd3DfvnEMLdxif1vKP
/7+PST7/6XGCM4z/AVK2pVU=
       "]]},
     Annotation[#, "Charting`Private`Tag$3846#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-0.9999975524088963, 0.9999999286323062}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.717331269160515*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Im", "[", 
    RowBox[{"Sec", "[", 
     RowBox[{"x", "+", 
      RowBox[{"I", " ", "y"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"Lighting", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.717331296784992*^9, 3.7173313794182873`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
sOlVnvNO5ZjnXhC+aWCzQ416HXJqGlz/br/B3fXmb+EjTDvuv+a5wn8xz3WT
Gj0DxLsZPV3qz+dXeDauYumbp6U/8fIzSx/eXfWucySm/4+EM35ju8QjNqx9
3qjvdYd6Eh9ucPeEacex2pH+xEub50p/4oWNnu7oRqcb5KySOKpmzDjvcOee
Hrbu3N5lGhfiKedfbf3+wX3qF/GaV0cXGpj1vvpF3O4X8YYf5c816tlF6Uf8
aryPiqfIstVRu/htl+lV59d6znJ6mr/1/0cb3OX4En9h2tH4Eu9unit+iJc3
+osf4glMf90xhh/h4ww/4o16bQZO3ojnQjvkjXhjPJf8EO8MPckP8eTxTb+o
B/Hh4IF/83cxeCM/xLOadmRXxIdhXGhXxDmO5I14VYw7eSOeCXZC3ogvte0K
euF9ET/EabeyK+C0c9kV+4f3QuMOfAjeI/bLakf9Il4M76nsAXhRvNfUn8/5
Hn6A+hMfCr9BPYn3g5/h+BJfD7/E5xHfDT8mOfzS71F/4oPgJ6k/8Y7wq7Rb
/s5I3zb35ztnaL4jfnX8zUGD/hqlcSQ+zshrHrLkxQPH7WLNBj1Ht46W3+C8
d+D6wJafFDkrv8Hf500yxzt/76T8BnHn5xW3tr5zTP0k/pHBxSPb/8q5tzMq
/Wn5Sat9+QHi54yekufzm+b6Ze3qJVfkHyjfbmjiwLWsB6SfJa/+cj5PMHTa
xVFtQ3VYytdP/H7Xee6l0PMg3+lF5+Zp616Wn+RvynxzFldackTzOP9d1kOL
R/169KR4YDu9TDvKNyjvfLy6375Prqi/lI8K3g073z5Uh9R8l3dJ/67uWfFG
+ec/xfRL/KhecvubghW7npKfpP454p96N8uSzapDEu+4Pt+juW8flH0y3nnZ
991/WtZbr/ok5XOGZ/z5aO4reh9Vl6sSNmbG4hOqW9rzLMfFr55J+Sx3Pyh4
4/8zr9ny5IX4VbfaxDlhNzVexFMdrTvl7CcH5Tf5/4N3t7R4XGa1/DblJ0aF
LyxwbZn8AOXfNeOuOgjxoduSNOjW9Zzk2U5W81zZA/EEUTF6yh7s+EF+0juP
a9ztOirHnfjXhn/FyWxn4++BNYujNmh8Gbduvp/m45arFqouSvkRycsWyZH5
rMZX+cStU+VKFd+peqkdb3B8KX8vPNX8rzLdD3J8bXnaK/F76StcePr8kMaX
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
naWn8lbiA89993PexfcUN/K5DTJGNezb+JbqNnxualNvVF5Debd0h89KNdwv
v028s2lH361sf6J9AsB7tpuZJTDspPwU8aqGB8U/xBOZcZHf4Dw1B+8dx5F2
mBnyxGmHKcf2uzBv5jnNR3Y9nOPoVyfncz+H3+A48rmVoT9xtvPvktEtlnx1
KbRuGO20gr/i+FK+D/wt/Qzlx8JPchz53FbgnzjbqVC84eT3L97WvK84yoyj
cM5HRTulSxbW5qjqNqxL5IY96LsY8E6mviq/Z8/XWvcCeRf2rO9EwLvM6/N3
kxw7lc/a8ybt2cYtPxDg+275AeKqI/G7RM41R+bezOVE0s8QLx2MwcNZp+J7
OXNt7QyB5n+offr/Lmv6rivSbZLshPWo1KY+rPoU6zefmfqb6mzE95k6m74H
sb0fTJ1f6xwsfcSDpY/8mF1X4b+nP/nB1CFVbyR+y9QbVe/leO4FD7QTjmfS
fkaecsRnon36eTu+5bjbOPm3nis/T/kN6C+/p+g7BXhjnZz1sd3gmXKsp72J
8eLflK+C8SIP5PvjqEWXP3RHSH++99HbkrRuGnFD8xfxt9aUuje9YQi3/Tbz
Nc4XZfE+Eqc/3IH3l+Nr1+vonzmOteEHaP+2POMH4n039h3Ze+cJzdPal7PU
+DH2164z8D21cY67ZYfy82z/+W/GP9Nv007/TNxw87RGR9Uv4s2vD8696c4V
8WDHjfTntv1r/yHwk+8NyNK8yD3J2+3QDiifIHuMvPpl14fph4lXNXqqv8SH
mX5pPqV/jsC8TB5o/5GWPPFeaJ92wnaOYb4mTv8ZbuxK7fA9rWPsRP7ceh81
P/rhft+d7XmBfo16jjDxgOyNeB3EReTZjkspz/arIb6iffp9z7XnEY4Ln/sG
40CMI9uhvVFe8Tzskzjbb4A4k3zyPbPjfMp3wXtH/S15zYPEe5m4Tv6Q/ulR
j+u/Fbo1Xn7Gfh85LrY+1JO87oUfozzx5PBj9IP003wu/6Ze9JOWPPV0LHn6
Vdm/9kua+E1xJvkbAh7oZyl/18Rd8l+Mb79CvMHx5f9HvKT9AJT/GnEO4yXy
WQDvEXG2c+Po8i/Lv3lY8Sr99pBOf20b/fKi8lDiY2H/jPdU/zTyihtUx4P/
oV8int/giuv4Xj80+og3+3205jWOl2vZFcdXfpLx0r4r8z6sOzVdJO3W9vMc
F+avExd+U3jFf+dT8k+8yxdNB67bflbjzvGNaBD+9ZGs59Uu+Zm7dMvuXXWm
yP6J9+007asES5bKPq04QTjf91GQpxzx62if7zXfl+7Qh/6T8Xtn6M/3hPif
6C/9sPYXW+Niz8uMj+kvM5nvznpvyU/elqtnXJp4Ujjt9otLDbuErTspO2S/
foNdUR/ayWvHjN3SPik/x8rXKJ/YxAPKUyjfD3ZO3iifwHp/qW8E8lPqzecn
RX/ZT8pnQn9V5wFPH6K/fJ7aM++77J7/7q+2kfXTPt2vf098YsKW5wf8e0R+
hP+/HtrhOFGf39AOn0d8GNrhc/nvtmeftydpi33C+e/emjwieuCQ/fL/fL/S
Jy9W//WRDcPpn4nPTxGDR3468+q17BfuxaqfaB3IvEwz3BXL9L5/Bnm//bkP
vPKKl3JnqBl82Tq0voj+p6gXd/LtOFynVcH7zvc1l/b/I+KM9Dkz6cGhgWee
u+MGV9x4//1/ZOcZcmdp0PGbf13n2JPMNzfOFf58w3tjfyz0zFlUvO6WvhNH
qJ2CH77xbMKle871HAdXvlwbqjsNPNO0+hc7njjTq6ZLeCPvFeE7Bh/YMmzq
Q7dxutF3ClUL1XP2GNxp5sXdCwV/brLqk5dOnr9/OX6mzXnhuzOMX1Ly8Eu3
7aEcbduOC8WHewzuDPTi7p5fntTds+OlU3lH5aeb7myXPvsgP9HICz9jnusW
Nc8Vz/uhZ0ujp+TPQc+CXnnFOdtPfnoi9WtXpE/qOxEjMnR9EWtdccf4B9rP
bf0qVv2KedP2dcFpE7ediYUn+qBM0+39d8WKq3MZexCe8/Ha+VsWPoj1XOjj
uw/oH+9zhZcr7nmu7DzH/Bi7jaVP4V1jhm1/tlZ40dRdWo2vdd83zl+y0yPv
Qj5WnN8BvNn1IvLTqViMnrFw8Cm8EPSx4+fCeK7ffpbfP/C0L3ylt3352z+m
FOi+tX0o3ksOe7DXDeY14xVrPR79w+/edhy0E0ueceMWY4ex8oKcgY73W313
JRb/Rbz2474HfWw7oT5lvePuHlxU9L3DR17GGi/gsXjOD/u0eeB7lNvoab93
bgGvf3CuTJ6cLOfEB26K7aM2j44I2fmecCdL4savnPWN09V5q9dJ6bPL+Ae3
hPEPku9ef2qRP7554Q6w/OTQ0Q1vjNp/38lbvWezlx02qZ298EsDvP7Endu9
Vqo3/+vn9wQnnpjbIeQnuydJsXxhh+du995P8pUbe0nyu+Env/b6Gfd7yHc2
8tJnt+mXu8/bLyev8f9uF6//d64bfpzUXn7cXqZ9p6O3fbew8fPubePn1c48
0y93tumX8CGGHzfg5cdBO85Jbzsu2nFWeNtxB6Gd+qad0HsKfV555x3y7EZ5
eXahj1PR246DedBZasZXeE8z7s4WC98Fnk8bntX+NdhbWsOncMy/7g+G/5Cd
Y16O8OLOTYxLBm87HF9nv/e5DuzB6eK1HwdxSKx5ZEnYo3njDr+M5W8pb/vP
5UY+lt8bZOZ3F/O72jn25HS1JX8+cRtVvTj0i0IhfKg3HtD4njTyjiXvWv5N
eDB7WIXwjE9j1etOVPqweZ/arxy3bXiwc99jNu4u8uIO5Q8aXP3CPBIrHqOf
bFtneumT0xa6Nj69Vgwey1996ZUXPtQr7zw28ZU72BtfOZ9kSLa9pPPY/b2k
F89o4jQnzMRpaufdcVMbHs33yLl1xIu/RPyW37QjvKJp33mruBePn2X5ul8e
x66LvoXn3jzqiQ/dpHhu2eNePJ7B3V+8uJO28PINBWc/iFUPTG/wWHkrx3Gz
d7zcZ+DtcQmP/m4YeLvygRdPj/h2lJc3NyP0rHTUi/eDnc/wxrHuKa+dCz8H
e27oxZ0ZsFu7jpTK8Byr/sM4YZLX/p3Vpp1Y30MRN8bKOxh3JTVxl9pPBf7t
+iHn/SE7PfJOGoyL/V2A9YevrXyBeHuL56qwtyivPbvgJxYPzL86lvfKE+/y
vtdumZc5Xnnhpb3ydhwoeb+4wi9u95uX/9dx/F/9ql/85pdn+cX/fvGSXx7h
F1f4zTv/a/zglxf4xRV++YWfn/HLc/3s2c+P+c0Lfn7bzz79/L9fPuWXv/vF
q37xrV884Jdf++WbfvOsXz7rF6/65Zt+cbuf3/OLB/zyVr+6gV/+4pfv+NVJ
/PyYnz/0ix/85lm/edlvPvXLr/3yGr+82y9u94vz/epjfnUqvzzUL3/xy0/9
6kt+cY5f3cYvXvWLb/3iVb/41i//8quD+dVt/OoefvmpXz7uV7f0i7v85lm/
eMwvfvaLx/ziCr+4zi/O8YuLfPNNn7qQX77pl5/65Vl+eaJfvdcv3/Srn/jV
E/ziT796kV/c6xcn+8V1fnUwv3qIX33Mr07rV9/zy9/96od+eYdf3e9/zSv9
8nq/+qFfndmv7udXH/CrH/rlKX71fL98x69e51c/96tz+tVD/L53+NVV/L6z
+H2/8KvX+dWB/epL/2s+9b/m9X71BL+83i9v8qsP+H2H+l/rZv/r9xe/ulPW
t+btevUqdP9Cmkb9O3z2cInzNb5T8/v52vkHxh7tvVQ45cMqX3x/2OlIp8ar
TCtfvXqh7+0rq418+v3hf4RTPotTLUe/L9c7x+EPKV+xUZM6OS+uFE75UoeS
f3Mg7wZ8b70r+ZSlp3b+cPAK4ZS/V6tB/UTV12EcL0u+2+aryb5PtVi47pvY
1Gvkj5lXO6dj8COSD4tKGbG8/VR8p1wZ9J4nHRFGebYT+KxS64bp5kvee870
kLADRl7r7IqY9l3ilC9i2nEPw1/ofGWjv3DKDzb6u00ND5JPYfgRTvk7hh/O
R47Fv3CLf7eaGUfJrzbjK5zyWc34cp2D1u2sM/YjnPKOsR/3HWOHks9eLvee
z/+dLZzybxr7dGm3/P6/vPbDJH/OD8o+ia9MO+da4Mhm2SHx7xqFp1tZcafs
jXjm/J8nbvP7LtkV8R8iNl5eMmm77Id4uorxCxc9u0H2Q3ziIbfEszzLZQ/e
88XHyB607tvIa3yJpzTtaxyJf2/00XgRz2L017joXBbTX/FPfI3hRzwTX2v4
FM+ML/rPyzywW7lN4pl4o2Vbn9VtuE88E3+V597Hr187JJ6J/3tkykctUx8R
z6rrNJnzcFC/g+KZ+NWJI99od3eXeCb+RbvWDZdmcMWz97z2SeKZeAUjL56J
nzPti2fivxt9xDPxB0Z/8Uw8ft6Y/opn4k0MP+KZ+E+GT/Gsc+Vfntzw54ld
4lnnk4Wd67r0+THxTLxb2dL3D40/K96ID2txZ/rhS4fEG/FMZZIvPt97k3jz
nmc/XbwRT2nkxRvxIaZ98Ub8++xnv7z+rvYp6L6J9UZ/8UA8semveOC6oGTV
UzQ/UX+/eCDe5LMiR5KWPCceiGd7OHfRgrE31F/iYwt8XiPv0G3qr/ec/vnq
L/GfjLz6q30S76eZt//2CfWX+NrKqaqPOHRF/SL+utFf/WKefq78jbSzr+2S
Pt77AaZKH+K5tz8oXOH4BulDPEnk5QknPo5W+1w/M2R6M/ffvauD5I141of1
T+ZpcShI3ojXn35kaHiVxJHUh7j5HbmK+hA/czNPh/hVF4dRH+KXJjfNlTLe
jjDyQ7z8re8qzR54M4x6Mm68Y3hw+VzvvQdTg3wu8WKGB4fPJZ7K8KB4Ruus
wD950D0Vxn5c8kA8g7Efl/ZDfAzsgXp672GYLz2Jw36kJ/Gfjf045If4CmM/
Du2HeArYP/vF+PfxC/O+sF86fx7vF/tFvIPxDy79A/FBeH/ZX+Lp8L6zv977
Jaarv8STwp+wv8Qj4H/YX+JdjH/gPjWdDx+EfyMPxOPDH5IHxtF94D/JA/H6
8LfkgfhTMx+5nI+I34I/53xEfCz8P3kjfgbzBXnTuX2YX8ib9/6NSeJN57dj
/iJvOq8e8x15Iz4G8yPnI0t/h/MR8WeYf8mz7l3BfE2eiXN+J89c/7gQ8QB5
Jr4U8QN5Jt4B8QZ5Jp4G8Ql5Jt4V8Qx5Jp4K8Q95Jj4e8RJ59t5nMkY8Ex+G
eIw8E0+O+I08E++MeI88E0+H+JA8Sx7xJHnWufqIP8kz8ZWIV8kz12W/jviW
PBMvjjiZPBPPiHibPBMvhridPBO/hfifPBMfhDyCPBMvi3yEPBM3fw8Rz8QL
IA8iz8T7Is8iz8RvIF8jz5b+4pn4W8gfyTPx0shDyTNx5rPkWeeiI7+w8twA
8lzXymcDyGddK28NMG+y8tMA8lPXykMDyENdK98MIN8Uz977diKCVv4YQP7o
WHliAHmiY+WDAeSDjpX3UX/Hyu8CyO8cK48LII8Tn/wtl2vPim4tQnWDOzi3
I2rDn5UOpQ0qTls/qUe/dtGvRdUrc/xRxcJRyguwPy8qQdTjFG36uMoLWmb7
uFT0isRRMwo+Hd2pwWrFt6Wxzr3a8Z2f5+i4RPFesunpblQenSSqnJW/V/fk
4/Hikc9s0N/Ou3E+RNSsxb9/emjVSsV7G6B/2JImY45vXqu84Dfo/0fl3m83
XekqL6D+xet1/+JxtqDiYepfouhbP474dLnit1HJuz2tPPq/+Vr3lP3WfRXK
Z/l7t1eeot9HbBKfJYZXXLiiXYKo5PfODWz0dKv4TIJ9lkOKT79245OtofpJ
mtTNc1ZJGPXZtgGJDpTYKD6xryJq7oImy/PkCIrPXr+dzDQ653/zdKu+sc6T
z4b4/BX62/lsc+73qjYiy8kT68VnSeifIcWk8AvLtohP7HeMWrt9ef8aPbeK
z+PQv9+8WYuiJ20Sn9T/XJkHe375OEpxeG/oX738t//mrbZUPCd93Lt6zirP
3YdPsharHi+Uz87H/umRif6sMbX1XvHM32bXqtZL8e0B8fwAdfG90T/82eXQ
fvE8PvGy96JXvHIDqSNaFr29WzxjX0hU9V5vpe5YdZN4vj1o1kfRK+JFTbDq
Bt948tmOygtSQP+Alc/ifAJ3StMe7xcatFM814T+C8d/9s8n9faL54fQP9+o
qnNmJTkgnn+H/gdufPiowZS94pn61+j8PLBg7VbxfAf6H1p18++b2SPF862Y
9+hft1yO1Mme/R7KZ0fju1PxGkmbTdl+VDyb/SuP3C/3tZ3d/vFJ8fYevoNV
Sz7naofpe8TbpjvnLlQe/TRWHaC6J5+NEG93oY+dz46BPl8UulDyqzdC+Wxp
6HO695sbJm2OVn8347lVB11xMvcJ5e9zYvi/6e5MnuPDZ5VDeesd7BNqeqHg
gLdrn5X+xm7vx8rHW3vy0ynSfxHat/PTh2j/m7yZdk28HC39zXjdcbfsz1in
7+KL0n8+nvvjgAWvNYu3W/rfjGnnlDv/1NvtDsXbI33aevLTBdLnKeSrp968
ueyAjWqnZIz8PHdazHk7f6gdz2/ERLUzFvI/xpxT9KvaOYP/3+LpV5Ftbu3Q
/NjEkyf2UDv8nZYwPM2kZes1T+WIsZ+rTvt3nYtb0ofywRPMV1L2avDxmHNq
/2tPfhfKd7KgnZ3Ll05oWiCU3/E3Tc9ya4YnOKnnYnydzuCZz+X+qXGjh4ZH
vnFC/uVrjNur89fPbLh/QXGCOdfhZqw89DNPXrZIes7Gc+28DPvRnOUzDg/N
UPWI4gT+nk/b4kT2w+cUR83Gc/fAntmvjcb+nQ9h/+wX3lNnwNvJXrYsfED9
6n31kx/aRT92ZtfPuSdhx+OKi0Zh/+uXeO/YX/iNWHloc08+Fcq710GfslY+
he/nzifwG+znD9DnSqme55b2Pqo4h/qUgl8iDzehT3n4MfIAvx3YBr9HHt7B
/r/q8JPkYazxq85B+FXOI/fwfbIg/LDidvjjZfDbmq9xDs1M+HnylsTMC04V
Kw91PfnRTPF2E/rb+RH2/wWqYp4ib2OgfyXMa5xH7kD/g5gHOY/wtxXmTfKM
c0qc0ZhnyXNi6P8Y8zJ5RhwSqIx5nDzPxX7Qs5j3yfNREycEBiBOIM+Jef8G
4gryXNzEIYG3EYeQZ+obgbiFPCNOi5WHVvXkR1PEc0/o/76VH2GfYmAO4i7y
fAT6V0ecRp5fg/7DEdeRX+qfGnEg9ebvA8SN5Hkk9P8RcSZ5TmLi58Ckwi+e
/fVyjnjmPtQyiFdV5zfxbaAc4lvyjPMzArMRD5PnKBM/Bz5G/Eyecc5fYCHi
bfJMfctZeegRT34UyvcTQ387PyoO/T9HvkCev4b+fyO/IM+joP8byEfIM/Vv
hPyF/N6C/puQ75C3BNj/+4fx84pzGoGPxBdi/HzoOwh+z8IP8+8MmMd3163w
25stLiouSoL2V8KfE7+EeKCHiQfEw6vPcQ6okVec0ADPuWqeqziwBfAXmI+I
U58qwdT5NiS8ovcE85o7AfMa8QuMT0z8I7vaC317Yd8x+fkphv9L7qCk79W6
U+Wu461vhNbNEq9o4eTtN7TTuM3OV9N+uiH8aQwP59ycBVt/U3LtbdnDIMh/
beQVJ9e01oMRL2/h5Gcc2ulr9BcPWAfi1kS8QR7KYn93UpzPwH61sdaREi9r
4ezXxhg/v8+t/Mb+2S8z3RKeJab9jW6NK92+rJrqouJP/i5AvKTvksDHGVxx
ZjHouQznVZK3mXhuFvNc8ZAOz23b8MSmLX/f0Pt8nvV1xHXkYQHWb2TFuZ20
h86mHad5I9MO+1UJeBfTL+FHjT5ObejDft5H/1Za/dqN55bGuZfsVwTaHwPe
ZA/WOgriUy2c/dqG/dDNcZ6kd51DaP0V8boWzn6Z+O2ck9XYrfA/jb05dWG3
1D895JPCzqln5bj3MzoNLJzj+Bfa74n3kf16ynN08F5zvLIb/+AUhX+gnm8D
34t8hHhr6Hsc/od+DHmT0wV5DfHXEccugR/Td6j+Rr45/B55yIHnroL/ZL8y
A69g9BTeBv/uofF7IT8Pfb5GHkc8JfQZAz9vzadRk818qvk3OXDOs8Tfxr/7
0NTTxGcPE6+6i0z8LD/A34e414B/H8RvwqYGJ8990M5FxL3EiyDPvWfyXPHW
HfJ3jLz8HtZJuXdxfwTx/cATmefKD/yIdmYi/ideGM9tafJ9tYNzqtw6uL+D
+ErgrYGTf6zDcpl3EB+GvP69QqduXM9+VHxFoZ0GuLeC+Grg3wAnPzznbN22
1ouvvRGar0P3Zpjvd7RP/mZGPsi/l/E84IsjcqR8fkLzMttvX3DoB9/PPSZ+
iL+Y93F0xi8uiQedx4b7Edhfyoftb/pgdZnTaofyOfF9k/LEm+N7KO32LZPn
usiXZc9cF/0wzX8iE17fJz9AvMnkorVXp7wgPu19MeSNeNkU+b7sXeSW5O19
DZQnHp62dc/LZ+6IT+Jp8f2X81da6I88Xf5hJ8cF52yQz57WOnzi+S2cfNrr
7ckP1/N/nGrq9L/ahNahEV+B80vZLxO/bgz7xnwfD3Keovx3LxqtyD1zhdqh
/D3znV31FO+9VWO0Po3y18z3esXJusfTtC97ID4N53Gxv2xngFknEE5/RflP
TX/VDuVzmfUGYZQnPtysT9B6AN23hnZoD82s9eHKL3zwWOuNwZt1fqzmHcrD
rhQnUH4s+CHP3vu+xmi8UDdz6qEORvkIT51qgeQLoo50AvapPBHt/4JxV3yC
+GEU/Abt015/S/7Zzlqc38VxtOU5LpRvCrslfhX9WoV6IPHC0L8L/AP5t9eT
e9fX3XUaw28T38T7PoDrfUE7X+LcG44X10Wsxnob1bchnwf+RPYMvDn8Enlg
O5mxXkj2DPnnln/juYmF4Vf1PQv4A/hn9su+f8r73fCR8wTzJvHTwG8AJw9s
h/MCeShh5k3nKurSxPujrnXSmq8jvfzLfrYArw6c/PC5/5p+heoMeG4D1OeJ
D8Bz/0B8Qt54vl0qzL/krRza+RTzPnGuv444saXXgIfR4ifWfVUY93C0cxhx
C/vF36eIi/j3WfxeBk7/g++AgZKIu2gP/HXwfdOK3wITrbiO30mxftX+7hyF
787y/9wXUirN6I5LbxwTn8R/Bg/Un+vlHuP+I9o55Sv1/qr+/naHxCfjgWcY
R/Jp34tKe2M8MB7rlJQX2PsBIU9/kgXr0OjfiJfFujXyQ/wx1r9RH/u+J+L2
fU/kjXg3rDOkPdBuVyJOs+JJ5yvLztlOR6yf9H4XeOSEgU+2T7wgxsuKh507
Vhxu3/dE3L7vie1zXFyjv/3+uo0sP8k4Kn2jE8vGVTuldogXMf5QdkK8hfGH
mt/tfYi0H3t/FvW3cfJG/4k4UOOle5yhD+c14imgP/urdXHgh+1wHFdb/HAc
74Jn6p8FdapyyO+IT8V3tOcb82yvcvGacFNPO6f4k/hpfOciTp6TQz4V8nGt
u4D8rK+ORt+sdkfxYRHUQy7NGdzkp8/XyN4amfqDewz3WRDPCnwRcO/6n43S
h/FGMU8c2F3xXibIb19dfF+vy6F9BH3QflLcV0L8ZReD78W9UexXXbTTCfUW
4mO7mO9394f+3z0gB2U/UajD2HZ1E3oR53M/NvUlZzPuuyHeEvhx4HzuarT/
PupdxFnnCbt4t9OmE3fE26+oY0SgLkc8P+KZVYWj19d/cUv9Ggn5/6B+SPx9
yFcePHPpi67XZJ8LYFerno+8kLX3ZfkZfre9Z+xNz82GPGWTea7aSQ+8idX+
I9jVPGNX0ic75GsYeb0XdeBnNnnv0WMcGCuvYd4UDR6IP/Pav/zJUuSzLVDX
Ir4BOOtdtP8dmB/+yFy+9rXCOzQ/Yhzd3/Nu/qh5wY3WfqIjseqfNXzyxHWQ
dzDuxAfh+/LQmHtqQvsLaqKeeRR2RZx1ztUWzvdiPe5dIs73KB/qh5wH+V78
Mz3mu7ZwvkeJ18S8j47XHx50t1r1Vf67sqZfofqAlx/xTz174n4l4tQzM+qr
nJe7Q8/VTsz3euFNoGfeuTH+SuN42PDpdKxg5ImjX056yNOPtUd99V/ow3HJ
3c20c8aMi/BDeH8ror9ar4h27sIvEWf9tu5sL06/cQ18Eqef4b1X5BfrFpww
rEMgzjpwTjNeyu/M7/EwrGdQPl7fkyd21/qEkujvazONPRAPoP1rq732wP7G
s+rS1LMK7NmK02LVb/d5/W1o/STaj8L8Qpx8NjF2ovg2A547GOs6iA+B/nXN
uAt/hOfuxPtOfAX89h94373ris86zeA36AfuIw+16+Ep+ht8LuZZ4lnhn+vB
H5I35ukz4D/J2wCLN6vO5qxFHEI+U/X36COc60P2wJ9T//lYR3EX/p/6cF2H
PV+sBn4V8YkVF7l2nGzfS6I6v+XnqY99PoniNOCNb237qvDw6/JvPO/iCfye
/BXk56KuonwceFXTjvwP2zkAP+DdFxYda3wZZ36Hdihv3ytEfVT3QJ2N+hD/
Gv0iz/Z+WPJm3/tD3L6vx7vf8KwLu5U9/wO8iYV/inZS4nsfx8Wuf9L/YP2S
i3qR4r16nnVi01X3Y/xZw9SjxAPbL4l6F9/HXGgf9Rzhh9DOXFP/kf+07g20
6i0H3Yzee2oCnE8TA/eubz/opLXwRsAzWTjzR5yXLnv2q/tZ99nJPikPHqS/
7u+D3+O8Fr+/pw4Wqvcif3lk6kWyz16WPvTzKdFOXYyL6rFoJ/jyyPAtTUPr
eFkvDeI+F9oh8Tdwnwv7yzyxq6kX6b1mHtoT+25o/8S7Y38Q7Yd2UhT7rWgP
xK9g3xZ5Y77WGPvy+D4yX2sFfag/z03PgPP2idvnunj36UTHigPtc8X5XMaf
3XDvAHHGq+2AU3/rHP5QPgs/Nh51VNU5Lf9pfReO5R/oZ1agru6tf56NZbfW
Pbn2d4pYfsm+94H9YvyTDX6GOOOfVBYeiXZaee8RC+wCzvvFvPZ21okAn8Qp
Pwg49bTvayAP9nkmxDvBrpZZ8519XwN55jgmwnnstGfWPTbg/aI9E3+C95f9
pX+z/dJR9I/rVbTuy7M+dmQY8c6efHxGGNu/hP7+gHaI0077Aeff+p6I71bE
qT/Ph2c71n1hal/7JcEP29U+R+xv1ToiPCcHnkucz88HnH6M+qwwPEuO7/Xb
kNd3Lvi9LZCnX3ryuacOIz8/H3miHXdt9eJqpxziUlv+hLcuofk3DdZL2O0k
9OKSZ38jJvy4blTve2qf+ACDh+Iu9LcHcGt9USw9ifdC+9b6jVj87EQely7L
9gcltobq9mHIO24A53v0H8QPGxHfeuedKVinXcSad04Z+877Ybg1Hxn5O6XC
ve0cNvJnPo4k3gL2Fmm915/VjvM8WKeUdW4b5X3O33ayW+fkkJ8213r/+HL3
+Vj209HgsfifP+xyivElt8Tieb/BY9W16mc4UXPYe+tjtd/O+1zZVTEjH0vP
tl591N8c1rmU7G8767wafd+xzltjO/1res8H8+PH77l+4/X/x4PNp9/4+unv
x6ffuPj1189+/Pj3sxM/e/MbF79x1/kp3A+6rviTUy+X6rwV4oPbnXpnzuIx
OteDeLXoLZ/37uDqHAri2b/9uVj/yesV5xHf8FuX6r8mXq91IcQPfpGy07WC
QeUJxFNXfFH7u+ULFHcq/s2T91bJ+OO0b594TiOveYX4SdO+vt8Q32T00T5q
S3/t+9U6FNNf7VMl/pHhTefycN4ulLjp5is3g+KT+PDmY4fsjp4sPomn7pJ+
36BXm8Un8Q09RnTN3XmH+CT+bNGNys2GbBef2ucUvBSWeehG8Um8/qW3w5Pl
WiE+tS8kQdUuE/pPEZ/a127kxSfx8aZ98Un8ldFHfFr6i0/iKUx/xSfxHIY3
7VO1eBPPfG9ODe7XtdrIjeKZeL7RY450uDJdPBOP36Hl7nNRe8Uz8RvLzux9
r85B8Ux8W9JBWy+OPSCeVUefMaLvewt2iWfiC+/12HL9I1c8Ey9U+4f0FTPP
Es/ENxl58azvA6Z98az51ugjni39xTPxl+1j+iueiR82vIlnizfxrPmzSqt1
kR/sFM/EE44q/82vR+eJZ+L53TNzv/ngqHjWeqvGb0QUHHNKPBN/fVrOh53r
nRDPxJMXKZ0tVcpD4ln+9e9RN4/l2ySeiVf6qft/TixbIJ6J/2rkxTPxtKZ9
8Uz85LZnfT4ufFI8E+/6ffIB9SeH7heTnh2nd10dDO1j17paw5t4tngTz8yb
nUZTv3zt1j7xTPyHjzq9+eLIIvFMPH/Dqz0upDwrnolX7NN4SO9rl8Sz6luf
5/nz/OCL4lnrMdPUDW8254R4lj73xqZ88dl28Uz8cI7zJb/pv0Q8E69l5MUz
8XDTvnjW+lCjj3gmHjD6i2fiP9d9/ma3B2fEM/GShjfxbPEmnpV/7FiXpn+p
g+KZ+NNft9aun26xeCaedkHTUc3nXxLPxPvhvjzyTLxIwlq/PzoXuledeN86
pU7f2X1WPOu7Qa40TbbM2Smeif9Q7N/piReFeCbey8iLZ+I/m/bFM/GSRh/x
TPxH3BdGnoknM/0Vz8QbG97Es8WbeGa+dWXAgwM9K+0Wz97vGEPCyDPlE1R5
Z0OnAqFzsogzbiHPNk6eiW8YnPJYiqunxTPxfmP/SZ190EbxTDznr8uulK4+
VzwT/83Ii2ftYzDti2dLH/Fs4+SZ+J3KMf0Vz8QPGt7EM/HV9+v+/kuB2To3
kHnwQgtnHvwY48L+Eu9h7CqM7Vvyig9Zv6zgfb+E98L7RZ6JB+AH+FztMzN+
I4w8E/8Sfob8EM8H/0Z+tE/a6ycDlj7Sn3Fxa68fFp4Yfph2SDw9/DntkHgf
+H/aIfFTmC9oh8Rfx/xCfogPxHxEfpRnm/lL/BAfg/mOdig9MT/SDolnxHxK
OyTeBPMveda6Y8zX5Fnf97zzfsDiTTwzzzjrjSuEv4+4gjwTT2TiMfFM/A7i
GfJMnPEPeSaeE/ESeSa+FPEVeVY+ZOIx8Ux8G+I38ky8EOI98kx8N+JD8kz8
NuJJ8qx1zYg/yTPxo944NmDxJp5ZVyvqjZOFj0ScTJ6Jp0W8TZ6Jb0R8Tp6J
P0c8T56J/4b4nzwTb4R8gTwTf93kF+KZeFvkI+SZ+ETkL+RZ67sXm3yHPFv6
i2ftj0E+RZ6J5/bmZQGLN/HMem0N5HfkUzjyQfJJPCfyR/JJfCPyTfJJ/DDy
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
   "], {{{Directive[
       Specularity[
        GrayLevel[1], 3], 
       RGBColor[0.880722, 0.611041, 0.142051], Lighting -> True], 
      {EdgeForm[None], GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
Y8dMZO3Mba+Sx/J8bpucfJjXcvut5E2R5wGX93NhGwk++JrCubnYbP/YbiHu
vp/wo/omD6v9YXXO2YU3uV7lz6T27/Dzbsy9vpCjxV4YfHl8+oEqHx4574j9
I/D8AwvvwSDmQC4vObrYgeTb3qV7vKd73S15fFjPGBsvZJ5fv2bOEf1f/P+a
0H/yyth7xR6Sb1Pv98GmxbYlp5bc2nbCqwOvAr8ysXCMbKfSawHxOeKcPUrr
HcbhD8G+xc69oXBcin1AHGDyZ8nThUOAS7i7NG8KN7+Tnn2jyLlY+B2sHeRt
kk8D/0Ue1MJgT2JXkq8Dv0ZOFBzXn+TLlN4nwH6Bwfja5CBl1s/9Qn/o11aV
9waQn0muD/YT4+QFlf8rdWya/E3600JypMrXTR1zZx1lPSX3nTzTpsLtE+eu
s5ZtLbld7lwLfNnmuXN0yXPD1yaGuzFx8ty57t/k9qXxqfHx/smbUX9WFvZv
8XPxRXsltg2Y2+QtEQvZAB67cs46+a7kKh0Q5iZ6ADuhQel8JLj4dSrbOYuD
vno9tz9Fjh/2ITGwC4WbVc6Pn6Pzj+t4LnIOG3ENeAf2ot2X26cgj2tIYj2D
L3xo6VgV7QzN7a+Qx/Vwbj+FfK1tK+fQf6SyJpX3LaDDH82dN04O2DDhpyPn
njWtnOs/S2V36Lg3cg5YpzDmGfvbVc7F/5j7pLYxsDUaV94j8YHKm1fO0Z+X
O2+O53oAjqty3jN5dPfq3JDIuWqP60h0/mbJQYn7hu9G7BI7iT189ybu588q
377yXoJP4BV4d5Fz29gHgj5cozrbVN6rMDt3HjZ51/hpxIhXh+9OXPiXoN+w
bbBhTi0db10TdBG+JzEj8obwPclfIo/p5tx+K/ly2Ej4PORu4AOSL0TeKTmA
POOtifP+iW3ic86vbGcwZrCBieFOKu1bkQNBLgl528RS4Pvg/frUnE9LfjHr
+1M6f3TlfS/kG5NfTg75/fiJlXMLppT2r4kXg4nFsMeA3FrsUuIqwwvHjNiv
SG72gsq+HPML35m8enJ3GwX9gx7auvJeoJmsXbl5P/IP383N45Gj2Dj33h/q
NMm9J4ix8VZhf4w851aV9+F8qvKdK+9BWiK8S+U9OUvRVTpW1dlG3aPyvqPP
VbZ75X1Kn8EFVt6ntBBupPIep0XCLSvvO1osvJmOzRPz/OsLf1Rnvndd5l2d
4wRb5d6TMkOyUe69KtNz+27EpMmH3zL33pNpklvk3pMyVXJtHYPqnFfwWGY7
ln2Q5APgc06TbF15z9Xy3H4x/g4+9q6V9yYty50PQN4FcUZyV9iLwZ4MeCF8
GfLJ96q8v+tL7DL6nHgN2rLyPhz6vEXl/Uj0s2HlvTr0E7sH+4d1oVHl/Us8
7+aV9+1MEX47N2dLzi28AWsBawIxd+LvrMXv5eZvyb/Fr8TfxO+clJvjJTf1
rdz2JPm6O1TeDzZfZS0q7xNbINyuMheGft6nMtf2tfCelfezfSG8b+U18i61
077y3lFsqvo6t6jO8YiGufcK0X989gWxc7bfyM2Bk1M9MTcHTh51m8r7nb6C
J6kcC2cOkuP/ieq8l5hrhjc+Aa6u8p4KcnqJtZGveXbmfcpvBLt9eWVegHXn
+MCnkKvCng724LAXh7zW3VnXK+9lZu9f88wcEXwB8Un2FrAGsRY9x5yJnEPe
IXDFD+n8Q7n3ypFf/W5qW/d0XXuSyvePnINNjhaxYvK/2AtA7IwYGvldxILI
B2T/GHz1LplzRyfVnBtGfulu+JeV95HBb7fKbN9j58OBs6+QHFG4aLh34lzE
u1jD34LzyLz3gHj9IZm5UPht8vaXVJ4n+E1wm3DX7As4Vn09NPIYYG8DsYrD
VG965Rwg7Hn2BZOX0BIfN/e+QvR828rcMfsy2L8GZ86eAp5nUnjG9rl5VHTI
gTr2ijyPns29D478fPY+E+9m3/MBuflbxuF+uXMUmb/YL++Hd7Kssg+MnbB/
bo4XvcReZeJ87KUiX5y8cfbCkP8Np83eTfay8L26Jc7L5ds+pnba5ebqybef
kJtHxSYn/xaba1hlvgDeoG9m/w0/jr2Kr+Te78b+ArhO7Gf0D3H5hhoD7Cvh
m/Ht2PtMnkCD2DwSMX3i++yVJy/xUZ17vHKOKLwi/OK2uW0/7JZtcu8nxWYg
T4B9RPSHXAv2sWOTs39tbs37d8izZY16tHKOwYax/S/yLsi1qJM8IjcHztz8
oHIOGTbVwfq9Q+S9CezpI/cKbhk+mTk6qPK+vxq2P/Msd1yDfQ0fpY6DMmef
CT4OfhNxYWKL7JvnfwaGRt7DvWfu+AjxGfZnHhrGM/nM2ADNMucwk0O2MjXv
/bnqPy+5W+V9reyBapvbdmWfBfF3eATmKXukWmGTJ+bPv4gcl9gD3R15HwT+
M340sSz8NPw19tUdlDt+xL4M9lBPqVmnsGcJTpT9WfynBDbD5yrfJfd+XvRt
q9z7dlkrycEjjg8HShz505r3rbTJnZvK+sv75T2zP3rv3HtCWa/5rwNimLxr
4hrk67I35zidaxN5P0iL3PttsQP/k3uPLbboDrn33mJDbh/eMzb8zrn3I7NG
DM+9h5e9KswT5ssmwT8ip3IS+in3HmfW9+HBnmEfEPu+4OjIF27NvSPbFeSZ
t42895q8+jbobsl9csee/ll/de38mve2kAtxIO9XdfbKrXsZD+wzRZ9vnHkP
Jn7iH6n3ZbPvciPmUOKclQ2Iy+Tel41NQhwffTa1sq+Iz8i+8hdzx0zxr9+s
7OOxl/PI3PE48mPZk0VO+djU++jhjtHR7OGCcyV/mb1J7FFiP90Q/X4x8j6g
zol1F/N57xBvYw8dudMHRt6nzvvivcFxsqf+H243894NdO2oyjnfxI14L+Qb
k8u7XPiCxL4P/n6H3GMbzuqdyj45+9zJU28e1jv8RfI2yUMnxnxw5Ljnjrn3
g2PbT6zsY7B3/v8A3bLMEA==
           "]], Polygon3DBox[CompressedData["
1:eJw1nAn4VdP7xc+994zXFEIyVCpkSioJaaARFUUqQ2WeMosylXlKqEiToUmZ
IhnL9BNKqQiliMicWZn/69Pa/+fpPN+9zt5nn3PP2fvd77vetas34LyjB5aj
KBocR5H+RQuyKNpKf+sL7FSNov8JfyTcM4miEcJH6+8zqntWxx3CL6n+fdV3
1flbhV8XXil8jPCdws8XUVRXuLXaHy+8RvhZ4cnCQ4W7qn0z4X+FDxGupFF0
bymKxuiIVV6i+u1V31T1DVS/dR5FS4VfEj5W+Df1t1h4rvAo4WfUfqFwB93/
euFXhZcLHyU8XPhztX9OeIraDxP+WvWHCp8k3Ep4oXBN4d2E6wh/I3y48GnC
rYXfFt5auKHwzsKLhLcRbiRcV3it+n9ReLrwdcKfCs8Wfkj4au6v9gcI9xI+
QPhZ4UXCHfV8NwivVPtHhceqfrDwx8KPC48XvkJ4mn7/NL2brfRuOguvUv1j
qh+n+iHCXwnPFX4kdn/Pqf93hDup/xuFV6v+aeEHVX8V7VV/sHBf4YOFXxH+
ULi72t8uPE94lfCxwncJzxZ+W7h94t/3hXBL4eN0fUvep/p/SfjR2Pd7PvP3
6az2Nwl/pvpnhCep/hrhT4SfEJ4gfKXwl8JzhGfE/n7PCdcRPkS4r/DL6u8D
4W7q7zbaCx8k3Ef1B/G91P5l4cdi3+8N1X/M+1b7u8E6Py/2OO6hY63qD1R9
b507UPVvCn/C71HdSOG5wsuEjxS+RXi5+n9YeLTaD+J9VqLoYk2gD3R8qvJL
qm/MfFB9f9U/ouv20PeaqWMHfbMt9f1eVf3jqu+h+r3CfPtYuJHwPmH8rRbe
U3jvMN4+Ed5DuJlwbeEvhfcVPib8/kri8bmjMPP5nTB/RwuPZzyrvqvw7sKb
CX+k+t2FT9D5z4X31vMdpueroed7QXiq6o9S/blqP0B4M7VbIdw4jPdPVb+X
8EX6vTfr2m107Ktrp6jdbioP1kPMVn8j1X6s2v+i8y+q/ST93VX1E3Tkqr9S
+FyeR++uptpO1vGIcDOdP1rtN8uN79X9jmR+VNz+b/W/SuWxav+g8Aa1n6v6
W5l/qkvUforKW+j6Wap/QLi76l/TuVbCxwufiv3Q9ZcI/6Vrrlfd5+pzicol
HV+ofIbOXVb2O9pOfdXSdZeU3X57lXvr+q6qS3T/0YxvXTMwch9rVH5V1+/P
/FHbU7Cfat9RuKz2U4RvUf0Pavuu3sdr6n831W+q+hVqv5vqf8jcH+PrdLXd
T7iW8Beq30f17wrvINxCeFfh94R3FG4Zrt9cfT4lfL9wN+GlYfw0F26Ifdcz
PqC+F+j+r6v8lI67hVcKt1P5X96BcAMd/6n8up7hMF0/QNefoeubBvu8Vrix
8Jmqb6prv9K5nXXvnVWvy6LFwV7WFdZPj5YGe1kn87qzJNjbRzI/78Fq1FO4
efh9X6m+ifD+4fd9LbyfcAvhnYS/EW4qfIhwA+EfhfcXbiVcX/gH4ebYWz3f
dsJNhPsIz1D9k8IHJZ6PBwvvIrxO9c2E62duv0y4l/ADaldfv+9yvY+nNX5n
ZZ4vh+r8MarvILyX8B/Bns7V/fbBfgj3E54jvBv2Xvgk4cPVvg3jWXiScMvC
9mS9+m4nfKjqG6n+92Bf2wnvLvxbWD/aC+/J+A/27zDhPYTXB3t2n55rRz3v
fToS9TlReBeVn9BRW/hF3W9X1ku1P1Htf9bHujXymPxF5dmqryFcT/XHqb6B
+i8Yj2E93lTfeLLwXcJHCN+u+pHMV93nQeGGwvoTfRjG267CmwgvD+P1JLX7
gvmp59lUz1NS58+rXEPH3uq7ntrrdPSu2tdjvggPF95J13UJ30fNovdVX5/f
q8YH6tpvdG6Myg/qOEa/5Rodz6p8tq77Hn9EbToJnyr8NfNBeLbKL2S2z4cn
9i/2VJs9VbdG5/ZQ+eTEY7uZzrUXfkXP2xx/R/c/We1P0fVdhDdRu7bCT+jv
PmrbRsdclSfqmu56lqt1PKPyVnr419T+idjj/WL1dwu2Re2bqW6hcE2Vv+da
1U/WNScKL2bNUfk2tblR+DqVO6n+V+E/hP9Sn+eovC6zvbxU/c9U/Th909Wq
31PXj1d5K53fXOWlOrZWeb2u+Vv1/+qa81V+hucT3kL3f1zXv6O//YW3VvtL
dc93dDyv8s86vlTd72r/l+r/0fXn5X6/x0W2CbNUHsi6pfKXOlcVPp9xLLw/
31+4Me9U5aPU3/0qz68Yz9KxQOWT+Ya69mThU1Q+LbWtxkbO0/X99Hsbs96q
PF3P+4euqaX66Tr+xNbp+En1E4UfVHmDnrHC91D79mq/WH8HsJ7p3GXqey+9
/xNVnqbybNXvXPjZ3tK141V+Xe2bMld0TW+eV7iXypnOnSN8qI73he/S892g
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
bRf6rGUV5wzIHeCDE9/DIcJ1N0nMLf4fS/Jf3g==
           "]], Polygon3DBox[CompressedData["
1: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
xHuMtvmryWVSxX/b45vO1yRTN7mS/1bZLsquxLZjy7Ft8Z2P80cm/X1Tmf8+
1huzBfsc24B9g3XG3sG2YcuwE1h/7H1sH7YJ24yVxB7MpPtC7A9fYm2wxdi7
cm/KfRnPlb8+xoy1jjHEfOMb0yVYDX6XslfHmRFbgE2MM3bMVb4pFcVqRi7W
Et+cimG1oi76N18r9pg4r8WcjDnD16BSWJ2oi/7DX0NlsLrxEL2n77V7Ls5E
xjE+6o91KNOArojzUJSLecS3o6qxX+amZ+8TmfQsHmfyJupahZ2Mb2qMT65d
rIV4rnwzKh+/C/n9sV6jTJzL4rwW+0bM/dhHqCzWMNZMlOerUUmsdow15kcm
3bNj724aY433zregCnGOjZy+tDKuhdhG7A2sufdUN85G2CT3WvAH8Z/4bvFs
3OsY46dTfNeYb1iH6C+d5rvTtVini2epQtn0DBZnseGewTf4z7FHUm25zjFH
453wDakIVj32kpiDsTZifHG+jz0n1jXfJd4n1p5vrY+TtdEn3knk+O/wHOxm
rCXWn++Iz8AGxfyI/vHtaRo2MJ5/jIP/MJ4rXz/z6+tPqsX7NY7WcouwTfG7
K54nnYu9OvqN9Yy1G3sWXzfz62c8uYpfGHu0xTffBjsvfotj/wfKpCIe
           "]], 
          Polygon3DBox[{{2506, 1303, 1155, 1154, 1499, 2170}, {2307, 1027, 
           1026, 1778, 1421, 2556}, {2242, 1600, 1776, 1014, 1013, 2243}, {
           2147, 244, 942, 1807, 1780, 2585}, {2332, 1693, 1130, 1131, 1694, 
           2333}}]},
         Annotation[#, "Charting`Private`Tag$4175#1"]& ]]}}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFlEtIVVEUhs89m3POvULaoEkZ5CMHRUpQQS+oQS+zBtks4iZCr4GGlfRQ
MSx6KFjS4GpDo0GU2ihoYvSgZil1qWZBGBkEDaKJEvT9rAUN9v33XXuttdf6
179PbfuZ1s44iqI+VmDV8XMiF0WHwJFCFB0Ap8BVrCL7CTBlrSNoGdiA7RT+
LcFiFLsafJ6Pohn2Tfi8SaOoA/8pcBr7O+yN2L+Bu7Ef5947/G8m7jF4JSMP
tj/4jnI+n7P/S4gfZz8IlrEvZ/ViLydRdDpn+e/nzSdPnoep1bMNvI1vK+sX
/tVgW2w93+VsM/sPifWl3J8qoqiWWo4Sux2sLNg9T8hdxVkRn0lwD3GNrH3q
A7+9YFuweptiq/lFYueviWnnrJn9QLA82hfJeTC1/avEOBW3CZjAw0d8v6dW
h+qpAfsz40w+u8gzwnkV+8PBejoCTsbWZ2XOOCzFVt/6YLEBLBFTD56jhqxg
vYg37VW75rDFa64Oxvcx51yciDfdW2At5Gxe6lf1j1LT9cTmrvlPew2azbzX
pHrkoxrnwJ3B9pvAm9ICPped15LPTjjq3HZzNsa+K1jektulDd3bh21HMFzj
mpROusGOxPL9To0LcfKXmJxzKC6lXWl4MTO9SrcLmelAHGg/EZvPSdZsapru
JPc9/FcGm2+L61b67XNNSpuL/l705s7n7V7d1eJv6mqw2apmaXyBnM+4r1gw
/Wq+OsuIWYrvT3z3u06kX9W1NbbaLjmf4lVvWW+hpmCcTTu30qi0+pK7noKf
Xdua53hseVu8x1l/y3pbbyusL+lDNTwgbwU1fcE+GKzmnmD13yD3V+x1+G3E
FjLTvzQhnf9ITUt6Y10+37PgQeekwb9L4kqczbl+lPciZ4/wHwbXhv/zl67V
j3q5FayvIXCFa0tvt5b7NoBxZpoQH5rjgOtf7+Cacygu9b2SZvQW1XfZ9Sae
xpwr+U44/0L9Vw9N0iL7/mAznPQ5tvqb0N3D3ssFsD61HPpG9TifvcE0Xvb3
OON3KP/7xPwVN+T9puA/79+1rQ==
          "]], Polygon3DBox[CompressedData["
1:eJw1lDloVFEUhu+867yZN5IE0UYsTLQSzOAKEhEs4obYjJ3ITAyYaJEoalAk
IYLikkZDCrcuYiHGJJUiSIIL2rmDdoIoaGUhNgkGv5//WRze+e89+/nva+s+
VutPQgj7kUVIaxZCI4ZQR1aiD5RD6MDgTSGEWfTnxRCq4B/gfWkIRWwO47eD
s2Xo8yXbHkFOYf+pEsIIduPgO+Au4u5Cr2F/KDqf9KvIZfRpZJjzWd2jnyPe
Q+zbwSVwOXOsnmA8hRzAfgg8it6KfpD7m9gPoE+T8xF4C7g5cz03qGctOAV/
AT8BH8f2buYaVIvOdPcVeYf+mLO5zD3sTBxDsZ4xj93qF/8l1HqW7wT3vZz1
ondgt43vJmQV+hw2rwuuSbVNEPNv4hleQ/9GvCHu+ji7iP6n7F418yyvt0KM
pdG1SqQ38llqH+pNMxjGrin1br6D96J/KHoWyr8a/B58H3wG/8Ul36t27Xws
9Rw0j1/U0MfdPXADvBwZSl3fXME70q6q5O/i7mjOl5/YNBF7I9KWWmQrH91p
ftrVOPIC3FlxXuUX92r4rUi830L0Pi7h01wwP15iO5kYa163OVsTPcN65h7V
q3pUr5qhZikeT1YcQ77bo7n3IDMvxcn//Fcvo3ltryreqXY4w93maH/VqFrF
f9WqGWgW2vdg8MzaM/tvxb8Hn5Nlc0L1KZ7ipsT4nHhGG6J7EPdGonsTz8Q3
2VxBj8RfyPepWEnJfvLXrNWjet0DbkGfSs0t1fQxn0E99T40m9PRs1I8xf3N
3XrOKtH7F0fEa3FE8+wvmhsz2L5N/S70PlTj06Lfjt5yFZ+F1Pk1T+1Mu+uM
5qb4vy6aA+KCOCx/5VRuvU9x8Xz0v0Vv7EL0/0D/BuXU29Q+lU95xRW9yRPR
HBPXWjLzfyzfZ73s2XRjcyvzTrSbefD1zDUPRu9AMdWjeh3P39M/g4+pXQ==

          "]], 
         Polygon3DBox[{{1772, 784, 804, 358, 1661}, {2324, 581, 1549, 1674, 
          2310}, {1772, 537, 381, 810, 1799}, {2163, 803, 829, 1594, 2759}, {
          1767, 488, 327, 794, 1797}, {1767, 982, 795, 329, 1613}, {2398, 381,
           1508, 1415, 2554}, {2164, 360, 845, 844, 2449}, {2319, 1681, 1492, 
          124, 2318}, {2349, 607, 1705, 1595, 2238}, {1919, 348, 842, 841, 
          2448}, {1390, 485, 836, 817, 1779}}], 
         Polygon3DBox[{{2142, 796, 781, 1769, 1630, 2575}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtVEtIVVEUPe8e7333Osh8lh+IQoSKUAoaBBmWCSZUWlYvB5HRB/pqpoYN
NMNnIVmBBE1SHFaz8o36aBFBTYOCJhFEaWVFgyYV2FqsPbisc/fZ++zf2rvy
cGdrR+CcG8Hn8c3FzrUDL6SdO5Q49wiX7cBRXA7j3Al8kXJuHc4twALobYRs
feTcAmRDsN2L/34v2xj4GnpTOPcCbwKfAuvwHQ+dm4f+Q2Ae8rP4iiEvg7/t
OJcCZxHPHrz9ptC5asaA+/3AYtzlYOti2dH+fEox0leckrwrkM0wbLqBzcDb
eG8TzjWRYtkZKJ6VplMHnIW/CuS2DLgC/7sh3wZcbucm4F3E0Ai8AdyBN2Yg
P+iUM3MfAF5PlBNrOAHZZCD7RrzbA/9/Ef8g9Gohqwd+h6yKdQT+TEn/t1NO
w1bDT+aLNtdgM4D/U151ZD1PAI/hvw/3R4F5r3yXAp9EyvUxdCoS+fgS6z2+
y/jHAp1rzYa2R4D7oFcGvAe7xbjfYvGQK+QM69Bk9WHNGgLlwj6dg78fkI/A
f6m9ybiyseJhDH9i8affesp+0vZqqBr+gm1boHfIvcFYOZagli8j9TwXin98
JwB+hM485OWIbbXVJOvFc+bOGgyFsuUbZ3CXg4/TwHpgpXGasvuB+JEBbrbc
b8GmKJDfXV51aQG2edWkATgeqEeMmbG02ZlzsdW4WmVcZb4R6rkIdl/x9vtQ
dbiE84dQ8ZMb/2Lpcg56I8X0DdgaycdcpLox/leRaso8FvB2Nf43cNjT4gP7
PR2Jj/RFn31pceFzrFwZK/OlX/oqSdQv5p5JNEecbfKv2eaI85THXdrLL/Wo
T86T16w/ucL4GCdzzFqPyN8u4w/nl3ORgSyV1u6ZNw6wv4yT8fLNCZsX7g3y
hPHX2s4qAL4rVI1iYOil3+PV2yLrL3mdsf6S8+Qq9Su88ku8dhDjqvHi4Srg
A+Q3ie+A1+6qt7leAlxj+TI21n/G9g/ngrLnkWaSs8B912X7kD0m78n/0VBz
OWZzOm2947y/LRQPOAuj8L0WPu8keoNx0r7Ddjh3eYPxsxx4xerAejyLxYGL
sfYi+0o91nLceEsd8oG796TtH+6hKeMJ+cx8mFd3qFni/FwmL8wXff4Hdf/F
9A==
          "]], Polygon3DBox[CompressedData["
1:eJw1lF1ojmEYx++97953z7OEbcVWPpIzH1FKQj6mnKAxWZPPkIxMGeLAbG1T
2qIkTpBDnPk48i0pTlfEiZSyYZEDJ6j5/bpeB3fP9fF/ruu+/td13bP2HGnt
LKSU2jjVnmJKL6tSauFMR76Xp9TN9yGg3cj9pZQmId/hvCqntKgc+GVgqmtS
ugtmH/JJbD1ZSmeR+8F2oQ8gf8H2A3kOtrYs9BXoG9Cb+HcJmGfoY9ylqRg5
B9DnVe7SV4p4h9Fz8r2pTWlzOWIYz/ssxbeVM4jcwncy+OP4E3IC08/nBPpz
5CnE3I59B2dqHjVZmznMdR7bYnxN5Boh1zf89fhWcS4jPwKzk3gX0R+jn86i
Vjn6jXyEfweQM2wd8kKcdvQx9E/43xPzKv+tx9ZIrs/YvlcFRmxHKbi4hP4E
3DvwGfYFxBoCX+Dbh38W/i0VTsxjPu9/G8xe9OXoW4h9DPk62E3oM5B7y8HF
fWyvkS+A30W8dny38uBQLidwRpEfEHMZ+HXgDyA3FgNvz+zdCzDXClHDUfzn
ytHrXyl065ErYxjrazn6s5F/y9z9TxbcXcG+llqHwNThm8v5iW1abeja7Yec
yZ09kM+uUuTaD2Yi8cZrgp9xMPfzsOuXgy7km9jyYnAsn9ZobxYWovaGPPp9
HPkt+RpqY7Y/lkLvwz4b/5pC2JyJbcSbWR2zYg3W0oz/TBb9kzf5c96y2uiN
M+AsjPyvuSpmr7cYWPnqkes8fO6Eu+H86hd3I4+YzrIzYi7v46zKsVw7/8P8
uxK9Lo/9sUf2aySLGXAWzDFYCg7kwh13t9xRd9Wej2axU+6WM95ZjPfB2Wuu
9FCO5EV+5FIO9A1X9m8+mKdV0UM58I4Ti8Ghd7eHh5C7C9HbemKsLkRP3S9j
Gtud/ptFfOf5WIV7d8bd8X1wP63Z2u2peOff3THmh1K8Ic6rnMjNqZrYFd+s
0cp8eRdn3Fl3/pyX1kr/nCFnyR7Lv2+ob6n/HET+BzCfp2k=
          "]], 
         Polygon3DBox[{{1792, 788, 315, 447, 1580}, {2278, 94, 1468, 1619, 
          2279}, {1777, 811, 853, 545, 1419}, {2399, 699, 893, 822, 2446}, {
          2047, 775, 830, 371, 2173}, {2299, 1652, 1502, 577, 2322}, {1793, 
          813, 389, 547, 1773}, {2447, 838, 839, 337, 1913}, {1581, 316, 790, 
          823, 1580}, {1667, 376, 808, 786, 1773}}], 
         Polygon3DBox[{{2568, 1618, 1768, 780, 791, 2133}, {2579, 1653, 1771, 
          1055, 807, 2176}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0s1LVGEUB+AzOqNppf4DkygRkY1IiJhN4C6kVi1CahdI5KI2IQVuxPwC
QdooFmSb2pkb2xVkM6M11Sab0T60+k96XoR55zm/e++55713puv2/ev3MhGx
YJUbIlK9yLwi3xzRIfewk0Ps5Qgvc5TXeIe3ONwSMal3Qh6Xp9SP1Y/UM5xP
c7jCJ3zFF3zDDZa5dsx5s2t6d+UPfC2/z0Z8l7dYS8dZZ4l7ae/cZ4U/uM0d
66f6I3/xE3+zygN+5iG/8A+/8i+zTRGrZtbN/pdmcEOu2uM3+S1LXOcmn/Ml
l7jMOc7xivcxq/eh+pJ6Qj3t3F35AW9yjFd5g8XUwwIHeYoXvY9Osyt62+V3
fCYX7bUt/SY8ma7nCQ7wOPvZygs0OvroVlHgecvt4xw9apxljmfoE6d9NbKb
xkXORU8zR/+P//25Q8M=
       "]], 
      Line3DBox[{948, 790, 823, 1792, 788, 833, 896, 897, 2464, 860, 861, 
       1800, 815, 2472, 777, 793, 824, 792, 835, 856, 2473, 838, 839, 799, 
       840, 798, 884, 773, 903, 883, 870, 1806, 875, 909, 874, 797, 772, 827, 
       1796, 826, 857, 780, 791, 2474, 867, 789, 948}], 
      Line3DBox[{982, 795, 825, 898, 866, 2458, 796, 781, 819, 1794, 818, 774,
        907, 905, 872, 1809, 882, 881, 885, 800, 828, 801, 842, 841, 2476, 
       765, 771, 816, 836, 817, 778, 880, 2469, 1802, 787, 863, 862, 2477, 
       865, 864, 837, 794, 1797, 982}], 
      Line3DBox[{1788, 936, 937, 938, 939, 940, 941, 1807, 942, 943, 944, 945,
        2466, 946, 947, 834, 911, 912, 1804, 913, 914, 915, 916, 2471, 917, 
       918, 1805, 919, 2457, 920, 921, 922, 923, 924, 925, 2463, 926, 927, 
       928, 929, 930, 931, 932, 933, 934, 935, 1788}], 
      Line3DBox[{1789, 961, 962, 963, 964, 965, 966, 967, 968, 2461, 969, 970,
        971, 972, 973, 974, 975, 2587, 1810, 976, 977, 978, 2465, 979, 980, 
       981, 983, 1811, 779, 949, 950, 951, 952, 2475, 953, 954, 955, 1808, 
       956, 957, 958, 959, 960, 1789}], 
      Line3DBox[{2455, 1019, 802, 849, 804, 784, 1799, 810, 831, 809, 2459, 
       906, 891, 892, 1790, 814, 895, 2480, 832, 821, 850, 769, 851, 858, 
       2479, 844, 845, 805, 843, 899, 900, 889, 904, 890, 871, 1803, 888, 910,
        887, 766, 1795, 820, 829, 803, 2455}], 
      Line3DBox[{1055, 807, 2482, 868, 869, 854, 808, 786, 1793, 813, 855, 
       812, 2483, 894, 776, 893, 822, 1817, 2588, 785, 811, 853, 770, 852, 
       767, 2484, 775, 830, 806, 846, 901, 902, 876, 877, 1801, 873, 879, 908,
        878, 768, 847, 848, 1798, 782, 859, 1055}], 
      Line3DBox[{2456, 1033, 1034, 1035, 1036, 1037, 1038, 2467, 1039, 1040, 
       1041, 1042, 1043, 1044, 1045, 1046, 1818, 1047, 1048, 1049, 1050, 1051,
        1052, 1053, 1819, 1054, 1056, 783, 1020, 2468, 1021, 1022, 1023, 1024,
        1025, 1816, 1026, 1027, 1028, 2470, 1029, 1030, 1031, 1032, 1791, 
       2456}], Line3DBox[{992, 991, 1813, 990, 989, 988, 987, 1812, 986, 985, 
       984, 2478, 886, 1018, 1017, 1016, 1015, 1815, 1014, 1013, 1012, 2481, 
       1011, 1010, 1009, 1814, 1008, 1007, 2460, 1006, 1005, 1004, 1003, 1002,
        1001, 2462, 1000, 999, 998, 997, 996, 995, 994, 993, 992}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1821, 2103, 1230, 1820, 2589, 1995, 1822, 2590, 1996, 1823, 
       2591, 1997, 1824, 2592, 1998, 1825, 2593, 1999, 1826, 2594, 2485, 2647,
        1827, 2595, 2000, 1828, 2596, 2001, 1829, 2597, 2002, 1830, 2598, 
       2003, 1831, 2599, 2004, 1832, 2600, 2005, 1833, 2723, 2104, 2006, 
       2105}], Line3DBox[{1835, 2486, 2648, 1834, 1245, 1836, 2601, 2007, 
       1837, 2602, 2008, 1838, 2603, 2009, 1839, 2604, 2010, 1840, 2605, 2487,
        2649, 1841, 2488, 2650, 1842, 2606, 2011, 1843, 2607, 2012, 1844, 
       2608, 2013, 1845, 2609, 2014, 1846, 2610, 2015, 1847, 2611, 2016, 
       1848}], Line3DBox[{1850, 2489, 2651, 1849, 2490, 2652, 1851, 1261, 
       1852, 2612, 2017, 1853, 2613, 2018, 1854, 2614, 2019, 1855, 2615, 2491,
        2653, 1856, 2492, 2654, 1857, 2493, 2655, 1858, 2616, 2020, 1859, 
       2617, 2021, 1860, 2618, 2022, 1861, 2619, 2023, 1862, 2620, 2024, 
       1863}], Line3DBox[{1865, 2494, 2656, 1864, 2495, 2657, 1866, 2106, 
       2107, 2724, 1867, 1438, 2109, 1868, 2725, 2110, 2111, 1869, 2621, 2025,
        1870, 2622, 2496, 2658, 1871, 2497, 2659, 1872, 2498, 2660, 1873, 
       2112, 2113, 2726, 1874, 2727, 2115, 2116, 1875, 2728, 2117, 2118, 1876,
        2729, 2120, 2121, 1877, 2623, 2026, 1878}], 
      Line3DBox[{1880, 2499, 2661, 1879, 2068, 2069, 2710, 1881, 2070, 2108, 
       2662, 2550, 1882, 2558, 2757, 2223, 2122, 1883, 1372, 2365, 2071, 2408,
        1884, 2711, 2072, 2073, 1885, 2624, 2500, 2663, 1886, 2501, 2664, 
       1887, 2074, 2075, 2730, 1888, 2076, 2114, 2665, 2551, 1889, 2557, 2752,
        2209, 2119, 1890, 2712, 2077, 2366, 2078, 2409, 1891, 2713, 2079, 
       2080, 1892, 2625, 2027, 1893}], 
      Line3DBox[{1895, 2129, 2130, 2731, 1894, 2081, 2367, 2584, 2788, 2410, 
       1896, 2252, 2253, 2123, 2666, 2255, 2254, 1897, 2471}], 
      Line3DBox[{1908, 2340, 2339, 2780, 1907, 2083, 2128, 2082, 2714, 1906, 
       2270, 2271, 2127, 2764, 2269, 2268, 1905, 2465}], 
      Line3DBox[CompressedData["
1:eJwVzksuQ2EYBuBPaFBtUkNmluEywQ6wAErdtUZ2QGJg4rYNBHHfAsIKCIkI
LW21zDxn8OT7zvv+/zmnL18aK7ZERIG19ojhzogRpjoizjhIR3zIJ+1PPJOn
VX7Ipy7t/IvslWl65EeUdZu6bTbYSd4t7zf3mKPizLj57t6tLs2M/ZwvXZcu
I7tL/kM2ywXfuoKZld8n/2Gf55JcyrvNMhUWueLYuap7C8l9qizRJj+hpsv4
Xk1WZ5mU/JS6bkK3y5vnXgbs+6zzo98y/xjVrbh7TUOeleVkDzRkJW5o6opm
t/yRpn2VIed/dYPmPzxcPv0=
       "]], 
      Line3DBox[{1923, 2413, 2414, 2372, 2088, 2715, 1922, 2341, 2405, 2342, 
       2143, 2347, 2386, 2784, 2581, 1921, 2337, 2404, 2338, 2475}], 
      Line3DBox[{1924, 2415, 2416, 2373, 2502, 2716, 2161, 2391, 2425, 2392, 
       2162, 2582, 2742, 2348, 2041, 2424, 2389, 2393, 2390, 2478}], 
      Line3DBox[{1925, 2357, 2504, 2781, 2358, 2091, 2180, 2505, 2718, 2225, 
       2303, 2092, 2181, 2761, 2242, 2243, 2442, 2481}], 
      Line3DBox[{1927, 2053, 2179, 2746, 2189, 2052, 2376, 2094, 1756, 2187, 
       2251, 2250, 2188, 2632, 2556, 2307, 2443, 2470}], 
      Line3DBox[{1929, 2508, 2669, 1928, 2095, 2509, 2719, 2190, 2419, 2096, 
       2377, 2510, 2720, 2191, 2559, 2633, 2216, 2054, 2228, 2758, 2097, 2218,
        2055, 2193, 2747, 2098, 2056, 1930, 2634, 2511, 2670, 1931, 2512, 
       2671, 1932, 2099, 2513, 2721, 2379, 2420, 2100, 2380, 1313, 2220, 2561,
        2635, 2229, 2057, 2196, 2749, 2101, 2221, 2058, 1933, 2722, 2102, 
       2059, 1934, 2636, 2060, 1935}], 
      Line3DBox[{1937, 2514, 2672, 1936, 2199, 2200, 2755, 1938, 2201, 2378, 
       2202, 2751, 1939, 2560, 2754, 2217, 2192, 1940, 2748, 2194, 2219, 2195,
        1941, 2637, 2061, 1942, 2638, 2515, 2673, 1943, 2516, 2674, 1944, 
       2517, 2675, 1945, 2203, 2381, 2204, 2756, 1946, 1535, 2230, 2205, 1947,
        2750, 2197, 2222, 2198, 1948, 2639, 2062, 1949, 2640, 2063, 1950}], 
      Line3DBox[{1952, 2518, 2676, 1951, 2519, 2677, 1953, 2520, 2678, 1954, 
       2521, 2679, 1955, 2522, 2680, 1956, 2641, 2064, 1957, 2642, 2523, 2681,
        1958, 2524, 2682, 1959, 2525, 2683, 1960, 2526, 2684, 1961, 2527, 
       2685, 1962, 1338, 1963, 2643, 2065, 1964, 2644, 2066, 1965}], 
      Line3DBox[{1967, 2528, 2686, 1966, 2529, 2687, 1968, 2530, 2688, 1969, 
       2531, 2689, 1970, 2532, 2690, 1971, 1346, 1972, 2645, 2533, 2691, 1973,
        2534, 2692, 1974, 2535, 2693, 1975, 2536, 2694, 1976, 2537, 2695, 
       1977, 2538, 2696, 1978, 1354, 1979, 2646, 2067, 1980}], 
      Line3DBox[{1994, 2208, 1538, 1993, 2709, 2549, 1992, 2708, 2548, 1991, 
       2707, 2547, 1990, 2706, 2546, 1989, 2705, 2545, 1988, 2704, 2544, 1987,
        2703, 1362, 1986, 2702, 2543, 1985, 2701, 2542, 1984, 2700, 2541, 
       1983, 2699, 2540, 1982, 2698, 2539, 1981, 2562, 2697, 2206, 2207}], 
      Line3DBox[{2368, 2084, 2131, 2272, 2765, 2567, 1909, 2382, 2421, 2383, 
       2132, 2580, 2787, 2402, 2325, 1911, 2343, 2384, 2344, 2466}], 
      Line3DBox[{2375, 2051, 2215, 2302, 2301, 2745, 2177, 2050, 2406, 2356, 
       2178, 2397, 2429, 2785, 2583, 2428, 2049, 2355, 2354, 2468}], 
      Line3DBox[{2456, 2439, 2306, 2185, 2249, 2248, 2762, 2186, 2093, 2305, 
       2227, 1305, 2184, 2172, 2360, 2782, 2507, 2359, 1926, 2744, 2506, 2170,
        2790, 2433, 2435, 2434, 2436, 2168, 2430, 1763, 2182, 2247, 2246, 
       2183, 2631, 2555, 2304, 2226, 2245, 2244, 2460}], 
      Line3DBox[{2457, 2257, 2256, 1898, 2258, 2259, 2763, 2124, 2261, 2260, 
       1899, 1455, 2210, 2125, 1900, 2779, 2332, 2333, 2778, 1901, 2137, 2138,
        2789, 1902, 2431, 2432, 2422, 1757, 2423, 1903, 2262, 2263, 2126, 
       2667, 2265, 2264, 1904, 2266, 2267, 2587}], 
      Line3DBox[{2461, 2334, 1629, 2141, 2346, 2385, 2345, 1918, 2288, 2769, 
       2574, 2140, 2087, 1917, 2552, 2668, 2139, 2086, 1916, 2738, 2411, 2412,
        2371, 1398, 1915, 2085, 2136, 2283, 2733, 2571, 1914, 2330, 2403, 
       2331, 2135, 2569, 2732, 2308, 2463}], 
      Line3DBox[{2462, 2320, 2296, 2629, 2166, 2351, 2352, 2044, 2394, 2578, 
       2772, 2297, 2212, 2045, 2167, 2743, 2089, 2213, 2503, 2717, 2169, 2417,
        2418, 2374, 1300, 2171, 2090, 2214, 2566, 2753, 2046, 2426, 2395, 
       2427, 2396, 2174, 2760, 2240, 2353, 2467}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1058, 1231, 2589, 1059, 1245, 1087, 2652, 1260, 1102, 2657, 
       1275, 1117, 1370, 2710, 1285, 1128, 2788, 1752, 1382, 1465, 1689, 1690,
        1748, 2787, 1691, 1393, 1730, 1585, 1586, 2736, 1141, 1637, 1404, 
       1733, 1702, 1703, 2742, 1704, 1660, 1413, 1572, 2718, 1302, 1152, 1422,
        1517, 2719, 1307, 1161, 1530, 2755, 1559, 1316, 1172, 2677, 1327, 
       1187, 2687, 1342, 1202, 2698, 1357, 1217}], 
      Line3DBox[{1060, 1232, 2590, 1061, 1246, 2601, 1088, 1261, 1103, 1437, 
       2724, 1276, 1118, 2662, 1371, 1546, 1578, 1579, 1129, 1606, 2666, 1383,
        1774, 1804}], 
      Line3DBox[{1062, 1233, 2591, 1063, 1247, 2602, 1089, 1262, 2612, 1104, 
       1438, 1439, 1562, 2757, 1451, 1547, 1452, 1563, 1782, 1805}], 
      Line3DBox[{1064, 1234, 2592, 1065, 1248, 2603, 1090, 1263, 2613, 1105, 
       1440, 2725, 1542, 1441, 1717, 1372, 1453, 1373, 1604, 1454, 1607, 2763,
        1386, 1467, 1387, 1608, 1469, 2732, 1620, 1396, 1676, 1397, 1621, 
       2766, 1478, 1638, 1406, 1682, 1407, 2629, 1639, 1494, 1662, 1416, 1573,
        1417, 2631, 1663, 1512, 1424, 1576, 2758, 1425, 1555, 1523, 2748, 
       1524, 1175, 2680, 1330, 1190, 2690, 1345, 1205, 2701, 1360, 1220}], 
      Line3DBox[{1066, 1235, 2593, 1067, 1249, 2604, 1091, 1264, 2614, 1106, 
       1277, 2621, 1119, 1374, 2711, 1716, 1375, 1548, 1455, 1566, 1456, 1470,
        2733, 1622, 1699, 1623, 1477, 1625, 1677, 1624, 2767, 1480, 1640, 
       1706, 1641, 1493, 1643, 1735, 1642, 2772, 1550, 1742, 1743, 1511, 1763,
        1762, 1761, 1426, 1522, 2747, 1427, 1163, 1318, 2637, 1176, 1331, 
       2641, 1191, 1346, 1206, 2702, 1361, 1221}], 
      Line3DBox[{1068, 1236, 2594, 1070, 1250, 2605, 1092, 1265, 2615, 1107, 
       1278, 2622, 1120, 1286, 2624, 1130, 1693, 2779, 1749, 1695, 1719, 1398,
        1479, 1627, 1626, 2768, 1482, 1644, 1645, 1495, 2743, 1408, 1551, 
       1497, 1766, 2790, 1499, 1154, 1309, 2634, 1164, 1319, 2638, 1177, 1332,
        2642, 1192, 1347, 2645, 1207, 1362, 1222}], 
      Line3DBox[{1072, 1238, 2595, 1073, 2650, 1252, 1094, 2654, 1267, 1109, 
       2659, 1280, 1122, 2664, 1288, 1132, 1471, 2789, 1764, 1294, 1138, 2668,
        1399, 1483, 1589, 1297, 2739, 1144, 1648, 1649, 1500, 1300, 1149, 
       1712, 1713, 2782, 1304, 1156, 2671, 1311, 1166, 2674, 1321, 1179, 2682,
        1334, 1194, 2692, 1349, 1209, 2704, 1364, 1224}], 
      Line3DBox[{1074, 1239, 2596, 1075, 1253, 2606, 1095, 2655, 1268, 1110, 
       2660, 1281, 1123, 1376, 2730, 1457, 1289, 1133, 1757, 1765, 1472, 1758,
        1727, 1728, 1139, 2769, 1628, 1400, 1678, 1590, 1591, 2740, 1145, 
       1650, 1409, 1684, 1596, 1597, 2753, 1150, 1501, 1574, 1305, 1157, 1428,
        1722, 2721, 1312, 1167, 2675, 1322, 1180, 2683, 1335, 1195, 2693, 
       1350, 1210, 2705, 1365, 1225}], 
      Line3DBox[{1076, 1240, 2597, 1077, 1254, 2607, 1096, 1269, 2616, 1111, 
       1442, 2726, 1282, 1124, 2665, 1377, 1564, 1290, 1134, 1609, 2667, 1388,
        1567, 1582, 1583, 1696, 1629, 1401, 1679, 1592, 1593, 2741, 1146, 
       1651, 1410, 1685, 1598, 2760, 1599, 1707, 1664, 1418, 1513, 1602, 2762,
        1603, 1158, 1670, 1429, 1556, 1313, 1168, 1534, 2756, 1560, 1323, 
       1181, 2684, 1336, 1196, 2694, 1351, 1211, 2706, 1366, 1226}], 
      Line3DBox[{1078, 1241, 2598, 1079, 1255, 2608, 1097, 1270, 2617, 1112, 
       1443, 2727, 1444, 1544, 2752, 1447, 1565, 1448, 1723, 1672, 1459, 1610,
        1810}], 
      Line3DBox[{1080, 1242, 2599, 1081, 1256, 2609, 1098, 1271, 2618, 1113, 
       1445, 2728, 1543, 1446, 1718, 1378, 2712, 1458, 1379, 1605, 1461, 1612,
        2764, 1391, 1775, 1811}], 
      Line3DBox[{1082, 1243, 2600, 1083, 1257, 2610, 1099, 1272, 2619, 1114, 
       1449, 2729, 1545, 1450, 1125, 1380, 2713, 1460, 1381, 1462, 1392, 2714,
        1568, 1615, 1614, 1729, 2784, 1700, 1751, 1701, 1484, 1632, 1680, 
       1631, 2770, 1487, 1654, 1708, 1655, 1503, 1739, 1759, 1738, 2785, 1760,
        1740, 1741, 1514, 1756, 1755, 1721, 1432, 2722, 1433, 1169, 1324, 
       2639, 1184, 1339, 2643, 1199, 1354, 1214, 2709, 1369, 1229}], 
      Line3DBox[{1084, 1435, 2723, 1436, 1085, 1258, 2611, 1100, 1273, 2620, 
       1115, 1283, 2623, 1126, 1291, 2625, 1135, 1697, 2780, 1750, 1698, 1720,
        1403, 2715, 1486, 1634, 1633, 2771, 1488, 1656, 1657, 1505, 1659, 
       2745, 1658, 1552, 1506, 1516, 2746, 1507, 1159, 1314, 2636, 1170, 1325,
        2640, 1185, 1340, 2644, 1200, 1355, 2646, 1215, 1538, 1539, 1540}], 
      Line3DBox[{1216, 1356, 1537, 2697, 1201, 1341, 2686, 1186, 1326, 2676, 
       1171, 1315, 2672, 1160, 1306, 2669, 1151, 1301, 2781, 1710, 1709, 1147,
        1298, 2716, 1489, 1636, 1635, 1140, 2735, 1295, 1584, 1476, 1617, 
       1616, 2765, 1136, 1292, 1464, 2731, 1463, 1127, 1284, 2661, 1116, 1274,
        2656, 1101, 1259, 2651, 1086, 1244, 2648, 1057, 1230, 1434, 1541}], 
      Line3DBox[{1218, 1358, 2699, 1203, 1343, 2688, 1188, 1328, 2678, 1173, 
       1317, 1532, 2751, 1531, 1162, 1308, 2720, 1518, 1423, 1669, 1153, 1601,
        2761, 1600, 1776, 1815}], 
      Line3DBox[{1219, 1359, 2700, 1204, 1344, 2689, 1189, 1329, 2679, 1174, 
       1521, 1533, 1520, 2754, 1554, 2633, 1510, 1519, 1509, 1747, 1746, 1553,
        1787, 1814}], 
      Line3DBox[{1223, 1363, 2703, 1208, 1348, 2691, 1193, 1333, 2681, 1178, 
       1320, 2673, 1165, 1310, 2670, 1155, 1303, 2744, 1498, 1148, 1299, 2717,
        1496, 1647, 1646, 1143, 1296, 1588, 1481, 1754, 2738, 1753, 1137, 
       1293, 2778, 1694, 1131, 1287, 2663, 1121, 1279, 2658, 1108, 1266, 2653,
        1093, 1251, 2649, 1071, 1237, 2647, 1069}], 
      Line3DBox[{1227, 1367, 2707, 1212, 1352, 2695, 1197, 1337, 2685, 1182, 
       1536, 1561, 1535, 1577, 2635, 1526, 1557, 1525, 1575, 1666, 1791}], 
      Line3DBox[{1228, 1368, 2708, 1213, 1353, 2696, 1198, 1338, 1183, 1529, 
       2750, 1528, 1558, 1431, 2749, 1527, 1430, 1671, 1515, 1668, 2632, 1421,
        1778, 1816}], Line3DBox[{1788, 2626, 1783, 1714, 1786, 1813}], 
      Line3DBox[{1789, 1785, 2792, 1715, 1784, 1818}], 
      Line3DBox[{1807, 1780, 2737, 1142, 1405, 1812}], 
      Line3DBox[{1808, 1402, 2627, 1485, 1781, 1819}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsvXk00F3XP4xKGgiVSEkhoTQZMu4iFBqlKCIqQyqJBkXRoFCmlAZFJRWF
jEmOOVNknqfM8xjN/c7+1vU+13rW61rv9aznXet917qvf+61zr3XPp+99+d8
9j7nKxaaHd1+gI2FhaVjKgvLBPq/Tg7nalYOJhAZP2dZg0meZLJHn/K6yn54
9HiH4sx9seTgl+SvWWxhxCat4nh/RT9c5wmfvK48jKy46jt9r24scSvSLLXF
9Sk8i5WfXCPOV79fsdF8TebI7iqeR9fX1Pg84BAMhNI4y8OFJxKIUUHUiDRd
31HOeWpNeiS89HsVEskbTbhNPmvdoetFHTmXWifGA4vLICvb68dkpdUT7ZkU
j81qZ4tPy17Dm4mTtsSxeilXn38vq0XXxVKandD+5nG9CdQeWg2TGHvbdXPs
0b+iZzz6B+8wlg3ov674uCPi+SZ1FPHAF9lEBs/MSX2uiN/ic6gbxQ/t7DsZ
/JdKz/JhvG/6rmK8kDuiwMRrG3tNHfMzlf055gdOzyBMfpo2j9ZhPo9mn8R8
wtfiNiafE+sTOyZXpZGce8IbWZJvkHe/dAVZQ/pBRHBjeo9eCrm18aDYRbkY
Up5VZan9qB8mq2jkst2LJd629SwFMilEsXD/kttB/XDDodC1RP0W+dTzuKDk
WDrp3/5lRs79fohoOFvDl/ME9j4NqnqdlUaWP1eMXfagH1a1ih/nbH4NQaKF
/Fvqk4hjWr3Y2eB++Paox/fVuVRIkb51U6j+JTmsoKM57XE/nD5zbYLEhHSo
Wy8wXbT/pvLM2rODwhQnp+JXb7TPu5Bwm9oD20FDxt7IU+0o+ufn3jmH+gf2
lgHGP9ly4DnicZWNRTzwXNOYwePicS0f8Xdk3UP8EMbbw+A3O722EeNdJ56C
8YJ6jAQTb1+CdzbmR5bTcAnNDyiEPGHyw5n2vQvz6XKRF/MJA87yTD7T4iwt
9HvyyK/23HmuioFkiq/iAi35fpBeXOcq9y6bJLHwWznLvyVn7NhrHKX7wW/b
xO2cE1PJsRmZN9cbZZMDLJMPrRbuB+0i5+VyWQ/JtYL049I/3xPrarlUdb5+
uLy7xnSH9it419ixaO77fFKbZSFwjL8fXk9ZxWMvkgHvVA3rCw9lkrLIR8pj
ov3Qvp1n5JtmLgz9mK9cMiOO1DtKcJmu6oe2pOe3ZgvlQ8i8462dwkHKFw0f
7+mgOBU/Sw6hvZZjPlB7MAtbw9gX5Iox/iW3zG+k/iEkxZvxv1zn8wbEIyEw
MJ/iga1POxk8zmNDBxD/Q4s1thQ/cEXoMvjPnz+/F+Odn2yH8UJAcaA1xnv7
ea875qfMfdEBmh/gTHlZjfmRvexijfm8YRuM+YTSDVxMPmOiS+xdS0rIkRVK
ARvXPyTsLovmX7boA52DfFOs3YrJdPWZa1v2pxNubxnFTap9kP+iOubrjTyS
aHl4tfmbIpJ/ddmugtFeEFgRu9qTK5I84vAwy1hVQfpKD7DeTO2F5EeLuZx7
kqHshtrMJ9/LSBHblZ/O73th4Wa78k+5hdDDKv2iV62ABDoGVm+e0Qfs8y+P
WsmWwDTlE7vk3ZJIjq+z2YetfWB1qvLBleYSWJNiO5WV97HyYiePnv3WfaB+
cOYw2utO+oz2UO7EYY72+2RiGP/Tzk99Rv2DZk4N4/9A7MlGJ4rndexbxAOB
HdK/EM9Py407Ef/BSwaIH6SnijH4U6VWpGG8Hz3ZMF74OXpqJ8Z7N69xGuZn
kMtVieYH4llGFTA/91aoncB8mhrMwXxCTkXbPMznk9zD86O7q8iXpVJnOfcG
Ec2l+ZdPqPRCsTbfqEtRNXFuCl658VgGebj0te78Oz2Qf/Sslb9lBdlo8cVV
2a2C5Cm2JpsYdYPiIZtdF02TiVddraN9ThNxeWQZuGxHF0RfuvVC2ScfRk7l
3dtq0Eg2fzDao+vTBVe5f2UG3a4CA4XjB4yfFpMs94eKogXdUFRlzlZxsxqG
2h1W3+FMIm5P1+pptfZArvTFXIvCKnixMPN0bFqw8qnmah6dDb2Qu8aesb9Y
1LGM2gPH8e2M/Vaj/enony11nzn1Dx1FN5TQf0PM9suIZ92Pz4EUD6zr0DRG
PPxuPCmI/1pu8hmKH3R5e+8gfrLb8AjGKxCV6ETjBd/Ab0y8Ww/lDWN+7kiw
rqL5gZdnVTdhftpUns/DfN6yUMd8whKHMSafsiKHHe/z1ZE2WTt+x51mIBwX
YT98vgckxIV70wuaiDPniyfD7s/JDr79hfxXu+CGF6Sybm8hbMvXvMxnLycO
NyY4BixsA40U/cWNvB8ISfihF8zXSRZf8dfdKfkR7LaJbrvfUgtV4c/WWyq1
Ep/8my9d5jTDXvfSlllbWkC3MvjWftk8ErWW8/C1rHYQv1O4NepgI3gOee6Z
u8eHHOXimVl8qht83891CrlbC/q5HCvC7W2S3qpnZ00K6gHF+hnb0X6qEYsv
tYfctRt50d4q5Gs7+lc5l/WA+ocHN95ZoX+VuFsKiGfyVwUdigcuTFgdiXg6
3uTvQPwTuj02UfwgmCajg/iHsx+nYLyehfzRNF54x7bnNMbb7MzShvnxs7cN
o/mBVUvESzE/9587OmA+F81WE6D5JOuKhxwwn3lXjAS/tpcTbp2BK7KNMbDA
QTlKMIOed5OXsnPEmkjUicbQO7nFMGe7cPEW/U64EhabrNzdTbzO5EYGz86C
Bad72crU6oDl//a/gXHXVbevj3lk1gETB9VbH1oUw6Odvm8TvT9C9a7tJG+g
FnhW5aasVikAizub7IMvdYP/wJaxtyvKQSFg8UClYHzSzt6Xk0sm9EF1k0QW
2p/MGk6m9uTO8WA7xt6N7zX6Vzvzop36J25LH8eh/3+LMyBjdSzGu4/fKI3G
S4KaW0UwXtVi78WYn4oz6WE0P2Rn4MMazE9Gi9lMzKf2M1Z3mk8iqZr2CvNZ
e7yl6mdBhrKX7vN6DtU0aPHbEGYaTueo9z0aDmuKlF1GnMuKzZvhlZDFtir7
TpBoPNN5K6ZJec2cX7KX5PtgKOzh5gLuMlioKb+k1ZFV5dHUUs+1P/vBYZFG
QdNif+B5YDHx/ZvBJNn3zaNbW/rB1Cf5wbrJscA/NfPR2aCapPbkrO2p5d2w
LDVmnqRXA5hNUlurUJ2XdHH3huBdibXQEGKwXj+gB9iYuDOSfv7C/9KT/srD
s+cZumgf8NueVP6xXyCzIx399/32T2b98d8qEL8W8cj9xkNW/sGTsCzDo4Xi
D/6Nn7z9g3/H8GACxiv7O14yKfx3vJ4W4hKYn9O/80Ne/8nPtJZzhX/LJ/kr
n98S9ZHPYCK71BH57LXCguHz9Z2B8rRewCe3/SbyWSyDtxTrdeBcUyqtLyjN
vaaPfK7WncrxP+GztYlBHOUbqXmflI983hnbnYJ8swywSaH8JDbNui+Qz7Mm
7XZAfgb95jOZLdHagnze8YfPPfIP36H9PeOxx8hnqV2TGf5v/nz/Lfrf9rQm
G/n8Zrdewv+EzwbJd+Mx3tU13FeRz2+cLothvM6T1i7B/Iyxzg1EPidWyNVh
fkA3GPkM27bInEE+z0hvYPi860XCaaonsOXWFZnTVJ/n69Uz+nz0hX8P1R+Q
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
A6zc8e2RhV854V2r+Zy3sAdOFBnF4/qelA2P6To4T3/GrF9oC9h7Ir4MJLny
UhM5q6Hpasn774u6IdC44b0Z9X+jLBj9w3zubMb/mZXrGxDn3I5v9hQnWFpW
miPOkzrVdS7fYkHmiQL7VLk2iPetnyfV0AY3nutHh4+VEt6AsAlWnQUgoLkq
+51iL8SF8m50pfZbZ06fSO0Jb7nJfLQ/qaz0WKiqkWSwh8mmxXwkknqBSlNT
m2HPu+CftyRL4XBQwZ4IxWbCYRo7O8GlHRIXOjndfdUMgRdPJhnPqCFPSj6e
0d7QChvdZh5ro7pwIkTfvNwqGt75cEnJpXYAe1hi8i+1Rmjvl5o6Y0ExsJv9
NF4xuQvs9kk7o58Xg/wJ1A/06D88i36adeZcN6zKJCz5mosNvVoh4gjfwirW
djgufS9YTjsFntgIh+xa3QUv91jWKnY1gazNNvnFw/XE9Imr9JWYSrj9tknS
VqQT+mYeCMe4LtY1r6BxQZj0MgWMq2+Kl+blumay7PXjJwc2ZsD1ltLHCT4d
INx+PjFSq4E8vFddpVcZA1vmuNq+yusGR+njBvFFH4m77hYB1ug4CImziw19
3Qn33GDunoJqMpEn+nBgQA6E7vtktNKgB1r23VFbdb6THD8UWfxz/jvyvvUt
n7fdR+C6HfmT+0gbifnwosXjZwlcEbdUOXCx5V+/n/B2mIes828BKcFSpa8W
LUQ+qK7+zYKa8d85VV/Jy23shUTBsWfz7F7BRGX+kirTKjBYdvA7//uPsLyb
7WjOWAnEPzmdcLClHVRzEsbe36mFtVtNt36uDCMhK0crw317oHNodEV6eQXo
crk61B0j5FjKIvN7R3tB/vi9E1j3nO/8NrTu5NIbu8VYdyW+Wxr3PreD9MV2
qceSwRC0xX5NpxSt5+XcCQJ036OBOQfovmRTq38M7tur80kRcZ54FhpGcZLn
XKPpiPPf5me8de27vX2Y/9CpHD00/0QjtVKXyX+ZVaLFgzIycnJGmvraRoiS
lqq/vacTlAyjxSO25iiztBeF+t2qgOe+fOcFSC/sW7NCpyeuhWR+mXFroU0r
fPJYsjN0ewXwBTyxyLOvVL4s7L91/9wuaHjXonnfdfz3sdnrHKNHTHqUc4w/
z3mZ2A98YdwCHwJTxrXffjiKvyiDzkmJ8d90QlvB/MrQMY5rjZD90+fKRtOW
pOupmayco33QfUiR58PSDwD1h7UEIovAkqM1NOlCJfzaEn7bT6YHOiqtnUL2
lCTx7TdnsahrBQH/jUEnjduhWbpka19tDqxUqqhJtE1N2h3WepdjVz9sevtB
+Ud9ZlLFsbP7/UryQP7EPJilTO99qlWb0L/A6Tb0Txp2Pw9A/yeEX61De1Y7
xp7I/rEvSd8qivgDQkI/Ufxk7d25RxC/pI2XO+JZ+BsPmfEHz3h5yBQPeIbx
+vyOl5T/ifejMOdyrIvL5fhwWhfCa+hljXUBDZW1f8szkf6T5+rFFXex7jmT
xbJo3clRX56PWPeS64tWYx3P/64j6fhTx5vsYVOQD31tDB9I+B8+OOzOfEP9
AL/Mr7fIn6LMM43oZ977SH2KB2Retl5FnhgGyO9DPFY2Oaw8R9rA8RXPO9SB
+eLK6/4nOvBv17+pyAnR/JNtnjNGkD9XA01OYP5N2/QU6LkjubM956M+rNUf
LMJzl7HiB/KHCH7Y9wj5o1HjfQfrO2eCHeo8mZT4Xgx1/ley62+dX87whwjt
7qn4O38kltwcpnpCRtd4L6B6ApwJ0tWoJ7bzszejfzXBfUHIn+9q4oz/FLPj
EogzouB9L/KkRXTpccTJ3v8VdYbs5/GRRp1J6mhjdGa8eHWHritjXKl2meyo
JzXB3Bn/Ez35uHLvGqzjaNDRIOSVdtONE1jH8ewHW0vvIx+iuV4Q5NXmAL9W
5INtlvQg1R+Yo29chvoTc7Z9C9Z9uOf8c9p3wNvGppD2HfI+aaED9h2zyXE6
tE/B24cTY2mfIuKXex5gnxo3XoOUENrv4FO29Srs460eB1Sw3xVK6BrTvk+a
vxz8OYX2/Se21xZh309LureW6jNhj384IUQymBxca6mC+rz6kPV52pfJTpej
r7C/ez4wZvqyVfomGz3vj8RZ49TW60dioKs73MF9oBPmW5x6QvsRmdM6Ik/7
Ecxfo9KO/cj+k7oL+umQuxCL/f1Zy21H9DMe/ouaAUq0b4JAqmgb7Zsg094u
hH3zE3/FS4zLMll1GfbxDQ3uihjX40Mlm2hfhukeHo0s0XHE8hVLMvZl0e/F
q+g8ABKjd5bTeYC8G/sphfNA7a4DBnSugLtWixfRuYKwqIguwbkiq/2+NJ3r
yGyeZRtwrhu7bTcD564DnwTf0LmFXD7lN43OLUQyl80U5xbx2zrJdK4jLF4m
gTjvDcpxhOFct2f5rDI6j5ENsTa/aJ5h6qc7IphnYZaUa7ivMJfoApxn3h3L
E8d9JwZlNdK5DrYOfbHBuc7Z/zozfy62W/6Szm+wfuz0N8vOAuK5/VkOzm8d
h1Qz0H6py+IjOK+OFdUdZObVfWpL/FNj4XxqnVVaUS0pq/AwUzrWA701/TiX
kjL+dw9w/uy3mcLgZA+TekvnTDI5/DjGC0+mxDPxHher0aTzMyRvK5qC8/bb
a8HM/Gy8QLqAzs/gxJqwG+ftXoGpzLy90OmsLtr3rd/FgfP27NJrjP2s+L0v
YiLigTsqYO2AQTCcL1pMFlX2Q5NqRChdJ/qWXrp0nZyRX8msm/cYoj3JU7qM
67DNVJhZH960UN8sOQNMx7yucH2vJuEaq18HefbArKgoSxov0RbLtaXxwqWE
SaYYr8Sw14LpVi/h0lvJChfpj/Dwp/Xh5+pd4H37hnZSdRGZtH6ztkZRKRhr
i/MldfZARo+9Hs6ZodsmLEE+bMwbWIR1mVpueojyHG6n6chTnpOteSEnkOfj
8TZGsuIXnaOIS/DqnThHvbUcTsR5ZvXRVCk6L5EXH6IM6bwEkjdD9+O8dEDb
ip3OP6Qqhlsf55+c8xPj0P5OiRoHnSehTUfYmM6T5PpVMTOcJz3d/Prp3EtE
SnYH0rmXQPmuZpx7nwpeL6Hxkp2eTYU0XsKXHXIM420NFTaj9wvCIz6SRO8X
ZOOcDQV4v7j6RGuQzvMkdPYGAzrPw49se0Gc51fPKd9C7zsgkcvLSe874K/c
3oz3HanrEeto3kBTtUuT5o1M4RHhx7zFss1SonUh9gceX6B1AfdMjzdYl3qf
GKwv6PhvBqxvh8kapo4bvtni/QsuyEUhf4DD+ff964TCoUKs1+AVnjLEL6Q+
8wjiVx2uGcY5v7Z56CHGyyvSXY3xZn/RGsL7SNLoXGPEH/dIZw7iDzv5BHDO
VJzx4RKdM0mUYKsq6pjU+4AgnJN3xouqoi51Tz7ehrrkHrpVBedz13llqagz
BStMFqDO/Nu+EGBwdh3qFVt9VS3O+Q2eTnPQD++Y1zPUw6V8ebI4n6vzG7fg
vp8n6eE8TD7M4CvDedho1RpmHn4TVRKD9dXk7ryP9xo1EcsWjDd83bcpAbRe
U60i9PH+9WDdBn6M15vrixbWPUt62QfkOd/UmXYMz7++5OtMKSNeh9zPt2u3
ErHQvVo+68fX2/HWxy4eMZ5+ohuqqpUH7kuVQfNjoY9nhKugePJQbDtPDxnq
Up4hlZINTWtVwl8I14L3yfkbup6kk7b6UzcmDtbBZVkuUZHqbihfsOZAwJES
ct3hrJVrHNVN2QMPlhwY/51kYlxedNVwGXxO/LL7q3s3qIsfmGA5sxJMsoyF
SpozwXFUtNjJuglm6+fOFd/QBQ8jvbYdDn4DojLV0kW3EmH3Y64N3o/6oWPu
elDbmwKXTthP8bAuJYYT2fxZOPvAQ8LOkbu4ANoEx2Tu1bWT+Dca17Ubm8Gl
2Vun+WQjLLWqil/f2UWWBHqVnTPLBC0SE37HuJZ4afc5CiV2Ew9P4+yvlu9B
uHRYOcA8jyyDVYtYmlvJrRCfyL3b2v51ni3krvZpffxIjGtub22vrSehh1d4
sSW0gGL+QFV5YB/pOfCF4/6UdDKw5ddt45+F4/qxEztcsfVsA2RynzR4lNZG
Hoaa+LLzNALbrMAjrFkV5JfJ6PNDJp3k4ee5byS76uHSZp5p90bbyJIJl1PW
iBUSOhzw5je1QDApevG+rIXYRrBM2B/YCJwkZLFMfBO0rt8ayL2mDRLcktbs
eFcNnqusNOySPoIGW0i/kFA9RPYZn5ti3URuvpG6nKLQBpLDfUuQh2/qapGH
cO3YPjXk4a57iuiHvLnRp0T9kE839q5HP0rJ0vkUP1m028IU8W+ofeiJ+MU3
XE5Evh0TTmelfCMHMnvuId/uNNvtpXGBuuzIK4xreafuC4wrptA3jOIHr47q
yRQ/mdeSJIr4B599xXhhc0JjOMarFl84E+M113qwG3neKaU9SnlOzrhu6kSe
e98Y40L7VSGWD6g9sHx/x4P2caFJ4ehfUecRk59+YT1x9H8+9nOIdUcXDCU4
+aa3u5EuwT1pGVubwK53tg7i9HKWiqE44VrzqgTEOV4dlcR72zAP+pxKu2ke
4JKe1hXMg9nkY3cxb6c/96tg/m9lZzL5H8/Pt+Dihnj/TuLyhahzbY0l8hKG
mo0czSBXURm9x6iKmKcUsO8NKoOG+cmKx7d1A6+Z7RHk8+Rfp4UpnyE+yuHl
P/HZ5cSvQTwXcldMrOm5AA/n93F4Lv4t/3numZRQnsPThzVulOegpTA9Gnk+
dklgNZ7Hc6CVRc8jNA06N+J5HKlf1UTPC2zb4nuEnhf4uni5N56X+8pGe/Fc
h6RvkqPnGmIFzb3wXOckhiiiDvR99UQdgOdzFzM6IGXzSR91Y+DIe9QNUmb3
Swt1Y9l9qR70H+P+Yz+eRwOflKvoXy5q+WLUn152VdQfMu3CNkZ/8ktVyhH/
y3WhR/CcdqYsvIn4L4xOyUEd29B5aBfVMeJbu5EFdWy8PLw0/aSMOsl1W+4o
1UlisnRlCOrkobp3y1BXm0pt/amukqa6EUZXBSyGNtJ1sI029kG9naVcyKzv
+PnBltYRHObmCGEdOT36I7COHRdbrKl/ONyceRB1+GqNC+O/uLqQ5a5xLbR8
u3IA69i0OzgL6+i+MkyV5p9crDqejPkfyr3Yj/lPkfR9TeMimfm2BqjPW+4m
TsG41Mt6MQ/kLouYCNbxitrVBMxD/x1RE1oXomB8FvUWJFycfbAu3GpX59N8
kpaCpA+o55u4MgQxnyGje1pRD0+rDu3B+uqw7/DD/N9JL8c6EiHhY5OxjjHC
55k6LnDzRf0nlcUNy1D/lVp4GP2/fvQc1pf0txktxfrGqE1h1rsPHVqLfmrf
tLNjX+gvOcj4uRn2XQLx+LqwFWF9twz1M/WNGxM6i/gVbwSswn6RZDfijfgj
GqILMQ8yYud2YH17MgImYx78Q/kNMG8+QWcisI/c9HzQjHn7t+diacBwEj1f
IJYQ6YB9pzbqbeU/nS8rXcF1WF8Nn/02yJ+tGdHhWN+QvS4qyIeBjBQ81+Tg
wsEo5MMr+1jkFay4aeGLvPrpnSWG/BF51XyH6gOw6HWxUn0gNiXn16E+/FLt
6qJ6AgPKHOWcW2Nh+N0eBdSTRZ1ur6k+w+CNtfNQn3cZct9FfR4PZ9awKNNH
SLAwoP6bjump/5OO8S3ZbUj1mUj+nDbxAdXnsqvqzajP8Y/dH1G9JfP2WzSn
tLtBO49xFurt2f5vEdi/ak++YUX93/BNWwz1WYn9yR70E7P08DecZ54On21E
P5wnbnJjHzRytYxAnbcadOFCnR8Pz84jvJrYT6vl+rHvQKnCvJR/0vO8SUti
MD/afNXyOC+932T3HPPjJj6xB/t1h8l0fdT5+cbC11DnI4VqF9K+CaYSp0/h
/PYq6qYu9s37K1QHaJ8lslFzHWmfhYHDc9yxz/odjFmJ9nME085gn33qTilA
7Sdar3Q6J/IB9i+O1WWpaIMLXCLGIx3jx+UY82mDBj0Hto71W+MVUol1/Cy1
QKXS/7V3J53bg9YTdCtIwd38qUqZ3bB2v/+Zpsdl49o79F49b9TaBaNzHNtW
CjdC+bf7dVKOOQBx2cOte4ohd0tBooME/f8v5gXeH2mA0Tu1BXmOteCj75Hq
rtcCtWtCZE1Wt4CU4+TJbdS+P9sggdqTTf65d9B+d0dVK9r3+9clUXuiM2ft
KrTnuFzmifvOSE4qpfsSae6AVNxXYO5aOcQv37FpFsVP2CouXvgn/Pvc7Lyp
H3Kv4UYu4t+7yKob/YxnXylbVkTxkDTeYMQDxooeCogn7Y6OFq0L4V1t5oF1
Ef96AbAuv4KW9KD9T8sf8Yhfq6NPBu1Pf9h/F/e1SpN/g/i5hQQL/mnf/7fX
Tz2Y4EV5SE5tVtSkPCS2MVmm/8TD8dafSoguUxN7Q9z6Mjc4894l6a9O7e8v
6IevwZoyuP5aPgrXQcPIlFkfrvqIekWEjx5aTecf6DmRLo96dXNf3fa6mjYS
az1h5tp79SDxPO9pmUHj/1q8PYveP8Q5kGOa9m06B0J5hNY71KVIda+xQLZO
6BTZ75VkWguiY9pcSrNrwcPEEd9F4eXFper4Lqo/xsu8iy43U9HB8zg8U1CL
1h00B+/J/dN5fDshX3/j3RIS8rhvUaRpF2zpPXXq+Kl6aOF5P9+VvZcM7L52
VdesmHhMy9x1PJr2iYktz/A7Vzf/jjp8b4yUEmXeGycarKpYOrWJRO/ve+53
qI6Uz2glOsltcHnF6iXoh7/b0JL6AaXOkwroZzw88c6CCqo1dP64+GRWtVAD
HOsVfJtv2wRll1N/YR54v+eep3kgdU8qfynSPMhPuq2KdblvdGolrQtpzmuM
w7qs/XzBjp47ONT3ejLqxjQzGebcNSbfMqT2IPCQfRRoHQPmfwpH+y2zwg0L
dDuh9vX3uylLi8CIV6LS497439PHW0+cxT1GdYYkdJ9F3YB9l84/Qt24e/0k
4ideLonWWMfTn6TmYB2fJaZfyFlI+/RCxVn3KnOh9PInheWSDTBNZf8Uqj+E
z0QsDvXHcvXjIPTDZmG+Ec912daa01jfmZGFTH0buLlVMV6JcGMe1JmQjBXu
GG/kvbtiNP/wKpVND+u4xf6pEeZ/9qYVzlJJvVDesWLM4IAHqby3b7bxwwpw
qwuuonUEOKp8F+u4R1ssHet4w0zw8/L0FljhcnqKpfY78iF/5wHyuB2shg4m
4ftzyYg9892T1f3rUeTDksNTDPF9VTnxK2GJjoOSOWvj8H11vLyNjWl9wXf+
4iodMfxuOFUziflu+NLRXk/Tr5FsV4m6wP01jugsuj85dk33v67LYNBi1AEI
LJ+ihDpw9uYZ5ryvF9iIOgCFCz4pog78BHNmfanz9n2JYTxvZ/BsDGz91Q9y
1n2JIx72sKKe1/ENXef+vU5crX6vF0StzLhRlUti08p1+t4S0hIokDpzSj/s
bqvbo7g/meh6ZR+J0SkkeoOaEffy6D2inz8Jv2u3hrdx4vuwvsiPvfg+rJOv
cRC/708V+ZiB729PPD3z8P2tq2vqNvy5AgXeEH58Z1Pbu78R39n+vPOT//7O
zzs17gPiOWyxBPEAh+jRFMTj15XlgHgkuw8iHiivbXuJeMbL264vsZL43dbL
8O5RfIc8KXieeYdstd3Ojt+vq43IMXxvLB2y3YfvjYWzQnBfsNY+sx73Ld/r
wexbdPwHfu+Gcp0oI/zeLS+TbIz28nvVVuI7Z2GjiBF+F65sPMd8F/639fVI
Esb8Q1SIhAbm/1WlLJN/+agXmH/4FnPZBvPvbG7D5F9XT1wDv4+UJwgS/I5v
5xbDfMdPHtykhu+Zjy7U8eLPbyh6H2rBPCv79hN8zw+bEzMFfw5hG2xnfg5B
QYvfEt9L4zMaX+PPY3Db//55jI4JlZdCI94Qj/pQ/+of14ngWQ82tsJ+eHdr
e8me62HkxcbMsu+nOqDt5DXZVx4tEPDVz8UwKhFu6rlv11/fAd3EyFzt1vj9
rsZh1sQV6S1keFfCYnoeYbIWuyGex/mZ97tQh78/eRpIzy+MHHkYi+d3PD8O
/iIXqA6QoJ8tHUYHPCDHSO+b0cPxv08NvPoaZXy0DUZ+5QosnZ1JDC9VXju7
ug3WNTZdpDoGz4ojDamOkayjguKoY/+2juOtH1Ls20D1mXw4oJVB9ZnwK5u3
oT6zlq5iN3rWRKLCfB92lrYCd5zbtPWR9eDhNUP8pGoHaYwp2r5kSTPMSjX+
dOLxh3+97+djQiuHVFrhdbF7Y15yOwRNurxnTXf8uPZGQ516aP85uS2V2pPS
+0+V/8neSf3XNMS59NboUYqTJMU0Tj9JcYbyvu/aQ+PK7Z/6isZFHPbfEMK4
HDwDpVHPU7ZUKWA/dfjECajncU+kptM8gJzd1tuYhw9jwvxof3Sphgz1D8cH
Fq7FPHDOPvoT83BNPrYHdX5KpIw38iQs81AC8uRWqO4kyiuYal2LOg+pXxMZ
Xj15oIY8gaOblM7QfgHPX/z6R578b617/ViqSucBMupj8KOKzgOzNoin4jxQ
CCbs92k/vZIiaYrzwISfqlOwn47n513bzCd475shMlZH733E564N8872b/Ek
uEeux/lhkc5KnAPJNb8rSTg/RBxaPBfzLCE8uAfrOKHyFh/W8UUmzyCtI0gG
PXiKdeRoHZbEujx+YdqE92KyeF4LvRcT0bN9GjhnjrevzMaUcHruyPxD6V+k
ZmfCqqjJ/njuxrPnTNu5j851EHziriDOdaebLN1xrttbPmFvsl0CSWkfemx0
KgDClCXZZSv7/3Ue7LOfX999PQycHYyKqY4R/2tblVDHLCrs5u+OSiTf9MJ1
qY6RZaFCFqhjgbsDDOm+ELpIwIfuS4IeKDH7BnV/ukJ1Eli/p56iOgn397sy
OnnEzh/tycI9PxAn2VIuz9g/tRxBexK+LRB1FSY/Pc/Yq8602In6IHv2ZgLO
by6HP5ahPgh+d1uG8+3Mr+5LaB6IpPCIM+bhapn4edSrOaIKNjh38V/3W416
lZ9xYDudN2AgX72AzhvguVKLmTcSAr47oU6aaXSyG9N5ac3FNcy8VKvRht+R
SdulHTNZo+PI0FN4i3OO3WPjUTovkZ4J+ktxXqorTdiP5+janrxJdx83k7T1
he7mG0tJ9/1NOzMWtUPTQLJc6OQukrcg06HqVTUUFm6dwj5YBS4aHetwHt7c
oM9J52FiImoQi/zvrTdajPbnjR/epPZk50mQQHu9kxWaVH9IouvrfNSrmyXf
jqP+cJ0ctMT1H4kxL1GXqhf93IHrN5PlOCgemHMn2ZHBo525C/GMV/eGy1XY
16DpSj7Wi0Stucbk/1oyO/IKNCO4sL7wY5I0Uy/D7NdhH5S/J32Z565d/a0f
Wt0OK8lqB43r/1fA+kuP3GtAZSR1TePPctIt6bs54FwXuDwtV7osXUlEnufp
lTXUQvX6gOrtDfRe1Hn9x4o7bSTH/u2XjLRMYln7efv2H60gXbmyqOlcMdhc
E+T9tTwGXlUdjX3i1gfV9u2TpomVEsP8gM0CjrQuZ/f7c73vhYywLpyLwLZU
BOcECJ0zjZkTjhzxmUntQfAwnxq1B8HJ0X5oD/t1S6l/olclP5X6J3d3T2f8
e3/hGqN44M02zgWZaZlQamawC/GcrLwqS/FD0csXuhQ/yTnFWY/4F1RKOdF4
ib22jiKNF6wP7dqK8c5b+Y0PeSJRNPM8rQuEbebW/qe6vHRKPYrfne8msC7B
n6/gHYs+jt+dl/sdOqbN3QpazX4S1mqRUPd4eiY7awfY2LxPiljYBv62nWLx
tx+SfBnWmp2z22GxzRSgvIKMI4M6yMNoCb6ZyCuPaU0CyJOGxKOWiCddLEcX
8QysubkR9fng055eqs9E/fqb18hP+94AN7zXxG1xm4rzgPmmaGk8X5sN1Jah
f2eZHfbI2+pvDSvQf1TgwU14/7ojkP4Q+3vdIpEOPL+RbKtXoo5dd1ojiudX
0NDLA8/vfTVFa/x5EuV72evxO3vfvM0nMV7fGd02NF6yKqhtD42XdAafzMZ4
uwUdYmm8xM3ZLiHu9kN4vmr/R4y32jyAOe/3+C6E4/1CZMcd5rxXZSbbmXB+
hLU7ok8bBfmQp73Fsletu8Bb8I34au9mkLd3el9aeBVs9BR3ft/WCRF+A5vx
nnIroyMIdSN/+7cp6Gfv1Ihj1A9RtRx6sifIB36+i5BDPyCeKkL9kBP7G2XL
Cq8STWlNQ/Qzz7il51FGE6j39sjXSL0jT3c/Wf/uSycceO94xV3xI+wfnng2
9HA8cXCvjuEU6YL9OyuvzVi9UCVHQ0/qJ72PxA3LZsx/og8Na6Wzef5rHTyG
fq//W53/z/o/r4e/OuZ4XKedyF0VB3f/Jjj+uUvgg0r1/5r/qtNT1bt1e2B+
TpSbRXINkV4ZGHBFbPx/h/Kf9f+s/2f9P+v/X1s/GmKw12R/L8nUSG24cjWX
2HCcvOjvOf53kP+s/2f9P+v/Wf//y/rdWc6Ca8/3AV+TdMwxtmgye4N3//KM
8f+d6X/W/7P+/2R9Z9XesVShbsLHbuRhl1RJXsUFcrlvqADeBcGn8d4hPLkK
7x1kftXwXLx3zJ2+YfRbYzMB1hehw3KtZILvyKXIt9XwOFoo3EymjrzlyL7d
cLWDdDUWxBg118IkTnml1PWlRORaXpaEexdpMzz6bJVDHbSn3j08OpRCfspz
6r5h7SEZOtU72rLq4JvUZc7pGvHkY4WKg4NQDxkKa7j65Ecd9JstDf+oFUV0
FjR1KC3vITFX+7qO/aoDW5PsnJWH00F45nZ2wWfdpD2dLbj7RT2s14heozqt
HN7mjU0/K9NFQpecmee/rw48fb/e9VzbAsp27zddzGsh285UJSsMVMPTF2em
b7veAgVmLtsCnFqIONu3G/bD1RAcI+T9OrkFTs5S9rHc0UKEtaTaCmuq4Xn2
ueH9r7rhdbdkZ0dnGVnL/jFwwYEKeH9Ho/jCtD54L9ovcKoilSSLss34IFIK
W9P6ZXdH9sEkvjeNs1amgsedVzPm9hUCa+G2oSPBfZDupfdQQS0dVB/tNxx5
XAhBh99kx/3ohg8vfD4INNRCaVOu6fnnWdB/mD/8Um0n7HLftItt20eQ2Rl8
62hKKtxy0HriJN0OOokrqq9WtIJOSLOFY1wCuOY6rJno3gqKTzqPTHJqB7mL
ZXPPLYqHdB6vvdN9akCbf77pquIeMPDcvzJ79wsw11I4n2DWBEZfeFjCK7pg
oUqV6e2IYNgU4PRIY2Y7eHTH2KdItMEWe98prwx8wXaqOJdEXD/s39J4XmRe
KjzPPPIgns8VRNymzOzzaoTSqK+CRvu64bRA5K8o3kPwIOrAXq3J7eTFEukL
c9a0gUGN7yGBa4awvoL7yAWnAiKRr/Bq4sx+qDSdddpslg/sOKo8VHO0m1yc
pdrHbdcIFbcPfLapuAvPtv+o3Pq8lShIFQ66nGiHxKtnTs6Ui4SPo+x33t1u
Jks+q3Z9luiEWdn3NvldiYHMFuEvXgI9RPOSeZzU41oat2TFuaeZYPHyiNgp
hR6ypezhfD7uWuA0mvX6B18WLFQU1aD3YrLstK87vRfDnDZVE7wXX0s89iOI
o5d4hH8YLt9aCSUpX+Rrud7B7en75lF9Juc3fVyP+jzVr3IA9fmgoqKPI2cf
2RxXxLJFLJXc3HG1JFZ1/J+X+Or2YBTP45d6I3d6HmGB5JKZeB4nXRkzxPm2
dUL7dzrfgucBMz+cb3U/aFxD/xnFL3mof2DLs2tH/8c+rxNAPMX53poUD8zS
4Zi0guKBprQBxN/5SkOsYmslWdbccBDxb37GLovxCidrp+M7gEr2JU+M95GZ
2Zlbcj2kcXUWqM+tJfMXvBrhFMoCuwUaWVgXb1FzeR67RvIrZtT+MK1LstJO
fVdaR8m3R9NpHUmvrZ8r1vHkTCUFTVp3v4ns0fxr2sjSGv6cubTumpcGh5En
rG/7/fbs6yYvFHlOI0+297bxIK+Cny/jpbwig1/ZliCvggYPDyIPA9QCRSgP
id/bY1lRlIdBgRUJyOeHLIHalM/kdoaaIPI52u+sIfK/jmPONsp/IuFJvjtT
/l+IM8jA8xIa1ZxIzwu5NttQA8/LXJs0gudryGNEmZ4vUlOpeh7Pl+JPUoLn
MbfUI4yeR+IjlqiO5zFasWIEz+8F6bSb9PySmEnmCnh+2bdcWIPnfafdyg/0
vBPi9G1AgJ73mhX5pagP72Izuag+wPVHlmyoD88m3/qEeqKWOq+J6gkcHbl8
F/Vkz3SD66g/wfX23lR/4DbfhD7UH6GRs+yoV6GeCTupXgFXjuUt1KtKE6Fb
qG/pG0S3Un0D1V6VLNS3kdfP+VEPr/yaw0v1EFosFBehHordfn/L+kwGrPnA
JiZQ0Q0fo0/+elFJ9bZZ9EHZSDokny+5dLqmG45nJcQvaqiDBbyx15qpDjvL
7W2jOgwPRqAHdTi2wfgH6rZtXIkd1W24sV/XDXXbgOt6Aer8zA0TtKnOQ7FW
4mbU+c6vDoeZvjDmQGhfgKFtOsHYFw7emZmDfWT08z4/2kfgxQnNF9hHxjsv
g69X/8J+dOhkVDDtR5DBa+2M/ehW/88pwRy9oD4nJBbP6ZZow3XI82+5Jjvw
vcv9Qu9GPNee+xMPIc/Ni4XuUJ6D8NTmXLW5tVDocLwEeb7rsu782qPd8O2Y
3hPUn1MSu0WR56lXsm9SvYKp1vERjF61f/FCnhsNnxHcMLkddjvIED6qbydv
H1NBntuwddpQnpMElsBWynNojA7wfUV5LuoyJEx5Thb5nNFbSPVTZJP4c+T5
QoW2GspzIv1sQAH1FjIOyaHefn1XFEj1mextL+4Jo/r89N6IM+rzNK5DTpT/
ZGTNHQPU8+n7729H/j/+uncL5T+51njBEPV/1dJpMqj/VsVHkin/if5LvhTs
F9OMtFyR/x+vzEuh/Ce5j2UVsb+cvrs3BPm/5DZnNeU/Kb0x0QP7kfW6bhvk
/4JfWz5R/pNj2iqbsX9xycjvRf7HD1gpUP6Tz08/ncZ+F1N8nQf7nefqhUWU
/6Q9lXcj9scdu82mIf/NFScNUf6Tyoasfqaf1kTdR/4/DFl/g/KfiOoremD/
VVnm3o38V2CdxEX5T0L6D2/Ffn0jztsP+T922vc+5T8Rfj5lI/b3zYfTM5H/
mf1O6pT/RFLtLgfOA5NSB0WQ/zp39SYdOpNBWDbPnUf5T0a3dHG+pPy/tS+Z
rXwkndyRNXKi/Ccjpc+zkP8mu58F0TkEBF6FtuIcoppxYgz5H75AcA7lP+xa
XHIM55alCxRuIv81G33MKP9BMY1/I845Y6bu+5D/EcdSNlD+g179mRSciy6c
r4tD/ktUskVT/kNmtPsNnKNutD0myP8a6+4xynOIk3/xGOeuhxPvuCPPi9gH
8X0YDtReV8E57bbqkXk4p8UnnfhE+wj086n741wn9fTrdOwjzmauRrSPwMFt
I5OvXs0ley3muWIf+WI0wYv2EVg+nKaCferElOx/7FMmXcu/0z4Cq1559tDz
RSa0DR3F88Vhx8+P95TYlzI52HeElLdNxL5jE/PcA/3Papmsi31KUzO4Bf2v
VzMwQDx9UlyiFA/YKEl7I57ynKIRxM8doO2DfbCff/UsxL/UlccJ401d7aeI
7+GH0xuYeA9fH2H9TvMTqjwUiDpwSlbIFfPTaRhXhvl0zx/0QD2pFs96jfn8
6K5+HPP/WG5CEurPhQOJzFyq/G1xI9bLOnK/BuoVMbtjjPXKKhli56T1/TjR
6ijqW25FiB/WN/o9lx/VQ9hkXdmMejjx5dVPyAeVVb2n6VxK7uY6TaRzKVzM
hxicS+eLHxdCHir+yMK5FMpkalYgD0XbzwcgbwM2rtqMuh13fnY28jbhmNoU
5PlYd/J21HnCMu0u8lzdSQ77Avlyx80L+8KPBQqDeC4k1JKYczTgsm0E+4g2
P9ctPEc5ha04l5K4a2rrsO90nPNm+k5FVrUSntPdldrW2Kc+XXcYwT5lN+fL
ZzzXtgbJItjXdneZAZ5rKSvhZtSBa983HMY+aPJBeBvqgL2xcjHqRri3wCLs
mynXez1RN5qGempQZ+4bHwnGPvtFoNIYdeaeVIwt6lLCUWsl7MuWxyJmoy4J
34muQB0TXjhXHfs4672zyqhjRoGWEppUD809dToJ7fs5D4aHsO/rlyeJon76
Sfk1C9M5IXc4ZBXqp5Vk96Z+qreuMq7GOFdsEu+ahnoLUw1H6RwCvpYT++n8
SVQC+u4IUn32yZzqTOcWEPTrTcG55dFi7duo5y2GsoN0zgHdshf9VP/J4MSr
Qaj/Ikqfkuj8CWMfZk9zPdFOAh/lR+D8OXTW7CydP2F5xE2WLxKdRFVM4grO
n4er547S+RPk3wTF0/mT3NQ0nXH+6fj//sJ+50kROpeCz9azc+lcSnjLNgzi
XCoh+LPJPoT2087Oew92viIPeNO4ZUL6QShjRa+vbwSxt+u4Y7c7moTsWcDe
U9kPY4f2vDTfl0BEHQVnppi8JUbEYp7V437gjn08prP4PjmSLD32KSeeLEkf
ePCd2vuYKp7c6RRKsi8U3DZVSSOvzrIlRjzqh5ZzAwqXfc5CwikNoTmNCWTG
vbVJHFX9IGiU+fD2tsuwiGtQbMaCdBLBZTfpJrV/bP75yLTwEGj5bMvnZBdH
0szu+86k9pOefH+4vDwSji5dunjhklQiUbt1kjTFk5upe8RqxysoPZH5o7o1
ktzjaOXgpvamer0Xa5YmQdjNorBPF18TH/fjhctovMsLHsnc1I6H2teuNVsX
PSTWEQmttRT/oT9/d+N3Hs8n/fV7/AqTpyVxR6VC5LUD67InhJEeXrYl1SH/
9fcjWBl7z6RZf/1+RafEZej/fEhCLfUPH+XyGf9BH3Yloh8VLZH11A+wjHEx
fqpfGFoh/jHuT4gfgjkGGPwFzewuiP/9vLmIH+STLzD4XTUPmmJ+ZDtPYn7g
jMJTJj8Hulf6Yn4G5MbEaH5g9YETTH62qxT4XqL5X/jl/nyafxj6tp7Jv39R
0mgAzf/PjZ8w/3DkzGkm/xzy7xbo0vp2+eiP0vqCUX4nU9/U2Oz7WN9DbATr
CxkvWl9jffOqu74jf5b5NCB/oKlqBsOfpXcdU5E/DSqhyB8wypFk+CPJfzt4
dCSWXLPyt/YLeAr+MZl126h9xt7WNuSnqojzA8pP2Fviy/DTIHn2qifSOURa
dvSpnlMimSIwZd201f2wUXNHscSXNGIqO9Nt0WAmCc12sa2X7AcvpRL5daGv
SJJ67/vqrjzycXvxgZOi/SAROcC3tMwHXkXMNU+2fU8mnp+3lV+kH/Se+XH5
+ySCxI4OlZ/cuSR7yfbXYuL9sGVHjO9YZCYc+jh3rKY8jRhJP838It0Pd9lX
1cRczIXn9h3bO7dEk+Ifn8FCrh9a//ydi9/8uZH01+81bTe+WoX2T9UW7aT2
EHd98lq0t3q5gvF/xqH5M/UPS5/fY/xH3Hvw6wbF46PtpETxwBKPEAbP6ms+
kVIUP0dN1V6KH7adP8TgL9JX2o7xykr60VLkgXNuDBNvsXB8HebHz17/Ms0P
yCoJMvnpcLusgPl8wHs2hOYToChmLeaTu3KKxvWYYsLia85WfC2VtESHFO7Y
2AdLNshUFbIVkMCjUaLHXAvJJROR9Dn8fWDtkr10bVkySdvW/MlboYw8XyG7
V2ywF7RsX286WxsIryW+Pz8dWU5c2+Lql3f0wpWI8DlCVLdSFmYMJDmWkO65
0zas/dULJ75eNa1O+QBhStfDojfnklrXxks/l/ZByd2DLT6bS6BvjrVP9NcE
0nn5xpVdhnTfP3/n4ve5C0gS//N7egvnmjWhffjaWrQHsW7Oq2i/b4CYoP8f
p08/pf5h5hXxy+h/j8XNKYgne6I14oGrDkkMnh6X4+FnKP6RN7PCKH6QOlfN
4Oeb46iL8S554I/xwmmrFGOMd7Ht/RbMj2tT1yKaH1jwwz0N87P+4xMtzGeP
uenPomupoHrPnMnnz2Xc3PPfVBOLQpmVh63TiN5Vwe36sT3AHTQ3P3pvJXnh
Iy1TqF1Ktnc+bgzM64b6wnjj+5Hvif9o0Z3jXxrI7fbHZSqxXWC4+N4h274q
KKvIW2QfUEhqDuorakv1wMPsQVNH12oo2T6gv8g7gcg8sNEJGf2vv1vxm5/3
kv76PdLmu34y9lrmvNuoPUiqOTL2bEWhVug/2u6LEPUPw4s4ldC/+A/Zfuf2
EnikunZBZVYNxHWfiXDj6oarLbMLEb+N7ooVFD+4rkhg8If7fOLEeKd2XsF4
ocHdn4lXX78r0cW6iVQt4bt4bG4o6WrbfPt8QRfsbjQ0/bmyhcgZdBYlS34g
2ho5ViKn2sHlRbRg/v064mQQd+S1WwsRVPfPFvFrhhMi1z90ijbC9JFDt/r2
XSc31bwbfj7oBv8/fz/iN088/q/fT95j87QI7YVOpY5Se3iS1FKP9vNMLkw4
eq4Z7k2PCXfMTANp7cWfnvV3wIZqF1NP9490zjvb57K0ATb6Vd5S6GwB92C9
GMS/p3HVFYofXFf6BSJ+t0gtn4p1jcQxTI7MNCiCxNUv78RJdEHAn7+z8BvP
c+W//s4C1+Qy51Ova6BGeiP/2+e5xD4/aonzjB4IW/ZatielFb4v97+8YkcJ
US/du6TXjN5TfXrjD678oCy0YdHNHYFN8DLs4KBsfBfcZ2effkapXtkxSOtH
p20PLHj5Uk9Zvw6EDkQlTrAYVv5YUhD/prQfxK1zp8VpJsIkBkdG0m88Ccp/
zQ8/5glxD7rkJhlvGZDMlqwiud/CJThsemHwjahVdHpF0vdJLZ/einSSr8cf
sbrnN0M1/8lZnvIdSavvV48s3NBPjshvlL86lgt18nm+NA+gOL0iAvOgEbrx
Hubh0Z/fz/9XHv76/fwpB4fO0TyQD50XWDEPXh6ZEpgHSR5LBZoHYlQacwTz
cKpkoiTmYaqrBfIHtl5zjkH+XFnmyPBH9nEb8gd0OmtKkD/rN3y1RP50Oc0S
ovwB5Ykch5A/IRoeecgfledfCikfSP+hxQb9lD/d76r+zh/y3/kzWnAZ+Uaa
lxW5UXsYmXiRsZd/G85C+UMKbPXfIn8mi90cRf4oHko2o/whr0M0u5A//L5H
GP5EcIQjf+CY4JwE5E/OmRUMf3IuKqM+AOg+WIr64Ke+ljkv3h0eqA8wedd8
CdQHv+U+H/F8icb17aP6AE6Lun1RH0r2xlegPnRMKMbzS8SlmgRRH5aOKSr9
TR9I4R99kP2jD+/+/J551j/6cPqPPgT/sY/8bQ9/2Qf77bdF/77LJ89FfXg4
VqmA/tk1i0apPpDE9hN8qA+f+XZFoj5sNogrRvzGEW3LUB/Oee9i9CHR5BMX
xvtkuiejDwX1hky8eSEu66l+AnfWG9RP4h5cy+in38aTpVRvITG7aC72o/1m
szJQb3ebfF9C9RnkuS71YD/iqew1QX32f3ZRjvYj0vzmyEPsR3wjexpRzz/X
NMyi+k/2BUp1YT/a46uyEfVf9+B07Eckp+l0IPajBP04pl/cqTmJ/YXyzPQy
9qMJGiuY/vLX741n+dOP/vq98V5z2xvQPmzzuuvYjzy5dzL2y/nOYT8iT9v+
D3lvHtbz8/0Py75GCiFkyV4issVRoUSUSlTIUoSkBdnLviTShsoSWqWdNk37
Srv2tGvvhVaJ7jnPxvv+vF2X7+fyvX7X/fvj9o/L4xrzOnNm5pzHOTPPOYFP
0R/V/rDm+vefMHEoypM2eFUD+iNF29ucPDuF+t2k/ojELD37DP1R6yc1Tv4r
gyW0cbwzdS/geOH2eFFuvOanrtegfqoSTo9Bf9ThtIrz11uFJqA/giG+IV3o
j6TAidPnkbX3pSgfgG1Tfe2RX70WWMrxK8mj+3Mof4CXWyzMkV9tLBAwRv4g
px28nPINWJ08JRz5VeGFIn3kG9c+HhpG+RWpn6C+BflVnuoGVeQndo/VkF+R
7EGHxJFf2WUuCEM+o5eZbk/5D2npP7MR+dVFSx7Hfw5NUER+RSp9cxSQXw2Q
EeT4Ujl7N/53fuU7fE8utt9l3E8R+dVMQw2ufZrra2vs3zZBHfuHcZEyCdh/
FLnyjfIrsj49dQHyq8hP2zh5AhOCn1N+RdxXZG5FfiUG0zn585MCkV/Be8mx
b5Ff8Zlf4sarMLgE+RWsFA5A/UDSwUCOX50O61qG+hQc4ngf+ZWVZw3Hr8SI
bwXlt7DzXYM9xl9dx95x/HbohGqMs+Bb251+GGcNzXjM8WTzx+cwnoKcDV9v
Yzyl62fExVN5gwc/o3ETyZk+ZzzGTdtcmzjeLnHs+XPK/8ktrc8TMD7ySn3F
8f/y2f1u0DiCZLR6PMQ4SFLTmYsjDpXHv6XxCJH9IrMQ45q9h/tw8civd+N/
j2uWtwhgHERSvbqkMH45sWUE115h6LSL2H+U581HGKfkqHpw/Ydvl3BAed5n
FE7EeGT103hOnl2zbEai/JsT56P8cLOnhZPfu3XYYxzvqaQKHC8Yl2/lxrtx
3eAY1E/cno6+GEeoDOuNQ5VvO9SgPtuWn7XDeKHvZTdOnz1zlB/Q+ALMN5lt
p/EFaXOo5+KL050qGOfCK9O7Vhjnmo2X4+KUsyuyMZ6F0tUiVRjPKgbNeYLx
jvHoqSto3EryQ6uHYNz6Qc6Ci5uE08ca0fiLZM/z7o/x6WaDDC7+8svRwjiU
SLfu+4JxaIdEDxfHlfN7YLxJ3E8LZmK82dcu8j/jTfJ7vPnQj2D8SAakdKRj
/BhyKJtr7yV1EONEsrB2NfYPtuVDh2D/7f6XMR4k00QCUB4YtKaQkycutK8t
jfvIbdMalB+E7C9y8mtM7sD4DuIHO1ZifLcxZio33nuPRvxA/fSdoXsL47h1
+5Zw+lnZJGvi9Y6QllBBbb8Mf5ItvTb6xkuq/2m8qil3g0nDyela0oHh5J0R
0X4UwIPZ2tVSziFPSZ81NfvlZkeRG3vc7K+G8mBcguT5d3HW0CfmdRFtS+TG
N88WiObBgzPvDW5fewmih3L3DZ4WRhoXRQkbJPHgfeKuM93qwbCQz5g3fn4A
iXm+yi4+jcatx9YcK/oUArc2TxSTmO5KJA5uU+zO/mfdMn6l+8+6/SliKJZd
GQV8SaJiyv294W7GTYEiKn+tt7BtgkQonHBMr+pZEwJbhH8sXBVI1+HeyNG+
OV5Q4Xu0v8fzSBgGO9bFUvll+3grLtxzANbEXps1O5AAb/dX6YYoHjhqXk+z
LnxOcn4UFBh0hkOk98yVk6n8iwNjIcw5gDjN9SDPhgTDxY7VGTeo/AIPQjyk
RiSR5qHycfdXhJF5+ipzFsjR/pe0as8uiSILwl69086KI7PNFp61VOJB462B
m1K7vYmU3wzrVSVJxGOukIa5Jg8cvjSqb/t5H74R3+kv5yaR8epq8RKHqH0w
423aLfca+viHLHN4F0vqh46r7DnHg815DuvPboyCIpGyrdqLwomlyE0BJ2va
z62pX1SofZyyhN9Of6A3CXt0Y6ucEw/K/hXPHvvH3m53On9SZ28yaFytTklU
CQT7IgHeyXU8CJq80m+hRSzUbNos9KNfDGSVTlIpVKb+wmlizvb5wZCzK3bB
HdNEcNtjtTJpOw8u79LU/Tn6GAzZa8OXa5gEG3PrzbQNePA0trHZ/IgfmRN6
tNhlazyMNX1x5fBZHrh8ND47/GkEebXI/cwBNwJC6g/H7LzNgz5KBtsDkqNJ
8eS2g7rOAfCQJ2z6+CEPbr30HWjflUnK1mlt1TGJJvHzOruO6DfDhNn8et9b
Uoj5+JOiCeppJPH60OXnqV+WDDWPW1D9mlw6vJy/Wyyb7EgrstOg7U+V37zR
8+wFSOw0HRBil0XUng/MvuDYDDFpr0c9CYoG68dSCiNOvCe+JSIVItnNsH3p
xFi/2CRIV2m/vMgnlozSXCTZwseDz4I27hY/U+H+YeI8SC2Q3G5cLxo2lQf6
/4pnr/8Tzy6Z5rAi0j4LqqIVYxb/CAGXnNNCE040wwvvM8bJZ9Pg4eFN7Y2X
ksHHfPOcQto++IrxTZ5iNFRUy9kfyskEfuMy7SuGzfBtm/nqi63GMKj1rp5Q
VRaI3h0h3XCvGd6mDAmO9gwj0ywKVV+MzQAd3vag6pRmUNQKk28TSiA+CRfn
aoonwuhBfG5e35vB+cqJh1GUl7+X3HTyYEQYqG6xjTeaTP14D79hcXcBaddR
ujv7XAypceFzFy1rhJP5e84XqeSSh22tXecX5BCpG60zR69uBNHVV9b7pCUQ
KQVfZxOZYmKctSQFxBoh1OKhyky3LHjWM22BvUoKaUuNG76/ugkyyBxHo5E5
MHjL6+KonzSerbJXbV3e/Ksu0j/x7C++ul7BVPJmcgFILXgW6GAXAnn+Q4dJ
izbBBx/dg29F8sHM1eP0qYB0mGi5xmH+3Ua4qRc3qTEkHUKT5NwOihfAyPQ+
i73VG0Eu5mZuzJlsUrfho8iqi9HAZz9FW2luM6x+dfxN35XlxEjSM3amiieR
v/ugdXpDPfgIFR/RMKwgiS/sZgv6ZZGZb+avCDSqBQvh+x3axYVw4vNKA33K
t/Osg4fXlTf+U9+wd979IyJZfBHss/7SzdZSePF67tMePWsweSKwMTKkAU6t
PvPqgEwFfB4T+dGrNRFSNRqOvX5YBwNDRcva95dA14LawK7hZZBumxYdcbwG
BuabzHg4o4goOnzOyiuLhpN7x7j0PG2E61YdxzQKy0jJN1fpa1/TwF48br28
UD24/Cs+dY7QYHGZ9j7xdqGWYlCGD2kOF5JIzbSZ8SmllM9/EQi4Hh9IPuYt
msJTLIchgkdtBmTWs/8fKtP79+t/4sqBE+ZdLznmB0Ejn/HpvsonXvyRM/qY
NYGZVuhlqUEf4dkbVcOvGtnwY83pee9v14Pjv+LEqH/i5bZlFbVqewrIsASx
eI2qd8TiyBe3Y6ca4bSnZmmncjkoaUhG9u9nS2ZNfbFcqq4eBi8dc8u8vhrG
LXqSfHh9PGn13/8iL/AT2P4rvnsl80v/c9TO3E5PKiVaux9O2DlcmThVGklv
S2iAJ0k12ulGVURcz2aKtp8/5J9aPWLt1Vq4/3DyLKpn4NutlEb1TCyTnzqj
nm3XeT9YNLcYpPj2eUka0njo8pb1gsMa4MXxPue/8OWAWNiEB1kp5WQR6RAY
/KIWHsVWX6DzTkyKHvTto29Nxkv134TznvqfcZnFg3/qf13sXVdEpXddwa91
tatraoB6fTH5PDt8rVS/91BRe+LHIecG+GSauNHnZQHZaL9sdaVjCRxN8s30
Ua4DVx19f7qeQXeqXTtdzzDwlVInrmfhjPBsuv5hU/m2SXT9k4Wb7nDrf+84
KTLOIBOeSH2t8X+cQRa86jA3cmuCfeMODLX9HgfzVhlW8o0vINdUso4t6WiE
JdPdcd+Rdr9Nx+m+I0NS7nL7TtldH/cpuf7TMoTuU6I0/MdQ3KcGv8VTv+xh
zdJX96gdIEur7hVQOwDvvXZtRTug4leAdoMI9gsVo3YD+K/CCLQbWz2fb3h2
4B3ZZxc6qr95Lry4ef3TAJEmOHzjxxVql8D6mkcLtUsw40U0Z5eWR0kcoXYM
6nZcRDsG2TkLOTs2Re6sHbV7oN/x7QC1e4SvcXwC2r3WoZtXUDsJumJtk6md
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
T/LIFhxrp/2QoUEdbiiPaemDhdjPn9q3sTpB31idoC2sTtB3q6H93tN+vBtf
3Ed5DC/cGPM/9fO3+BdWf4ef1d/5wurv/ML1GM5juCM77/Nk530L/st53wWe
sBXmMxe0ji0+PFwZPm3J4e4d2f7rntj/e09p27Q+mI8CiR+H0jEf9fRUSALm
owxadJMxj2r3IOvDoIlP4HOO+nDMd23wHYn5HCJw3sgY8zkjFPdw+Zy3LSb7
8D7YyFklMpj/SYehWzD/0838oxrzjy3MPyqwujbHWV2bClbXRorhEQwvYHge
q2szk9W1cWJ1bX7VuxnOcBeGK7N6N2Ws3o3uf6l385P5C2B+YSrzC7AnPwnz
fg96PMoHUz3wXOdxejBhdk+R2b3VzO71DT1hgnmwU7ujJ+K9uJMtKQqoh0Sl
GZKYLzJyTKkuk38Nj6bxZWO+6E/ybBpn1YF5wvZ08xC8L3f36gBuXireOnyr
619GBvLVJ/qFBZE1y+NsrOwaIPNcbz0XVrcFRFg9l0m/1XNROdyLu86ywnwR
mPx8bYr5IsH9tQ8xX7RQKPkbfpcX6pklivHy0/hpPhgvW0nUXcTvB9d7mj/A
+Dci9EQ2xr/PdKeb43dnHxS/4Hdn8FJ4y1yM36cuVb2E3691St6Kwfh906A0
V4zfF7l46eB3VUPvh+XgOYJ/hDl3jtCg1KOH+atz4mtM8FwjFK5w5xqDvvfW
DbFldUOa/kvdkL/FG1m9jyJW70OX1fuoY/jUPqkcvovhJqxORyyr0zGa1eno
yf53nY7xrE7H38oT9FudiwJW5+JP7X0YPznD+Mlaxk/+9neTWN2Hb0q9dR+s
WN2H1wyXY/UgLjPcm9V3aGf1HSay+g5uDBdluBjDV7D6DvKsvsM8Vt9hOcMr
D/XiC/9L3Yc/4b/yQqIsL7SW5YWmsXoNP1i9BglWr0GG1VNYzuopXGH1FBzq
RTrp/oKfY1718w8LArGfDdz+CrtvhPleomykJlYu/5o0L7pcgPsXmL1yYPaq
mNmrT+y+SiK7r3KY3Ve5/a/7sSEy21mev+df8bjHP+cFVuy9/c/svf0P7L19
R4ZHMvwdw+ewcytV9h5+BTu3OsDew49j7+FnsPfwo9j8TmTze5XNbwh7r/42
e68+j71Xv3Zh8s+jFyrJsacQjnk/iR1zuLzfXfYuvRV7l76WvUv/gOGiDK9g
eHN8NKfnceEtDWjHjG2zOT3PZ/LPZvKXMfkVjpxtQ7sn/WFKCW0PEyw/2WL7
v10n/7fwbpdd7+ZsrCZ6Aj9S9A5XkiU9Y+XPZhZB5ocvmYiP35aVQHEQeee+
CvEdPXJpFAfyNjsR24vkTFmP+J/675wlkoPtpwcfjsV+6j2urPmf2hsE6sYH
meeTq23bkm7uboLR60bGbJsaDkIXHjlRHOy/2mdQnCi81CxHfBTLQ5axPOQI
lodcwvX3U+aX3xnI/I4owsem/uN3Khk+n2sfEvE7PhNhXbG3v/ezi+3rWWxf
r2D7WpG9+zdWvffdP1P27t9a9m6b7sved9uOf+99t+1PenjA3sl5wN7Jucje
yfnb+f3/G550P1Dm/qJPJGXee5+gkgoSM71T3P1MIaxi72FOZ+9h1rL3MP/U
j4yxlk1iSg1puPmhJHFYNWR3ee8b2R0J6oWrNYvGNRLVx5veT9IpIYJL8+SN
7kT/sZ8NVb3vxYWz9+KM2HtxPzYNXYNy3tES8aZygtkO47ko5+1Mm4u0fxg8
7u082j+Il2vNwv5/WPS+h5Zl3/seWtOm3vfQ9rH3uJzZe1xt7D2uod4iq2n/
UCi+BvsnlooXJbH/8kthcoj3F8xww9/ducKH08+f5F/P3hFSE+99R0i5tfcd
ocqEU5ZUP/DzXUIT1Q9xH18fhvpZUJ7sOG8NIbfdN+1+oBtI2jUmV47w5sGD
te88qr5Fk1ylzX1G59oS1bMrzsj58EDa8KNYiFsQ+VgbsXrBIEK2eYNlsAcP
9pfoS7hLOxDH1s+b4+7HkGTRgyenuvNAI+jSsusxL6Di6trLw9qjCd+gsNGn
KL59Xcm6IVEhsHh0jmPzi3AyJU5qwRlPHiw4nsXvERUFe/0M1to89CFdYTGt
wVSebwWHJylJx4B8vZjLjL4OMp5u2t/dX/JASO7JcGx/pVRNgbYHR8csrn3K
iTZZ7P/u1ZsOtH/Yc2ot1/+axBXDUJ7HRttQHvC7ks/JU7840gzlT0vJQflB
OkuHk/+58JAVON69KtdxvDCsaBg3XqulC1xRb+ZzyvZQvUHyz+YK1Ju95s01
Vj4JZKflIy2+72Hka3D1s6EqPJjfOmJSjFcysX7rX5gx2YkYKxrf9dnGg1IZ
2eGDvkaSobYTujs1EsiiyJDrm9bxYLpTS58JfZ6SuEKJDyW7U4lARnx03ioe
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
Rp3c/izmE3nivvveQIEy0Gd4BsMfMpwn6HKULyGPDNVt9zq8u47YdE4In1v/
ERYI9eIdu3vxRwy32iwwDOPKxf2uRtG4kmhc/D4a48rrDK/v24vvZrgvyfR5
/6GK7PHt02+/SxnwkxczF78pB1eGn2H4AIbXrVXh4tmkaxHLaDwLlxYZrMN4
lsdwR4bfZri68wrEib9d80qMf3/a7VqL+CaG5zH8G8PHR0q8o3ogc7QO6KIe
Nhe7WqEeZBk+nuGqDHevNNlF9QArlrQGoB5k6zb5oB5OMlyB4TIMd0u/503H
BU61hYPouIhoVcQMHFcAw68zXIzhDZ5dqDdYF1L2EvW24U26IOqtnuFXGb6W
4bfsOvgRn/vi4GOM6wd3JwogfoPhhxjel+Ge7hEv8XcVNj7j9NwqqjYLfzeI
4VIM72T4haYxG3Fc187PC6LjgieVi0JwXFsYbsvwhwwfP6vpE+pNe8RKLao3
uKWmcJ3TJ8M3Mdya4bsHGTvhvBh18lbhPD5JiufmUZPhdgx/yPDp6/mFHGcW
ki05Yx8Gy2bC0g3BTktqGtj+Sou4weICn3/x2MiI84z/1/+Xffcrn7yC5cnr
WD55ANvXjD/DMrav/3b//i3+Wz4cnFg+fJBQ2uu1vArw1z+kM/NmASTm62+c
fOhTrx2zyJCZxOyY4L/sWJRMB7NjS/5lx9h75hYF/8QpvX8Hy5SyuEOatV8S
fPtnZ0411GSO7pNclE+2ao7Ow3x1r/1MlPFk8Uvuv+KjEBlhFqcIM3l+nSN8
Yfn/QSz//8s+32HxSwOLX/6kn975zY24zOxqOZvf3nHFR/xkccqveNCffZe9
lX2XfZd9lx110z+M6pNc0PVdj/oEx82bUZ//p+ZRjn1HbMq+Ix7HviOe2Gb3
02FmIci+vGxL1zPR3hv9FNdzBsvjPWZ5vD0sj3eW990X7eSnk+F8aDfgu5IY
7tNRLL83heX3DrP83qWjo9ej3c6S5qFdgozlIlG4T8/M6t+I9r9l93AN3I9j
dorexv14M2nvem3PZugRGZBqtfkcXCuL22e8Jev/2n3+3vWQE7GM7ccOth/Z
fpf5xM6hFrL18wtvYutK+F/rKufX+RcZys6//laepjYH1A9R050TfpHqZ+JI
g/9P9KNtN87JLKmOZJs+r8HzqRu3pxT9b86n/hZXyO/bIJ1bCxGztjfiedaW
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
xzLm2c/hTEgLiJiXtSgeilUUWq9q/v2+mWfZ2kc5LEeSRvXdLetmB+DyaG/g
+6W4PCry02fK29L3u6bGzN6lxGadNKqvb+Wzlcf/C8NKG2/j/wWOiDbmf8s3
LHmK24ksDhZX4Hai1hfrmHa+a+48gr8LxWv6sxr25qEd/UNe5LtG362yqcoU
4pzsmjT6blWt53PSP1B622Q17h+Y2KDB9E9O6tGTuD9BdpVdNu5PWO5sw/Tn
6uHlpP/R/ZNxC3D/o8udtkz/ewwkquDxQnP19ZXweCHl6pfMeI2+43TQ/72U
+OS7SaPvOGUX+ZJxh2vO3HPxuMOLnEJm3OOXRpJ5AiGRUsF4nsCq9N3MPPmc
p+yJ5xUScloSi+cVSrt77wKZV5kUf3ZQ/PmE4s/Rd42aNysaXrkSmDT6PsmC
1TX9eD5De2pKB57PcFrBkJnPehSvho3Bqx4SzUV4vSBuJV07vF7QS8lKZr1o
imlk4/UFj53TyPqCT6a7Qsj6UqX4Npji21kU3w6budZj/wDrDJ2If0CbJp/c
T/xDCX1HJeXp2TqHNAeZStrOoLYw4mdQ3bOkNdjPQAinH+NnHh2XJn4JfLWP
TMR+CU3hNGb80uh7I4Zj+rlkw4FW7N/QN9P51di/QfSmGsa/2S+Vuo39Ifp0
NzQY+0NQKNzH+EOrBYUXsf+EE8aNvwtdEIrV+cX4zzNLJXdgfwsrnjZNxv4W
CZw6zk38rY1j6jvsn6HwaJQ89s8oIFbtKfHPxZ4nd6mHOSCZpV3rsT9HMJO9
mvhzI3qejR1znl1B3/Ew3s+zZPOke0mj73gMyV6chvcRFD14qRfvI/DN/Xw/
2UcM7/gW4X0HuaK9EXjfAYnVHrlk37GX1FXE+xSa+MGrBe9TUDxH6CXZp2bN
COotH3iCzHS1F+J9Dfb/5ttN9jWbmp3aeB+ES00P++ohDnG+SmL2wdP7DbXw
vglmm6+cx/smytsUsJjsm7LIJxXvs9DXKLIM77Mo2u3QGrLPGg/KbF1Z64Dk
Zc7V4X0ZLT5ZzezLovYWrngfR9adrUp4H0eBfesPkn3cnr6ncUtK6moGq89f
611dTikP4wT0lSvlT4wTgCWTbS/BCUO8ny5gXIEayv27MK6Apqk6YgRXdJzx
3I5xCJqYexVhHAIVbp4cBIe48T+2xLgFsZRX6mLcArulw88S3KLwWEqibkEk
KPq5AsY5oLOxnsE5vfSckjjmnKJmsdkY4yVYwOWTgvESCg8UNiF4aVv80Z0Y
X0FkkP9gr1Ea6lS9weArG7MBgdtrr6LggR47jMcQj18zg8fagl9rY/yG+tPy
7TB+QwtmyjP4TenTtTaM99Dy392iGO+hqruCDN4bfR+Dr+6HHtcVl7/85/2e
J8kYTyLZgLyzGE9Ceux5Bk8mmZpZYvyJGtstHmD8CedrrRn8Gd8wKRbjVVSa
tTwB41WQWDb5AcGrpRXrjmF8i5wLzj7G+Bb6qm8x+FZ49h0hjIchy1AsA+Nh
ODS4XI3g4RDd5UoYP0OE+InlGD/Dd5cEBj+XHDEQTjxWj+ak1Lr4KpeipDsr
b8mZt0IQf8vk6oB6MD3OXRWSlIe+5NTYvxZtgz6qwy0ao8P9U6F70IuzHv2e
FRttEFsKP24o3dC1boVGqp/tofpZHaqfNaE61nlUx/qF6liP0XjgcxoPHJIb
iQeepfqaoVo9NW73ZJlRfc10GvfjWDMS9+umcb/JF7p+4vZAmX9QBG4P8kvt
ZNrzlMbrRMbE68J3WU3H34v8JuaV4+8FveOxduR7L+mfJ/0DEYWhjrh/oLvg
M9M/k6kONHKMDlR4WxHPiU9v0EQ+0Xa78BqkyP60cD32e9k0z50pzXPXRvPc
rQrNdJCeUwAl+e4dU8srwXaVYrJIYjt8pjpKlzH6SkmaF+8dzYsnTPPisdD8
d59p/rsumv9Oi2U3JxlHve33i8l39TnvZMZxWma73XmvBsT6oNmNbYoHWEa3
e+smtYIaPUej5pFzNCc9R+vEcc4/c7IZ2r0+ykdtqIaSW0PTtywbP//myHk2
MYlvJM8pRNI8pyPn66Ik65G8qCBI86JOYuyNSRRPgiTFkzb0PTTlQ0P9ZtNe
yYy+hzaqp9s/ktcVvaV5XUfqz5b5ycHkh0W/aH7YkXP3B5m1I3lmkSXNM8tF
+U6XKd/pLeU7BVE99VWqp/aiempT+l4Z8KvtNud4IjP6Dp4m5Wc6Un4mF+Vn
hsoXXcD9DIesk2bjfkYpydp3ST8PZuZMIvNta8idMrK+7n0/7EDGxbjc0gfP
B7RP/8NHPB9QUPFrZj5sofrlS1S/fJbql1WTpWXxfIPTOfmNeL7BvAeCRWS+
PaZ5JDNpHsmXNI+kK9W5zKc6Fw+qc0n75COAxxdNk/8phMcXmelbTSPje3Wc
eJEQzQ8oT/MD3qH5AbtpfsAlND9gMM0PGE71IKxj9CDmVPe9juq+Rajue7x5
NdQyol8wvz+iX2ig+gWbzitl5Fygx2t+keCcMhnuboJz5NYGMeeIXRHuRQTn
mP5p/pTgnMjHYVkE/+y97lJGzhdLLbYw54vmV1erCV6a+ub4JXK+iCy/1krq
qaLxqHgaj1Kl8agx8wpO0HnFRufhaJ7ib3Qejs7bYzQfcTadtxbzLi0m60vq
sugm0v9Lg6snkf4fXS+jeYR56HoZXV8CNI9wGF1f4V2eC8k4LuZfuJKsU00v
7ln/tE7/v+3n6LuRpnS9uNH1UnZkzsCe5vcw/JOfPVbRD9iuJ3+sTGiDnLY7
ZL0gK9XLN8h6+Rp9hFkvG9QGib+CtFsGLMRfSYQOMv5q69vWH7ge5NPvdjhG
0Q9xHj7A1DNee5opn0qK8qmiKJ8qlPIrsii/ooLyK8arZzHlBWlQXlAC5QU1
0/hY2Zj4GMccs0HyvWsG3PNJO1mGeZl29iQG9pP2v5C974LtsMnKteWf2p83
Jp72g57H/wfPxvdZ
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Lighting->True,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-3, 3}, {-3, 3}, {-1.2030980439692827`, 1.2030980439692827`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.717331381165474*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJykvQV4HGtyNXwyI8n33t27nIUsZLOhP8km+b7s7kUzM8uWmRllyZZRlknM
PGZmZkYZZGZG2ZLFzNJIX1W93T0z8ox8s7+ep3p6ehqrzjlV9XbPqNsI3/Fj
pozwnTBqxO87zBgxffyEUT6/bz9tBi0y/w3wN+PJfvt78Hw9oE+qUN+3rwn7
hwyZwnO0yCyv9RkZYqU8NWHs2LH0wf7Nm2WOP5jE079xuk2RTD8xVmfjeV6q
L6PXRvaQL1Ozwx5M/M7MH7jx3ETXW+fK1K3h8U3qUhrM0YeN7OocT915pX90
vtNPDf/I2U5wvavz2jXpDmT7g5Pr/FyWuTusp3twvOvdX3Cy+985P+cfOllV
vNHI7lOcbPNrnsqin2gHsv9Ud/E41zu96GSnv3B+zj9zes62ZTq+xnwklg0c
qzv3Fw1hrn/4t66OK9c29iPhlu30XXwA5l862bfZ2HcjV/LYdrYeDmdrh5Vf
ONm5mxOHjXJ9mAfOQ+Fudz36qj93dTS5lNGuj3HX+TH+wdjWw5hr5ExvO3Hx
PxkbNnFy2SNc7+yG81P6F8f9ydxI13u55uSU/s3Y8BNjrpETueL8RP7DcS8N
dHm46/1dctSqPzZw0AcHamRXF5xvYUPvfzTYuSNc5INhH6GqMzq6G7v9d2Pu
MydeGOp636edn/qnTk7TFq/vGXON7PmE8z1/7YQbnxn7G+J6f8ecQKipq501
cMBg17s97Pw0mzvZs+2yf8Bzop2dXO/5oJMTbuVkt9933G2DTzu7PsA+DQTO
KgvZX0tXR2vgHg9tR29v3sTxnTsNu3PmjJLgBvto5KL3uMKq2e64+jJnTv7c
8IazxNzR9ZF3Og9kRyd7+UGjx+jg+hjbXV1dJ1dHaeDpzzRPO8u6jXh1i/Nr
62Zcx48cuSkn0ghyNjrfX09jLz+2ux79Ovu53t96J1Dv08DJHxytv+v9zTIu
4l80gDbEuPZqO8jnrkIjnzZy7jMbCck/Orkuc4Nl/K63cRo/deK4vn/dwX/v
3G0DHY8lc55/3RF+58png4w9/8yY+yuv4tfOr2KYsV/7mlI/h95/3bF+5ep6
hjsezWRA52Pwc1F/j3FCd5unGjn7CO3s7fenX/g4Jzt15pyerncf5gSvpgbL
xFmuDiXn38v1AYKd+8NZEezMRz83jtHIRQQ6uYjprnbW4MJ6uN7tEuenPsPJ
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
a5p1Ic50gX/LrtQatcSgpq2xtJMnlnXsi6B2PRHSuivCW3ZCTOtOSGjbCZYO
nbGaHLqhRzfiTEt4t2+Fg0N64fioPjg70RMXCZlJk4fBMnUYbs8fjAeLhuJJ
4Ai8CB2F15Gj8TZG/fDT++QJyFo+ETmrpiBv7VQUbJhOCWcGirf4oGSrL0q3
z0TZjlko30W22w8Ve2ZjvldTeaLGoMbHUo9Q6rfG6j92knoCpvancL/Yzdh7
uUdIJcTSMxL/uP/+j3FKMtMRqfdUzaeNYDPDjhsj2Co9uQvNjHE4NdQgT7ac
5oEzLS8x2RThKCllG0kpR/HtvOJc7gUYpV7eRVXiiSnacVLioYUYGZIutA1J
86g1jy+oJFR8TUhmI5qq55hfOuWYZVK66Q8YlN1059TDY9a77VPSCmLObcUy
S8JiWrHirl7t0RwbkbTiHh9C4xozrb6S7ZH2yNw41FU+hbXqOWqrXiApMQSJ
ZJXVaaioeovyqncoq0pHadV7lFRnoag6V7bKqypATmURsipKkFFehndlFXhT
WolXxVV4XliNJ3k1eJhTi3tZVln/Rlo1Ul9U4OIj4t3dYpy6WYhjV9RThftO
vMPOg6+wddcTbNpyD+vW3sTq5VewPO4cEsOPI3bxHkTOWo/wGcS56SsRMmMN
QihfhczfiSGDZhDvpmLplFXEuzjM6eUN7+a94f0ttVLNegnvfJt1hV/zrpjX
gtqglt0w4NtWGu/6IZAsuH1vhLbpjvBWnRHdujPxrgssHbtidbfu2NCrJ7b2
VY/nHxjSG0dH9cXpCf2QMtULV3zUt3hXeI/E/UUj8DhwNJ6HjcXrqPF4GzcB
4aO7I2JsD2SvnIacNdORv94HhZt8Ubx1Fkq2z0bpjtko2zUH5XvmomLvPFTu
m4+qAwtQddAfCwa1sD2C3aAC/PvvntrYfmcQ8nMnN1SlHny+izjJ/1flBX+x
kHjprpgZ4i2kVLZfdWJSNCpacjMm1DTp9WLaYTWQQewkk9zHZdo7owkzGGoJ
97P9Ng3foD1lI6ZJOMmP4pwVRip2zrWxUpLgh1y81JCLxEKj2eIysOgqry+5
7prNdCaahYSc6m5KatOaK5O0TdrDZfGLhIhmVQlSkuOmi3hox0mzIqTiYn3l
XaLmEjHjybhKyn2V98XcZfoDxc/KBxo3FT/rqx6TqTuslsQg1BFHrdUvUFv9
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
fcrD6C+n9Q75bFL572R6Nh08D/nfbrLT1FMLonSaypHLSkFUAAKctpNRsD88
kQ2XZMJH6fAccKpLQnxNgJeRzCrPw+tIZuVIZoErFE7FiJpFiKKFiKoF8Csj
lbuPRrJ300jWThrJxOglYzuNpFspzkfNAY6kIp6nIK4no5xKAlaJWwSroQQo
T8PKJDsPf59iPadSLLAavLieBi/oO4kCrfMW4LUW5m9s68doDZzxRvL7FPYJ
XgOx02sYrdNeiPwPTq8GZJ4OBsxOrVK7eIGs+yeZs/unEK3vn1qBcH7v5ArY
csP6T3JqiF7+PgTdfwK0ndRtGXlP+i0XRT9xmPMczN6kZg9A1DCIGi4IpxEQ
NYIy0lYcjaJgG/pxDmwuWdexaXvG/wDl+wIjtRmDvlqNqjqV32xyUv+AhtYX
jljpczLGUG7zUuMEIZ9+OG7WJmc42SnXL1cTNW0nmZX2k2bJcsBr+STHwZxA
85ePwtjfOykiVQp73p7CVs9Ui6Pxuoq8fHOfWmBh2e+flTViPF5/iS7NfI88
31SnY1OXz6R0zwWU4b2EsiwelLPBj/JCNlB+RCgVbIumou1fUfHufVRy4Kh8
vvxUApWfS6WKS9lUmVhAlallVJVZTdV5jWogVtZF1VU3qLrmJlXX3abqhj6q
auqnqpb7VNH6gMrbH1JZ5xCVdqprYy0h25Cy+imr5TZ5B20hD8sGOp6Soeps
Bq0XxeItgHaTQatGIKlESi5XTv1vCFjIWu156H/Uiy047CYw1pgKRyLW1F2G
oxF7qlAwVp4zOBPnBIKzEnivCGmr8LDiLB/Oz92L9AVxZEMkWaiFslATZX5J
Vp95sLk0koaaKTUaBtZStoK3CPAG1hJDwVuICcBt5iW54zcBs2mC2tCljbAN
jN/Fdfg/xm3wQgAMuJ0Hbuf9Odud89OmOhi1gbM+eMeHy09vfliDhzNe+MDA
GfAG4x3yZDe8B2c8oYgHZzzkFT+b5PFxPK6i+4atxK98KBvs3T8NAk+jCOU3
R8+rqHPtTxn5ayh7M4a0wTScG0rD+WEY6irabEJblBBnDZgjxOmn6UAceho5
rFIfwO00BnEmge6xMcjtN07rcTYzMXhG5uMLauxDOc5qx8yCHBJW6zdGcanz
xsM7noNpO/ltzuzn5/7SyfSJyTV2P3eJ3Rw7dmvmyMLq+g52sknVgwqqOhhK
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
LrOB0iJjKsMkKW2ifTpDm9LQ7lVQfD1msKXVhAZblqUfa2fsRuNkXwzE/mqc
U87/6CTdqaz1Q2nW4ofcOlgvJNmGGunAWy+Bptdo2R9f1Gj6E3m88zolLJtP
iZ5LKcXfm9I2rKf0kDDKjMD4JXYn5e5UK/LN+5ivROe+/w3NnzqP5k9fSPNn
uNP8WUuoKKeVigquUHHJdSouv0VFlbepsLqPCmr7Kb/+PuU1DVBu80PKbnpA
mUhdaY13KalWXcVxKq+K9l9KImuUukXOGhWEVAX6e2vsKPWgsrsBlK4Dpe4i
4KShFKajlKWhhLFRK1BqwfioCSg1YYzUCJQa4l3jVAmcKo6j4lsKW6Kh/EOo
Z7HgZCuAxwuQsvJ3Q1nq3ihbHmJuLkqeHAwZsqGebKgoC4rKjNa42qq4ElN7
yzBXACo1DMOWkRQMU1JClCUDrmQNriQNrkRV1cZ5cZ/jJzMe1vPDOmhuODEQ
vCmL8/oMAH6G1wGP4T8AynBSAD0Fgj/TWvhM3hlOZsPvpLCtw8iObT2+3Xoa
hsV581+K85k6USvR4nyn00h2MA4xRBlGVrbcMBz6FhZ/fjiHF+0CEKkSi6JG
A1biDLBRqUuffjAyl8pePH2xV/hSo60JGlwHHewQ2TOYosuy9COnRP2VwdHT
j0LUPxlpSXH0l4oj/yVituEmKtm3hQ6+/Qda+nuVkZb/SU3xebz7JsWvcKfE
NR6UjLyfGhRM6WGRNOuNd+RrMTmPqe2t+d8/07xFXjTPfQ3NXexNeYAktxF5
BpbZeJ/SG+9Rct0dWr2Ba7nNdDyrjBauUjcM2+4C5j5AfQe55jYg6a1ygKTU
AZIC5BzUf125Aok1xBegAJJ25Ju2NAVJS7KCpOmyAqWRQcFwqB6g1J3XipQf
o8bHQHXdUngTMawUPV4MLxQh9BXtQ3gFIIUApACAWBYCkgUKkDwAkgtAcuD1
HKggG2rI2qZBgnCcsRVDpAiy+qDO856J1+HgI20L70meBqGlhmoWgrdTgvnt
FGCSvAninqaGTyPJQWY8bORXG3ivnKQNsPUOtg4fngIKpuDXh/ET+Eheh08r
M8njRPVeivqsUINnUAIgvKdIOWoGGtPw4DuN/0oWvkZWsOBhR0ThYRJAnhZA
ZPKhYKvKQcg/VstssgbMRudt+3YOKrMaAyr9akbGRB9U6bnIVq1xUrNHn5hQ
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
cputN489l2sSpz2puS1LUJQmwxWI4rruNN19JvHdRMVil+Y5w3sJ+O+OeIRF
NTHjoZzXdt7uvBZZdAruM4sD9ZramJHRw2+Dlnrrj432IA/JdC51gyPZjfI3
2ZXVB6UO50s0q5QnZZC+V9FZIReuVezRRtbwpeFcy8J3yc3JLLyXwZSjJ1VC
deLJl13lUj3o+i4S41ur2Zcm8SXauFfuOCMGd3LyLNHcWczGFBbxfLyFP3+n
QLnztlDYKxTeAoW3chSJN7ONIM2J9AYKp+sZ4lkOs/CqSYicqCLsVc2jhld5
f8XOBP5v+NTWcUk8KppQXsV/t55jguFU6+aV9ri9WVYgazrFWZ7JbDwBR+uO
Pf4tx9rqjqj8Wvu1WTzKj4cMNE3iUb6IwAFR3bE84N6rnItny6L3TMYFBhI9
1xquMzuWQU689nun/MlpNp+FykfGNjf3SsU94px+rmg0z3Bf9RUq1uAcdpM1
ci07SPnHbPiHqxujKI6Ac3oylYNuZOCj19NNkv2eVBHzWsoYDyXqHhIH2Tp5
56sO2a4bAZO9ZA1eJdzxs32GY6U9cDafVh7i+9FOfstLJvHTBOWl+qOjvMQY
yn1stTqCY1xlEk+ZxU8W9w9g7zvUpRtGn3IYxyF/HDPLPNFwiFH7KT+YDCew
b+4WiSc0P3DGwjCFEUH6jsRwYivGlb25YtatdicAFol/4ogeLjdvZPAU5HWE
v+tpEgLZI9YtazR/wBdXkxz8AV9cSdD9Ie6wdVzUHWLsSch+ATS21rOCja1F
ltBsluVum0+JS8QhTbycGDzy+GhyGo6P9Yl5XHdY3D90dlpxkzy6jZrqG98Z
rxh0/Eb7XTsdC7T+75ehnAQq5QNmQnlAzkgj6dzOs5s4wN9QJ3whPhDLMokj
zOIF24108YNJPAEmusFEd4r4Qvxh+AJ+6Lqsc2ESR0yQUsIITZyT2i9wZoQn
zKN8YRJvPKXxcWqMP05ogCyz143ikGPiEJO4xE2D5Gvd4IDFHzlzQJjR3SRx
yfCE895/9RFG5hZvnjrkrmcIChUAfQWa/u/kc9XGKb83V1/EDj1u1vtbzHWn
uxmdLuK/lsxrnXuZpMvNWqcnSDFuZJxQz1EQcK/b2s+rjp/g0PFnNJNxGLr8
cUcIpNNtjd9Ix2udzsHpmHQ4X5b7sT3WR48d6KqCy0l//mm0mk3aHiUW73n2
butT3cbf9Y6Dam+r0GGUmCzbW9liJonkHEoytTCSocVz9OV3VBi5njq2J0W6
6EylKzxbwxx7cbUKJ2KX9B41SXfyJhHnJczLr0poQY+22nuUpSy9apLOfMzQ
8eguPUaWJZ84vf4gdsxckmuJvu40WlvWcI/mS0dq3cg6zDWOz6H7bLeyNCVm
Sk+apAMnKiXeSBvbfybpPLR2LUnRfzVRvyKAtciVmkO/dfLWkZAi+qzjgi5G
I0Wq/ltp9J9Jek8Lyc0nHUJyEy+5alny6agJVT7SHQ7ic6m7N8Z0klbjr5kr
nSM9I2nKTztdjs7p1bWF7jGLtJ6SflGz3z6uegeWrNR1TanLpJ1RDFv9Z/aP
re2c9NG4/QOzLJ1kR3GPAtDeG6enTftWb4w94TQ2qlm85qBHcshInkZ/ZGmW
yd8EXQJh38xQvImlS9eoYYy3hLBU/rbXUxy7xr7zmJeIh80kscxNGBT2uI+u
cHmld5Db6A7iiMY9xGcXz0ofqX5S/FmWTXZG1b5H6Z23XPaOQmuUQnqlR0zS
JUol0iEwk3QH3NqTpnQC407RO0fvFE6kBpVbvDSsEjW7zP3CnZPAq5Z6Sn9w
V3ReVAGeu6SD921En3AVek46hbtETCTj4sLffdrISD9O3fhn5xS9Y1A0Wi2z
RRWuO+GxUZ1gu5GqgEEHWMPX2CdupcJLcjDpBB74qh7gdrpEFpLkJNEJQqov
TPaeMBs9YVn+mcP59f3jHPI4K+e96/y4V8/SjxGPnH3S5WjlWHvSOJvzqB1H
OUGO03HylB3NcTTJJIdptnsbNvZglV3SDtpDDlgOln+vQ1iwH+cYJ+8d54gf
d33E7zlh4NcO9aesE6iO1zTmYB83DlYcysh3J8kBawcuh2y2e9XN4UAvsZnk
CN3kWKVuxJFaVkxxdnh7xtTTmtmv/nR+eO+7PDzNtZ44vJ5U7mU5rBvsQz44
w3/h6tDMcnBu4sTRhwg/4leuJsghKlMHyVngklk7RByWYzLb6zBG0w/jadeH
8aHx8V87zHJIW54z5Fvz9zR2iryuXMFm4kezfG0E0GuXJe6qOmi1/q1N8pUn
OHpGvrVlxVSnUtvlMOJXJyv0k2Bs33d9GB+5PAyjq69rXc3fO1EEZJKvPUGD
JsHhADwFoHjpZ/n69k229Jph9zhU/Mj1F/3YqF5/NXYs5vG51qPdibLjdaJ8
PcPwJc3yNSdKp/KX1L8sf0t8P2c9umOcr/mM66/5iRN1/8pebuNveEyXL8pf
zaz347UE5XjD4slQQNcl40SX3oU7x/luP3P93T41unBUOFk1XX2BawnSTcxP
vPrrbmOdZ6/37Iz83PUfnDxGXBrgq6bJUZrlOM0Kzi5xhNL2V07+yi9c/5XP
xihDTXGqvzKm5TE+to7Tj//i+g9OceLjf9eakiu8NGHq7vpynD/zr67/zFTj
uP4v2Qck/IobjRun0V+6bnS60be/HNMoW/Q4If1Xrhv93Pim/9tJoxFO3Pms
68ZmOOndf3PSbKiTZl9w3exMJ83+q5NmN4/Try+7bn628W3+l5NGN4zT6Cuu
G51jNPo/nTQaME6jr7tudK6TjvgXJ837Oenft1w3O89Js//spNk1Tpp9z3Wz
9hO+/2i8Wj1usvvAdWMLjV/8hfFq1Ti9OMl1U4ucHK59dcxl4zQ61XWj7k4a
/Qej0cXjwPm560a/MBr4ufFqgRMnzHbdhP1s7N8br+Y4aWK+6yaWGiHCvofD
zHF6yd11U8uc9JJ9lYVp4zS61HWjy43v91OjqcnjNLXSdVMrjQZ+Yrz62Elv
ebpuYpXxbezbIr7vpAlv1014OOml/2o08fa4CPm6btbT+GZ/YzTxxjj9FOi6
KfsJxh8Zr14dp6mNrpuyB5W/dhJyXh6n0WDXjXo76cG/ctL8C04cE+a6WR8n
zTpb1vpZJ81udd2sPVw7W9P31+N0wTbXjfobjTpb8PSX4zRqdd3oWicd8LST
5v91nOZ3uG7e4qT57zlp/l+c9O9u180GGh9/ykljv3DS2H7Xja0zPv5dJ43Z
47QzOA+6bna9k0N3doPLz8bp2WOum9/gpHln90o8M07zJ103H2QctrML8H80
TqNnXTe6yWjU2T6Y9r0b7G674LqxzUbwc7a57dNOGktw3Viwk950c9Lsd8c5
8GTXzYcY39V+yvnJcZpKd92U0/N2bBPHaS/bdXtb7O1NMD6v/6f6K3r/5Tm0
EilPZpk3lt/Cs97T06YVa3/qL/4f9Avktg==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", " ", "ViewPoint"}]], "Input",
 CellChangeTimes->{{3.717331527970669*^9, 3.7173315347245245`*^9}}],

Cell[BoxData[
 StyleBox["\<\"ViewPoint is an option for Graphics3D and related functions \
which gives the point in space from which three\[Hyphen]dimensional objects \
are to be viewed. \"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.7173315360151863`*^9},
 CellTags->"Info43717317135-2037573"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"%%", ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", 
      RowBox[{"-", "7"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.717331589222823*^9, 3.717331611422928*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
sOlVnvNO5ZjnXhC+aWCzQ416HXJqGlz/br/B3fXmb+EjTDvuv+a5wn8xz3WT
Gj0DxLsZPV3qz+dXeDauYumbp6U/8fIzSx/eXfWucySm/4+EM35ju8QjNqx9
3qjvdYd6Eh9ucPeEacex2pH+xEub50p/4oWNnu7oRqcb5KySOKpmzDjvcOee
Hrbu3N5lGhfiKedfbf3+wX3qF/GaV0cXGpj1vvpF3O4X8YYf5c816tlF6Uf8
aryPiqfIstVRu/htl+lV59d6znJ6mr/1/0cb3OX4En9h2tH4Eu9unit+iJc3
+osf4glMf90xhh/h4ww/4o16bQZO3ojnQjvkjXhjPJf8EO8MPckP8eTxTb+o
B/Hh4IF/83cxeCM/xLOadmRXxIdhXGhXxDmO5I14VYw7eSOeCXZC3ogvte0K
euF9ET/EabeyK+C0c9kV+4f3QuMOfAjeI/bLakf9Il4M76nsAXhRvNfUn8/5
Hn6A+hMfCr9BPYn3g5/h+BJfD7/E5xHfDT8mOfzS71F/4oPgJ6k/8Y7wq7Rb
/s5I3zb35ztnaL4jfnX8zUGD/hqlcSQ+zshrHrLkxQPH7WLNBj1Ht46W3+C8
d+D6wJafFDkrv8Hf500yxzt/76T8BnHn5xW3tr5zTP0k/pHBxSPb/8q5tzMq
/Wn5Sat9+QHi54yekufzm+b6Ze3qJVfkHyjfbmjiwLWsB6SfJa/+cj5PMHTa
xVFtQ3VYytdP/H7Xee6l0PMg3+lF5+Zp616Wn+RvynxzFldackTzOP9d1kOL
R/169KR4YDu9TDvKNyjvfLy6375Prqi/lI8K3g073z5Uh9R8l3dJ/67uWfFG
+ec/xfRL/KhecvubghW7npKfpP454p96N8uSzapDEu+4Pt+juW8flH0y3nnZ
991/WtZbr/ok5XOGZ/z5aO4reh9Vl6sSNmbG4hOqW9rzLMfFr55J+Sx3Pyh4
4/8zr9ny5IX4VbfaxDlhNzVexFMdrTvl7CcH5Tf5/4N3t7R4XGa1/DblJ0aF
LyxwbZn8AOXfNeOuOgjxoduSNOjW9Zzk2U5W81zZA/EEUTF6yh7s+EF+0juP
a9ztOirHnfjXhn/FyWxn4++BNYujNmh8Gbduvp/m45arFqouSvkRycsWyZH5
rMZX+cStU+VKFd+peqkdb3B8KX8vPNX8rzLdD3J8bXnaK/F76StcePr8kMaX
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
naWn8lbiA89993PexfcUN/K5DTJGNezb+JbqNnxualNvVF5Debd0h89KNdwv
v028s2lH361sf6J9AsB7tpuZJTDspPwU8aqGB8U/xBOZcZHf4Dw1B+8dx5F2
mBnyxGmHKcf2uzBv5jnNR3Y9nOPoVyfncz+H3+A48rmVoT9xtvPvktEtlnx1
KbRuGO20gr/i+FK+D/wt/Qzlx8JPchz53FbgnzjbqVC84eT3L97WvK84yoyj
cM5HRTulSxbW5qjqNqxL5IY96LsY8E6mviq/Z8/XWvcCeRf2rO9EwLvM6/N3
kxw7lc/a8ybt2cYtPxDg+275AeKqI/G7RM41R+bezOVE0s8QLx2MwcNZp+J7
OXNt7QyB5n+offr/Lmv6rivSbZLshPWo1KY+rPoU6zefmfqb6mzE95k6m74H
sb0fTJ1f6xwsfcSDpY/8mF1X4b+nP/nB1CFVbyR+y9QbVe/leO4FD7QTjmfS
fkaecsRnon36eTu+5bjbOPm3nis/T/kN6C+/p+g7BXhjnZz1sd3gmXKsp72J
8eLflK+C8SIP5PvjqEWXP3RHSH++99HbkrRuGnFD8xfxt9aUuje9YQi3/Tbz
Nc4XZfE+Eqc/3IH3l+Nr1+vonzmOteEHaP+2POMH4n039h3Ze+cJzdPal7PU
+DH2164z8D21cY67ZYfy82z/+W/GP9Nv007/TNxw87RGR9Uv4s2vD8696c4V
8WDHjfTntv1r/yHwk+8NyNK8yD3J2+3QDiifIHuMvPpl14fph4lXNXqqv8SH
mX5pPqV/jsC8TB5o/5GWPPFeaJ92wnaOYb4mTv8ZbuxK7fA9rWPsRP7ceh81
P/rhft+d7XmBfo16jjDxgOyNeB3EReTZjkspz/arIb6iffp9z7XnEY4Ln/sG
40CMI9uhvVFe8Tzskzjbb4A4k3zyPbPjfMp3wXtH/S15zYPEe5m4Tv6Q/ulR
j+u/Fbo1Xn7Gfh85LrY+1JO87oUfozzx5PBj9IP003wu/6Ze9JOWPPV0LHn6
Vdm/9kua+E1xJvkbAh7oZyl/18Rd8l+Mb79CvMHx5f9HvKT9AJT/GnEO4yXy
WQDvEXG2c+Po8i/Lv3lY8Sr99pBOf20b/fKi8lDiY2H/jPdU/zTyihtUx4P/
oV8int/giuv4Xj80+og3+3205jWOl2vZFcdXfpLx0r4r8z6sOzVdJO3W9vMc
F+avExd+U3jFf+dT8k+8yxdNB67bflbjzvGNaBD+9ZGs59Uu+Zm7dMvuXXWm
yP6J9+007asES5bKPq04QTjf91GQpxzx62if7zXfl+7Qh/6T8Xtn6M/3hPif
6C/9sPYXW+Niz8uMj+kvM5nvznpvyU/elqtnXJp4Ujjt9otLDbuErTspO2S/
foNdUR/ayWvHjN3SPik/x8rXKJ/YxAPKUyjfD3ZO3iifwHp/qW8E8lPqzecn
RX/ZT8pnQn9V5wFPH6K/fJ7aM++77J7/7q+2kfXTPt2vf098YsKW5wf8e0R+
hP+/HtrhOFGf39AOn0d8GNrhc/nvtmeftydpi33C+e/emjwieuCQ/fL/fL/S
Jy9W//WRDcPpn4nPTxGDR3468+q17BfuxaqfaB3IvEwz3BXL9L5/Bnm//bkP
vPKKl3JnqBl82Tq0voj+p6gXd/LtOFynVcH7zvc1l/b/I+KM9Dkz6cGhgWee
u+MGV9x4//1/ZOcZcmdp0PGbf13n2JPMNzfOFf58w3tjfyz0zFlUvO6WvhNH
qJ2CH77xbMKle871HAdXvlwbqjsNPNO0+hc7njjTq6ZLeCPvFeE7Bh/YMmzq
Q7dxutF3ClUL1XP2GNxp5sXdCwV/brLqk5dOnr9/OX6mzXnhuzOMX1Ly8Eu3
7aEcbduOC8WHewzuDPTi7p5fntTds+OlU3lH5aeb7myXPvsgP9HICz9jnusW
Nc8Vz/uhZ0ujp+TPQc+CXnnFOdtPfnoi9WtXpE/qOxEjMnR9EWtdccf4B9rP
bf0qVv2KedP2dcFpE7ediYUn+qBM0+39d8WKq3MZexCe8/Ha+VsWPoj1XOjj
uw/oH+9zhZcr7nmu7DzH/Bi7jaVP4V1jhm1/tlZ40dRdWo2vdd83zl+y0yPv
Qj5WnN8BvNn1IvLTqViMnrFw8Cm8EPSx4+fCeK7ffpbfP/C0L3ylt3352z+m
FOi+tX0o3ksOe7DXDeY14xVrPR79w+/edhy0E0ueceMWY4ex8oKcgY73W313
JRb/Rbz2474HfWw7oT5lvePuHlxU9L3DR17GGi/gsXjOD/u0eeB7lNvoab93
bgGvf3CuTJ6cLOfEB26K7aM2j44I2fmecCdL4savnPWN09V5q9dJ6bPL+Ae3
hPEPku9ef2qRP7554Q6w/OTQ0Q1vjNp/38lbvWezlx02qZ298EsDvP7Endu9
Vqo3/+vn9wQnnpjbIeQnuydJsXxhh+du995P8pUbe0nyu+Env/b6Gfd7yHc2
8tJnt+mXu8/bLyev8f9uF6//d64bfpzUXn7cXqZ9p6O3fbew8fPubePn1c48
0y93tumX8CGGHzfg5cdBO85Jbzsu2nFWeNtxB6Gd+qad0HsKfV555x3y7EZ5
eXahj1PR246DedBZasZXeE8z7s4WC98Fnk8bntX+NdhbWsOncMy/7g+G/5Cd
Y16O8OLOTYxLBm87HF9nv/e5DuzB6eK1HwdxSKx5ZEnYo3njDr+M5W8pb/vP
5UY+lt8bZOZ3F/O72jn25HS1JX8+cRtVvTj0i0IhfKg3HtD4njTyjiXvWv5N
eDB7WIXwjE9j1etOVPqweZ/arxy3bXiwc99jNu4u8uIO5Q8aXP3CPBIrHqOf
bFtneumT0xa6Nj69Vgwey1996ZUXPtQr7zw28ZU72BtfOZ9kSLa9pPPY/b2k
F89o4jQnzMRpaufdcVMbHs33yLl1xIu/RPyW37QjvKJp33mruBePn2X5ul8e
x66LvoXn3jzqiQ/dpHhu2eNePJ7B3V+8uJO28PINBWc/iFUPTG/wWHkrx3Gz
d7zcZ+DtcQmP/m4YeLvygRdPj/h2lJc3NyP0rHTUi/eDnc/wxrHuKa+dCz8H
e27oxZ0ZsFu7jpTK8Byr/sM4YZLX/p3Vpp1Y30MRN8bKOxh3JTVxl9pPBf7t
+iHn/SE7PfJOGoyL/V2A9YevrXyBeHuL56qwtyivPbvgJxYPzL86lvfKE+/y
vtdumZc5Xnnhpb3ydhwoeb+4wi9u95uX/9dx/F/9ql/85pdn+cX/fvGSXx7h
F1f4zTv/a/zglxf4xRV++YWfn/HLc/3s2c+P+c0Lfn7bzz79/L9fPuWXv/vF
q37xrV884Jdf++WbfvOsXz7rF6/65Zt+cbuf3/OLB/zyVr+6gV/+4pfv+NVJ
/PyYnz/0ix/85lm/edlvPvXLr/3yGr+82y9u94vz/epjfnUqvzzUL3/xy0/9
6kt+cY5f3cYvXvWLb/3iVb/41i//8quD+dVt/OoefvmpXz7uV7f0i7v85lm/
eMwvfvaLx/ziCr+4zi/O8YuLfPNNn7qQX77pl5/65Vl+eaJfvdcv3/Srn/jV
E/ziT796kV/c6xcn+8V1fnUwv3qIX33Mr07rV9/zy9/96od+eYdf3e9/zSv9
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
Es/ENxl58azvA6Z98az51ugjni39xTPxl+1j+iueiR82vIlnizfxrPmzSqt1
kR/sFM/EE44q/82vR+eJZ+L53TNzv/ngqHjWeqvGb0QUHHNKPBN/fVrOh53r
nRDPxJMXKZ0tVcpD4ln+9e9RN4/l2ySeiVf6qft/TixbIJ6J/2rkxTPxtKZ9
8Uz85LZnfT4ufFI8E+/6ffIB9SeH7heTnh2nd10dDO1j17paw5t4tngTz8yb
nUZTv3zt1j7xTPyHjzq9+eLIIvFMPH/Dqz0upDwrnolX7NN4SO9rl8Sz6luf
5/nz/OCL4lnrMdPUDW8254R4lj73xqZ88dl28Uz8cI7zJb/pv0Q8E69l5MUz
8XDTvnjW+lCjj3gmHjD6i2fiP9d9/ma3B2fEM/GShjfxbPEmnpV/7FiXpn+p
g+KZ+NNft9aun26xeCaedkHTUc3nXxLPxPvhvjzyTLxIwlq/PzoXuledeN86
pU7f2X1WPOu7Qa40TbbM2Smeif9Q7N/piReFeCbey8iLZ+I/m/bFM/GSRh/x
TPxH3BdGnoknM/0Vz8QbG97Es8WbeGa+dWXAgwM9K+0Wz97vGEPCyDPlE1R5
Z0OnAqFzsogzbiHPNk6eiW8YnPJYiqunxTPxfmP/SZ190EbxTDznr8uulK4+
VzwT/83Ii2ftYzDti2dLH/Fs4+SZ+J3KMf0Vz8QPGt7EM/HV9+v+/kuB2To3
kHnwQgtnHvwY48L+Eu9h7CqM7Vvyig9Zv6zgfb+E98L7RZ6JB+AH+FztMzN+
I4w8E/8Sfob8EM8H/0Z+tE/a6ycDlj7Sn3Fxa68fFp4Yfph2SDw9/DntkHgf
+H/aIfFTmC9oh8Rfx/xCfogPxHxEfpRnm/lL/BAfg/mOdig9MT/SDolnxHxK
OyTeBPMveda6Y8zX5Fnf97zzfsDiTTwzzzjrjSuEv4+4gjwTT2TiMfFM/A7i
GfJMnPEPeSaeE/ESeSa+FPEVeVY+ZOIx8Ux8G+I38ky8EOI98kx8N+JD8kz8
NuJJ8qx1zYg/yTPxo944NmDxJp5ZVyvqjZOFj0ScTJ6Jp0W8TZ6Jb0R8Tp6J
P0c8T56J/4b4nzwTb4R8gTwTf93kF+KZeFvkI+SZ+ETkL+RZ67sXm3yHPFv6
i2ftj0E+RZ6J5/bmZQGLN/HMem0N5HfkUzjyQfJJPCfyR/JJfCPyTfJJ/DDy
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
   "], {{{Directive[
       Specularity[
        GrayLevel[1], 3], 
       RGBColor[0.880722, 0.611041, 0.142051], Lighting -> True], 
      {EdgeForm[None], GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
Y8dMZO3Mba+Sx/J8bpucfJjXcvut5E2R5wGX93NhGwk++JrCubnYbP/YbiHu
vp/wo/omD6v9YXXO2YU3uV7lz6T27/Dzbsy9vpCjxV4YfHl8+oEqHx4574j9
I/D8AwvvwSDmQC4vObrYgeTb3qV7vKd73S15fFjPGBsvZJ5fv2bOEf1f/P+a
0H/yyth7xR6Sb1Pv98GmxbYlp5bc2nbCqwOvAr8ysXCMbKfSawHxOeKcPUrr
HcbhD8G+xc69oXBcin1AHGDyZ8nThUOAS7i7NG8KN7+Tnn2jyLlY+B2sHeRt
kk8D/0Ue1MJgT2JXkq8Dv0ZOFBzXn+TLlN4nwH6Bwfja5CBl1s/9Qn/o11aV
9waQn0muD/YT4+QFlf8rdWya/E3600JypMrXTR1zZx1lPSX3nTzTpsLtE+eu
s5ZtLbld7lwLfNnmuXN0yXPD1yaGuzFx8ty57t/k9qXxqfHx/smbUX9WFvZv
8XPxRXsltg2Y2+QtEQvZAB67cs46+a7kKh0Q5iZ6ADuhQel8JLj4dSrbOYuD
vno9tz9Fjh/2ITGwC4WbVc6Pn6Pzj+t4LnIOG3ENeAf2ot2X26cgj2tIYj2D
L3xo6VgV7QzN7a+Qx/Vwbj+FfK1tK+fQf6SyJpX3LaDDH82dN04O2DDhpyPn
njWtnOs/S2V36Lg3cg5YpzDmGfvbVc7F/5j7pLYxsDUaV94j8YHKm1fO0Z+X
O2+O53oAjqty3jN5dPfq3JDIuWqP60h0/mbJQYn7hu9G7BI7iT189ybu588q
377yXoJP4BV4d5Fz29gHgj5cozrbVN6rMDt3HjZ51/hpxIhXh+9OXPiXoN+w
bbBhTi0db10TdBG+JzEj8obwPclfIo/p5tx+K/ly2Ej4PORu4AOSL0TeKTmA
POOtifP+iW3ic86vbGcwZrCBieFOKu1bkQNBLgl528RS4Pvg/frUnE9LfjHr
+1M6f3TlfS/kG5NfTg75/fiJlXMLppT2r4kXg4nFsMeA3FrsUuIqwwvHjNiv
SG72gsq+HPML35m8enJ3GwX9gx7auvJeoJmsXbl5P/IP383N45Gj2Dj33h/q
NMm9J4ix8VZhf4w851aV9+F8qvKdK+9BWiK8S+U9OUvRVTpW1dlG3aPyvqPP
VbZ75X1Kn8EFVt6ntBBupPIep0XCLSvvO1osvJmOzRPz/OsLf1Rnvndd5l2d
4wRb5d6TMkOyUe69KtNz+27EpMmH3zL33pNpklvk3pMyVXJtHYPqnFfwWGY7
ln2Q5APgc06TbF15z9Xy3H4x/g4+9q6V9yYty50PQN4FcUZyV9iLwZ4MeCF8
GfLJ96q8v+tL7DL6nHgN2rLyPhz6vEXl/Uj0s2HlvTr0E7sH+4d1oVHl/Us8
7+aV9+1MEX47N2dLzi28AWsBawIxd+LvrMXv5eZvyb/Fr8TfxO+clJvjJTf1
rdz2JPm6O1TeDzZfZS0q7xNbINyuMheGft6nMtf2tfCelfezfSG8b+U18i61
077y3lFsqvo6t6jO8YiGufcK0X989gWxc7bfyM2Bk1M9MTcHTh51m8r7nb6C
J6kcC2cOkuP/ieq8l5hrhjc+Aa6u8p4KcnqJtZGveXbmfcpvBLt9eWVegHXn
+MCnkKvCng724LAXh7zW3VnXK+9lZu9f88wcEXwB8Un2FrAGsRY9x5yJnEPe
IXDFD+n8Q7n3ypFf/W5qW/d0XXuSyvePnINNjhaxYvK/2AtA7IwYGvldxILI
B2T/GHz1LplzRyfVnBtGfulu+JeV95HBb7fKbN9j58OBs6+QHFG4aLh34lzE
u1jD34LzyLz3gHj9IZm5UPht8vaXVJ4n+E1wm3DX7As4Vn09NPIYYG8DsYrD
VG965Rwg7Hn2BZOX0BIfN/e+QvR828rcMfsy2L8GZ86eAp5nUnjG9rl5VHTI
gTr2ijyPns29D478fPY+E+9m3/MBuflbxuF+uXMUmb/YL++Hd7Kssg+MnbB/
bo4XvcReZeJ87KUiX5y8cfbCkP8Np83eTfay8L26Jc7L5ds+pnba5ebqybef
kJtHxSYn/xaba1hlvgDeoG9m/w0/jr2Kr+Te78b+ArhO7Gf0D3H5hhoD7Cvh
m/Ht2PtMnkCD2DwSMX3i++yVJy/xUZ17vHKOKLwi/OK2uW0/7JZtcu8nxWYg
T4B9RPSHXAv2sWOTs39tbs37d8izZY16tHKOwYax/S/yLsi1qJM8IjcHztz8
oHIOGTbVwfq9Q+S9CezpI/cKbhk+mTk6qPK+vxq2P/Msd1yDfQ0fpY6DMmef
CT4OfhNxYWKL7JvnfwaGRt7DvWfu+AjxGfZnHhrGM/nM2ADNMucwk0O2MjXv
/bnqPy+5W+V9reyBapvbdmWfBfF3eATmKXukWmGTJ+bPv4gcl9gD3R15HwT+
M340sSz8NPw19tUdlDt+xL4M9lBPqVmnsGcJTpT9WfynBDbD5yrfJfd+XvRt
q9z7dlkrycEjjg8HShz505r3rbTJnZvK+sv75T2zP3rv3HtCWa/5rwNimLxr
4hrk67I35zidaxN5P0iL3PttsQP/k3uPLbboDrn33mJDbh/eMzb8zrn3I7NG
DM+9h5e9KswT5ssmwT8ip3IS+in3HmfW9+HBnmEfEPu+4OjIF27NvSPbFeSZ
t42895q8+jbobsl9csee/ll/de38mve2kAtxIO9XdfbKrXsZD+wzRZ9vnHkP
Jn7iH6n3ZbPvciPmUOKclQ2Iy+Tel41NQhwffTa1sq+Iz8i+8hdzx0zxr9+s
7OOxl/PI3PE48mPZk0VO+djU++jhjtHR7OGCcyV/mb1J7FFiP90Q/X4x8j6g
zol1F/N57xBvYw8dudMHRt6nzvvivcFxsqf+H243894NdO2oyjnfxI14L+Qb
k8u7XPiCxL4P/n6H3GMbzuqdyj45+9zJU28e1jv8RfI2yUMnxnxw5Ljnjrn3
g2PbT6zsY7B3/v8A3bLMEA==
           "]], Polygon3DBox[CompressedData["
1:eJw1nAn4VdP7xc+994zXFEIyVCpkSioJaaARFUUqQ2WeMosylXlKqEiToUmZ
IhnL9BNKqQiliMicWZn/69Pa/+fpPN+9zt5nn3PP2fvd77vetas34LyjB5aj
KBocR5H+RQuyKNpKf+sL7FSNov8JfyTcM4miEcJH6+8zqntWxx3CL6n+fdV3
1flbhV8XXil8jPCdws8XUVRXuLXaHy+8RvhZ4cnCQ4W7qn0z4X+FDxGupFF0
bymKxuiIVV6i+u1V31T1DVS/dR5FS4VfEj5W+Df1t1h4rvAo4WfUfqFwB93/
euFXhZcLHyU8XPhztX9OeIraDxP+WvWHCp8k3Ep4oXBN4d2E6wh/I3y48GnC
rYXfFt5auKHwzsKLhLcRbiRcV3it+n9ReLrwdcKfCs8Wfkj4au6v9gcI9xI+
QPhZ4UXCHfV8NwivVPtHhceqfrDwx8KPC48XvkJ4mn7/NL2brfRuOguvUv1j
qh+n+iHCXwnPFX4kdn/Pqf93hDup/xuFV6v+aeEHVX8V7VV/sHBf4YOFXxH+
ULi72t8uPE94lfCxwncJzxZ+W7h94t/3hXBL4eN0fUvep/p/SfjR2Pd7PvP3
6az2Nwl/pvpnhCep/hrhT4SfEJ4gfKXwl8JzhGfE/n7PCdcRPkS4r/DL6u8D
4W7q7zbaCx8k3Ef1B/G91P5l4cdi3+8N1X/M+1b7u8E6Py/2OO6hY63qD1R9
b507UPVvCn/C71HdSOG5wsuEjxS+RXi5+n9YeLTaD+J9VqLoYk2gD3R8qvJL
qm/MfFB9f9U/ouv20PeaqWMHfbMt9f1eVf3jqu+h+r3CfPtYuJHwPmH8rRbe
U3jvMN4+Ed5DuJlwbeEvhfcVPib8/kri8bmjMPP5nTB/RwuPZzyrvqvw7sKb
CX+k+t2FT9D5z4X31vMdpueroed7QXiq6o9S/blqP0B4M7VbIdw4jPdPVb+X
8EX6vTfr2m107Ktrp6jdbioP1kPMVn8j1X6s2v+i8y+q/ST93VX1E3Tkqr9S
+FyeR++uptpO1vGIcDOdP1rtN8uN79X9jmR+VNz+b/W/SuWxav+g8Aa1n6v6
W5l/qkvUforKW+j6Wap/QLi76l/TuVbCxwufiv3Q9ZcI/6Vrrlfd5+pzicol
HV+ofIbOXVb2O9pOfdXSdZeU3X57lXvr+q6qS3T/0YxvXTMwch9rVH5V1+/P
/FHbU7Cfat9RuKz2U4RvUf0Pavuu3sdr6n831W+q+hVqv5vqf8jcH+PrdLXd
T7iW8Beq30f17wrvINxCeFfh94R3FG4Zrt9cfT4lfL9wN+GlYfw0F26Ifdcz
PqC+F+j+r6v8lI67hVcKt1P5X96BcAMd/6n8up7hMF0/QNefoeubBvu8Vrix
8Jmqb6prv9K5nXXvnVWvy6LFwV7WFdZPj5YGe1kn87qzJNjbRzI/78Fq1FO4
efh9X6m+ifD+4fd9LbyfcAvhnYS/EW4qfIhwA+EfhfcXbiVcX/gH4ebYWz3f
dsJNhPsIz1D9k8IHJZ6PBwvvIrxO9c2E62duv0y4l/ADaldfv+9yvY+nNX5n
ZZ4vh+r8MarvILyX8B/Bns7V/fbBfgj3E54jvBv2Xvgk4cPVvg3jWXiScMvC
9mS9+m4nfKjqG6n+92Bf2wnvLvxbWD/aC+/J+A/27zDhPYTXB3t2n55rRz3v
fToS9TlReBeVn9BRW/hF3W9X1ku1P1Htf9bHujXymPxF5dmqryFcT/XHqb6B
+i8Yj2E93lTfeLLwXcJHCN+u+pHMV93nQeGGwvoTfRjG267CmwgvD+P1JLX7
gvmp59lUz1NS58+rXEPH3uq7ntrrdPSu2tdjvggPF95J13UJ30fNovdVX5/f
q8YH6tpvdG6Myg/qOEa/5Rodz6p8tq77Hn9EbToJnyr8NfNBeLbKL2S2z4cn
9i/2VJs9VbdG5/ZQ+eTEY7uZzrUXfkXP2xx/R/c/We1P0fVdhDdRu7bCT+jv
PmrbRsdclSfqmu56lqt1PKPyVnr419T+idjj/WL1dwu2Re2bqW6hcE2Vv+da
1U/WNScKL2bNUfk2tblR+DqVO6n+V+E/hP9Sn+eovC6zvbxU/c9U/Th909Wq
31PXj1d5K53fXOWlOrZWeb2u+Vv1/+qa81V+hucT3kL3f1zXv6O//YW3VvtL
dc93dDyv8s86vlTd72r/l+r/0fXn5X6/x0W2CbNUHsi6pfKXOlcVPp9xLLw/
31+4Me9U5aPU3/0qz68Yz9KxQOWT+Ya69mThU1Q+LbWtxkbO0/X99Hsbs96q
PF3P+4euqaX66Tr+xNbp+En1E4UfVHmDnrHC91D79mq/WH8HsJ7p3GXqey+9
/xNVnqbybNXvXPjZ3tK141V+Xe2bMld0TW+eV7iXypnOnSN8qI73he/S892g
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
bRf6rGUV5wzIHeCDE9/DIcJ1N0nMLf4fS/Jf3g==
           "]], Polygon3DBox[CompressedData["
1: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
xHuMtvmryWVSxX/b45vO1yRTN7mS/1bZLsquxLZjy7Ft8Z2P80cm/X1Tmf8+
1huzBfsc24B9g3XG3sG2YcuwE1h/7H1sH7YJ24yVxB7MpPtC7A9fYm2wxdi7
cm/KfRnPlb8+xoy1jjHEfOMb0yVYDX6XslfHmRFbgE2MM3bMVb4pFcVqRi7W
Et+cimG1oi76N18r9pg4r8WcjDnD16BSWJ2oi/7DX0NlsLrxEL2n77V7Ls5E
xjE+6o91KNOArojzUJSLecS3o6qxX+amZ+8TmfQsHmfyJupahZ2Mb2qMT65d
rIV4rnwzKh+/C/n9sV6jTJzL4rwW+0bM/dhHqCzWMNZMlOerUUmsdow15kcm
3bNj724aY433zregCnGOjZy+tDKuhdhG7A2sufdUN85G2CT3WvAH8Z/4bvFs
3OsY46dTfNeYb1iH6C+d5rvTtVini2epQtn0DBZnseGewTf4z7FHUm25zjFH
453wDakIVj32kpiDsTZifHG+jz0n1jXfJd4n1p5vrY+TtdEn3knk+O/wHOxm
rCXWn++Iz8AGxfyI/vHtaRo2MJ5/jIP/MJ4rXz/z6+tPqsX7NY7WcouwTfG7
K54nnYu9OvqN9Yy1G3sWXzfz62c8uYpfGHu0xTffBjsvfotj/wfKpCIe
           "]], 
          Polygon3DBox[{{2506, 1303, 1155, 1154, 1499, 2170}, {2307, 1027, 
           1026, 1778, 1421, 2556}, {2242, 1600, 1776, 1014, 1013, 2243}, {
           2147, 244, 942, 1807, 1780, 2585}, {2332, 1693, 1130, 1131, 1694, 
           2333}}]},
         Annotation[#, "Charting`Private`Tag$4175#1"]& ]]}}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFlEtIVVEUhs89m3POvULaoEkZ5CMHRUpQQS+oQS+zBtks4iZCr4GGlfRQ
MSx6KFjS4GpDo0GU2ihoYvSgZil1qWZBGBkEDaKJEvT9rAUN9v33XXuttdf6
179PbfuZ1s44iqI+VmDV8XMiF0WHwJFCFB0Ap8BVrCL7CTBlrSNoGdiA7RT+
LcFiFLsafJ6Pohn2Tfi8SaOoA/8pcBr7O+yN2L+Bu7Ef5947/G8m7jF4JSMP
tj/4jnI+n7P/S4gfZz8IlrEvZ/ViLydRdDpn+e/nzSdPnoep1bMNvI1vK+sX
/tVgW2w93+VsM/sPifWl3J8qoqiWWo4Sux2sLNg9T8hdxVkRn0lwD3GNrH3q
A7+9YFuweptiq/lFYueviWnnrJn9QLA82hfJeTC1/avEOBW3CZjAw0d8v6dW
h+qpAfsz40w+u8gzwnkV+8PBejoCTsbWZ2XOOCzFVt/6YLEBLBFTD56jhqxg
vYg37VW75rDFa64Oxvcx51yciDfdW2At5Gxe6lf1j1LT9cTmrvlPew2azbzX
pHrkoxrnwJ3B9pvAm9ICPped15LPTjjq3HZzNsa+K1jektulDd3bh21HMFzj
mpROusGOxPL9To0LcfKXmJxzKC6lXWl4MTO9SrcLmelAHGg/EZvPSdZsapru
JPc9/FcGm2+L61b67XNNSpuL/l705s7n7V7d1eJv6mqw2apmaXyBnM+4r1gw
/Wq+OsuIWYrvT3z3u06kX9W1NbbaLjmf4lVvWW+hpmCcTTu30qi0+pK7noKf
Xdua53hseVu8x1l/y3pbbyusL+lDNTwgbwU1fcE+GKzmnmD13yD3V+x1+G3E
FjLTvzQhnf9ITUt6Y10+37PgQeekwb9L4kqczbl+lPciZ4/wHwbXhv/zl67V
j3q5FayvIXCFa0tvt5b7NoBxZpoQH5rjgOtf7+Cacygu9b2SZvQW1XfZ9Sae
xpwr+U44/0L9Vw9N0iL7/mAznPQ5tvqb0N3D3ssFsD61HPpG9TifvcE0Xvb3
OON3KP/7xPwVN+T9puA/79+1rQ==
          "]], Polygon3DBox[CompressedData["
1:eJw1lDloVFEUhu+867yZN5IE0UYsTLQSzOAKEhEs4obYjJ3ITAyYaJEoalAk
IYLikkZDCrcuYiHGJJUiSIIL2rmDdoIoaGUhNgkGv5//WRze+e89+/nva+s+
VutPQgj7kUVIaxZCI4ZQR1aiD5RD6MDgTSGEWfTnxRCq4B/gfWkIRWwO47eD
s2Xo8yXbHkFOYf+pEsIIduPgO+Au4u5Cr2F/KDqf9KvIZfRpZJjzWd2jnyPe
Q+zbwSVwOXOsnmA8hRzAfgg8it6KfpD7m9gPoE+T8xF4C7g5cz03qGctOAV/
AT8BH8f2buYaVIvOdPcVeYf+mLO5zD3sTBxDsZ4xj93qF/8l1HqW7wT3vZz1
ondgt43vJmQV+hw2rwuuSbVNEPNv4hleQ/9GvCHu+ji7iP6n7F418yyvt0KM
pdG1SqQ38llqH+pNMxjGrin1br6D96J/KHoWyr8a/B58H3wG/8Ul36t27Xws
9Rw0j1/U0MfdPXADvBwZSl3fXME70q6q5O/i7mjOl5/YNBF7I9KWWmQrH91p
ftrVOPIC3FlxXuUX92r4rUi830L0Pi7h01wwP15iO5kYa163OVsTPcN65h7V
q3pUr5qhZikeT1YcQ77bo7n3IDMvxcn//Fcvo3ltryreqXY4w93maH/VqFrF
f9WqGWgW2vdg8MzaM/tvxb8Hn5Nlc0L1KZ7ipsT4nHhGG6J7EPdGonsTz8Q3
2VxBj8RfyPepWEnJfvLXrNWjet0DbkGfSs0t1fQxn0E99T40m9PRs1I8xf3N
3XrOKtH7F0fEa3FE8+wvmhsz2L5N/S70PlTj06Lfjt5yFZ+F1Pk1T+1Mu+uM
5qb4vy6aA+KCOCx/5VRuvU9x8Xz0v0Vv7EL0/0D/BuXU29Q+lU95xRW9yRPR
HBPXWjLzfyzfZ73s2XRjcyvzTrSbefD1zDUPRu9AMdWjeh3P39M/g4+pXQ==

          "]], 
         Polygon3DBox[{{1772, 784, 804, 358, 1661}, {2324, 581, 1549, 1674, 
          2310}, {1772, 537, 381, 810, 1799}, {2163, 803, 829, 1594, 2759}, {
          1767, 488, 327, 794, 1797}, {1767, 982, 795, 329, 1613}, {2398, 381,
           1508, 1415, 2554}, {2164, 360, 845, 844, 2449}, {2319, 1681, 1492, 
          124, 2318}, {2349, 607, 1705, 1595, 2238}, {1919, 348, 842, 841, 
          2448}, {1390, 485, 836, 817, 1779}}], 
         Polygon3DBox[{{2142, 796, 781, 1769, 1630, 2575}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtVEtIVVEUPe8e7333Osh8lh+IQoSKUAoaBBmWCSZUWlYvB5HRB/pqpoYN
NMNnIVmBBE1SHFaz8o36aBFBTYOCJhFEaWVFgyYV2FqsPbisc/fZ++zf2rvy
cGdrR+CcG8Hn8c3FzrUDL6SdO5Q49wiX7cBRXA7j3Al8kXJuHc4twALobYRs
feTcAmRDsN2L/34v2xj4GnpTOPcCbwKfAuvwHQ+dm4f+Q2Ae8rP4iiEvg7/t
OJcCZxHPHrz9ptC5asaA+/3AYtzlYOti2dH+fEox0leckrwrkM0wbLqBzcDb
eG8TzjWRYtkZKJ6VplMHnIW/CuS2DLgC/7sh3wZcbucm4F3E0Ai8AdyBN2Yg
P+iUM3MfAF5PlBNrOAHZZCD7RrzbA/9/Ef8g9Gohqwd+h6yKdQT+TEn/t1NO
w1bDT+aLNtdgM4D/U151ZD1PAI/hvw/3R4F5r3yXAp9EyvUxdCoS+fgS6z2+
y/jHAp1rzYa2R4D7oFcGvAe7xbjfYvGQK+QM69Bk9WHNGgLlwj6dg78fkI/A
f6m9ybiyseJhDH9i8affesp+0vZqqBr+gm1boHfIvcFYOZagli8j9TwXin98
JwB+hM485OWIbbXVJOvFc+bOGgyFsuUbZ3CXg4/TwHpgpXGasvuB+JEBbrbc
b8GmKJDfXV51aQG2edWkATgeqEeMmbG02ZlzsdW4WmVcZb4R6rkIdl/x9vtQ
dbiE84dQ8ZMb/2Lpcg56I8X0DdgaycdcpLox/leRaso8FvB2Nf43cNjT4gP7
PR2Jj/RFn31pceFzrFwZK/OlX/oqSdQv5p5JNEecbfKv2eaI85THXdrLL/Wo
T86T16w/ucL4GCdzzFqPyN8u4w/nl3ORgSyV1u6ZNw6wv4yT8fLNCZsX7g3y
hPHX2s4qAL4rVI1iYOil3+PV2yLrL3mdsf6S8+Qq9Su88ku8dhDjqvHi4Srg
A+Q3ie+A1+6qt7leAlxj+TI21n/G9g/ngrLnkWaSs8B912X7kD0m78n/0VBz
OWZzOm2947y/LRQPOAuj8L0WPu8keoNx0r7Ddjh3eYPxsxx4xerAejyLxYGL
sfYi+0o91nLceEsd8oG796TtH+6hKeMJ+cx8mFd3qFni/FwmL8wXff4Hdf/F
9A==
          "]], Polygon3DBox[CompressedData["
1:eJw1lF1ojmEYx++97953z7OEbcVWPpIzH1FKQj6mnKAxWZPPkIxMGeLAbG1T
2qIkTpBDnPk48i0pTlfEiZSyYZEDJ6j5/bpeB3fP9fF/ruu+/td13bP2HGnt
LKSU2jjVnmJKL6tSauFMR76Xp9TN9yGg3cj9pZQmId/hvCqntKgc+GVgqmtS
ugtmH/JJbD1ZSmeR+8F2oQ8gf8H2A3kOtrYs9BXoG9Cb+HcJmGfoY9ylqRg5
B9DnVe7SV4p4h9Fz8r2pTWlzOWIYz/ssxbeVM4jcwncy+OP4E3IC08/nBPpz
5CnE3I59B2dqHjVZmznMdR7bYnxN5Boh1zf89fhWcS4jPwKzk3gX0R+jn86i
Vjn6jXyEfweQM2wd8kKcdvQx9E/43xPzKv+tx9ZIrs/YvlcFRmxHKbi4hP4E
3DvwGfYFxBoCX+Dbh38W/i0VTsxjPu9/G8xe9OXoW4h9DPk62E3oM5B7y8HF
fWyvkS+A30W8dny38uBQLidwRpEfEHMZ+HXgDyA3FgNvz+zdCzDXClHDUfzn
ytHrXyl065ErYxjrazn6s5F/y9z9TxbcXcG+llqHwNThm8v5iW1abeja7Yec
yZ09kM+uUuTaD2Yi8cZrgp9xMPfzsOuXgy7km9jyYnAsn9ZobxYWovaGPPp9
HPkt+RpqY7Y/lkLvwz4b/5pC2JyJbcSbWR2zYg3W0oz/TBb9kzf5c96y2uiN
M+AsjPyvuSpmr7cYWPnqkes8fO6Eu+H86hd3I4+YzrIzYi7v46zKsVw7/8P8
uxK9Lo/9sUf2aySLGXAWzDFYCg7kwh13t9xRd9Wej2axU+6WM95ZjPfB2Wuu
9FCO5EV+5FIO9A1X9m8+mKdV0UM58I4Ti8Ghd7eHh5C7C9HbemKsLkRP3S9j
Gtud/ptFfOf5WIV7d8bd8X1wP63Z2u2peOff3THmh1K8Ic6rnMjNqZrYFd+s
0cp8eRdn3Fl3/pyX1kr/nCFnyR7Lv2+ob6n/HET+BzCfp2k=
          "]], 
         Polygon3DBox[{{1792, 788, 315, 447, 1580}, {2278, 94, 1468, 1619, 
          2279}, {1777, 811, 853, 545, 1419}, {2399, 699, 893, 822, 2446}, {
          2047, 775, 830, 371, 2173}, {2299, 1652, 1502, 577, 2322}, {1793, 
          813, 389, 547, 1773}, {2447, 838, 839, 337, 1913}, {1581, 316, 790, 
          823, 1580}, {1667, 376, 808, 786, 1773}}], 
         Polygon3DBox[{{2568, 1618, 1768, 780, 791, 2133}, {2579, 1653, 1771, 
          1055, 807, 2176}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0s1LVGEUB+AzOqNppf4DkygRkY1IiJhN4C6kVi1CahdI5KI2IQVuxPwC
QdooFmSb2pkb2xVkM6M11Sab0T60+k96XoR55zm/e++55713puv2/ev3MhGx
YJUbIlK9yLwi3xzRIfewk0Ps5Qgvc5TXeIe3ONwSMal3Qh6Xp9SP1Y/UM5xP
c7jCJ3zFF3zDDZa5dsx5s2t6d+UPfC2/z0Z8l7dYS8dZZ4l7ae/cZ4U/uM0d
66f6I3/xE3+zygN+5iG/8A+/8i+zTRGrZtbN/pdmcEOu2uM3+S1LXOcmn/Ml
l7jMOc7xivcxq/eh+pJ6Qj3t3F35AW9yjFd5g8XUwwIHeYoXvY9Osyt62+V3
fCYX7bUt/SY8ma7nCQ7wOPvZygs0OvroVlHgecvt4xw9apxljmfoE6d9NbKb
xkXORU8zR/+P//25Q8M=
       "]], 
      Line3DBox[{948, 790, 823, 1792, 788, 833, 896, 897, 2464, 860, 861, 
       1800, 815, 2472, 777, 793, 824, 792, 835, 856, 2473, 838, 839, 799, 
       840, 798, 884, 773, 903, 883, 870, 1806, 875, 909, 874, 797, 772, 827, 
       1796, 826, 857, 780, 791, 2474, 867, 789, 948}], 
      Line3DBox[{982, 795, 825, 898, 866, 2458, 796, 781, 819, 1794, 818, 774,
        907, 905, 872, 1809, 882, 881, 885, 800, 828, 801, 842, 841, 2476, 
       765, 771, 816, 836, 817, 778, 880, 2469, 1802, 787, 863, 862, 2477, 
       865, 864, 837, 794, 1797, 982}], 
      Line3DBox[{1788, 936, 937, 938, 939, 940, 941, 1807, 942, 943, 944, 945,
        2466, 946, 947, 834, 911, 912, 1804, 913, 914, 915, 916, 2471, 917, 
       918, 1805, 919, 2457, 920, 921, 922, 923, 924, 925, 2463, 926, 927, 
       928, 929, 930, 931, 932, 933, 934, 935, 1788}], 
      Line3DBox[{1789, 961, 962, 963, 964, 965, 966, 967, 968, 2461, 969, 970,
        971, 972, 973, 974, 975, 2587, 1810, 976, 977, 978, 2465, 979, 980, 
       981, 983, 1811, 779, 949, 950, 951, 952, 2475, 953, 954, 955, 1808, 
       956, 957, 958, 959, 960, 1789}], 
      Line3DBox[{2455, 1019, 802, 849, 804, 784, 1799, 810, 831, 809, 2459, 
       906, 891, 892, 1790, 814, 895, 2480, 832, 821, 850, 769, 851, 858, 
       2479, 844, 845, 805, 843, 899, 900, 889, 904, 890, 871, 1803, 888, 910,
        887, 766, 1795, 820, 829, 803, 2455}], 
      Line3DBox[{1055, 807, 2482, 868, 869, 854, 808, 786, 1793, 813, 855, 
       812, 2483, 894, 776, 893, 822, 1817, 2588, 785, 811, 853, 770, 852, 
       767, 2484, 775, 830, 806, 846, 901, 902, 876, 877, 1801, 873, 879, 908,
        878, 768, 847, 848, 1798, 782, 859, 1055}], 
      Line3DBox[{2456, 1033, 1034, 1035, 1036, 1037, 1038, 2467, 1039, 1040, 
       1041, 1042, 1043, 1044, 1045, 1046, 1818, 1047, 1048, 1049, 1050, 1051,
        1052, 1053, 1819, 1054, 1056, 783, 1020, 2468, 1021, 1022, 1023, 1024,
        1025, 1816, 1026, 1027, 1028, 2470, 1029, 1030, 1031, 1032, 1791, 
       2456}], Line3DBox[{992, 991, 1813, 990, 989, 988, 987, 1812, 986, 985, 
       984, 2478, 886, 1018, 1017, 1016, 1015, 1815, 1014, 1013, 1012, 2481, 
       1011, 1010, 1009, 1814, 1008, 1007, 2460, 1006, 1005, 1004, 1003, 1002,
        1001, 2462, 1000, 999, 998, 997, 996, 995, 994, 993, 992}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1821, 2103, 1230, 1820, 2589, 1995, 1822, 2590, 1996, 1823, 
       2591, 1997, 1824, 2592, 1998, 1825, 2593, 1999, 1826, 2594, 2485, 2647,
        1827, 2595, 2000, 1828, 2596, 2001, 1829, 2597, 2002, 1830, 2598, 
       2003, 1831, 2599, 2004, 1832, 2600, 2005, 1833, 2723, 2104, 2006, 
       2105}], Line3DBox[{1835, 2486, 2648, 1834, 1245, 1836, 2601, 2007, 
       1837, 2602, 2008, 1838, 2603, 2009, 1839, 2604, 2010, 1840, 2605, 2487,
        2649, 1841, 2488, 2650, 1842, 2606, 2011, 1843, 2607, 2012, 1844, 
       2608, 2013, 1845, 2609, 2014, 1846, 2610, 2015, 1847, 2611, 2016, 
       1848}], Line3DBox[{1850, 2489, 2651, 1849, 2490, 2652, 1851, 1261, 
       1852, 2612, 2017, 1853, 2613, 2018, 1854, 2614, 2019, 1855, 2615, 2491,
        2653, 1856, 2492, 2654, 1857, 2493, 2655, 1858, 2616, 2020, 1859, 
       2617, 2021, 1860, 2618, 2022, 1861, 2619, 2023, 1862, 2620, 2024, 
       1863}], Line3DBox[{1865, 2494, 2656, 1864, 2495, 2657, 1866, 2106, 
       2107, 2724, 1867, 1438, 2109, 1868, 2725, 2110, 2111, 1869, 2621, 2025,
        1870, 2622, 2496, 2658, 1871, 2497, 2659, 1872, 2498, 2660, 1873, 
       2112, 2113, 2726, 1874, 2727, 2115, 2116, 1875, 2728, 2117, 2118, 1876,
        2729, 2120, 2121, 1877, 2623, 2026, 1878}], 
      Line3DBox[{1880, 2499, 2661, 1879, 2068, 2069, 2710, 1881, 2070, 2108, 
       2662, 2550, 1882, 2558, 2757, 2223, 2122, 1883, 1372, 2365, 2071, 2408,
        1884, 2711, 2072, 2073, 1885, 2624, 2500, 2663, 1886, 2501, 2664, 
       1887, 2074, 2075, 2730, 1888, 2076, 2114, 2665, 2551, 1889, 2557, 2752,
        2209, 2119, 1890, 2712, 2077, 2366, 2078, 2409, 1891, 2713, 2079, 
       2080, 1892, 2625, 2027, 1893}], 
      Line3DBox[{1895, 2129, 2130, 2731, 1894, 2081, 2367, 2584, 2788, 2410, 
       1896, 2252, 2253, 2123, 2666, 2255, 2254, 1897, 2471}], 
      Line3DBox[{1908, 2340, 2339, 2780, 1907, 2083, 2128, 2082, 2714, 1906, 
       2270, 2271, 2127, 2764, 2269, 2268, 1905, 2465}], 
      Line3DBox[CompressedData["
1:eJwVzksuQ2EYBuBPaFBtUkNmluEywQ6wAErdtUZ2QGJg4rYNBHHfAsIKCIkI
LW21zDxn8OT7zvv+/zmnL18aK7ZERIG19ojhzogRpjoizjhIR3zIJ+1PPJOn
VX7Ipy7t/IvslWl65EeUdZu6bTbYSd4t7zf3mKPizLj57t6tLs2M/ZwvXZcu
I7tL/kM2ywXfuoKZld8n/2Gf55JcyrvNMhUWueLYuap7C8l9qizRJj+hpsv4
Xk1WZ5mU/JS6bkK3y5vnXgbs+6zzo98y/xjVrbh7TUOeleVkDzRkJW5o6opm
t/yRpn2VIed/dYPmPzxcPv0=
       "]], 
      Line3DBox[{1923, 2413, 2414, 2372, 2088, 2715, 1922, 2341, 2405, 2342, 
       2143, 2347, 2386, 2784, 2581, 1921, 2337, 2404, 2338, 2475}], 
      Line3DBox[{1924, 2415, 2416, 2373, 2502, 2716, 2161, 2391, 2425, 2392, 
       2162, 2582, 2742, 2348, 2041, 2424, 2389, 2393, 2390, 2478}], 
      Line3DBox[{1925, 2357, 2504, 2781, 2358, 2091, 2180, 2505, 2718, 2225, 
       2303, 2092, 2181, 2761, 2242, 2243, 2442, 2481}], 
      Line3DBox[{1927, 2053, 2179, 2746, 2189, 2052, 2376, 2094, 1756, 2187, 
       2251, 2250, 2188, 2632, 2556, 2307, 2443, 2470}], 
      Line3DBox[{1929, 2508, 2669, 1928, 2095, 2509, 2719, 2190, 2419, 2096, 
       2377, 2510, 2720, 2191, 2559, 2633, 2216, 2054, 2228, 2758, 2097, 2218,
        2055, 2193, 2747, 2098, 2056, 1930, 2634, 2511, 2670, 1931, 2512, 
       2671, 1932, 2099, 2513, 2721, 2379, 2420, 2100, 2380, 1313, 2220, 2561,
        2635, 2229, 2057, 2196, 2749, 2101, 2221, 2058, 1933, 2722, 2102, 
       2059, 1934, 2636, 2060, 1935}], 
      Line3DBox[{1937, 2514, 2672, 1936, 2199, 2200, 2755, 1938, 2201, 2378, 
       2202, 2751, 1939, 2560, 2754, 2217, 2192, 1940, 2748, 2194, 2219, 2195,
        1941, 2637, 2061, 1942, 2638, 2515, 2673, 1943, 2516, 2674, 1944, 
       2517, 2675, 1945, 2203, 2381, 2204, 2756, 1946, 1535, 2230, 2205, 1947,
        2750, 2197, 2222, 2198, 1948, 2639, 2062, 1949, 2640, 2063, 1950}], 
      Line3DBox[{1952, 2518, 2676, 1951, 2519, 2677, 1953, 2520, 2678, 1954, 
       2521, 2679, 1955, 2522, 2680, 1956, 2641, 2064, 1957, 2642, 2523, 2681,
        1958, 2524, 2682, 1959, 2525, 2683, 1960, 2526, 2684, 1961, 2527, 
       2685, 1962, 1338, 1963, 2643, 2065, 1964, 2644, 2066, 1965}], 
      Line3DBox[{1967, 2528, 2686, 1966, 2529, 2687, 1968, 2530, 2688, 1969, 
       2531, 2689, 1970, 2532, 2690, 1971, 1346, 1972, 2645, 2533, 2691, 1973,
        2534, 2692, 1974, 2535, 2693, 1975, 2536, 2694, 1976, 2537, 2695, 
       1977, 2538, 2696, 1978, 1354, 1979, 2646, 2067, 1980}], 
      Line3DBox[{1994, 2208, 1538, 1993, 2709, 2549, 1992, 2708, 2548, 1991, 
       2707, 2547, 1990, 2706, 2546, 1989, 2705, 2545, 1988, 2704, 2544, 1987,
        2703, 1362, 1986, 2702, 2543, 1985, 2701, 2542, 1984, 2700, 2541, 
       1983, 2699, 2540, 1982, 2698, 2539, 1981, 2562, 2697, 2206, 2207}], 
      Line3DBox[{2368, 2084, 2131, 2272, 2765, 2567, 1909, 2382, 2421, 2383, 
       2132, 2580, 2787, 2402, 2325, 1911, 2343, 2384, 2344, 2466}], 
      Line3DBox[{2375, 2051, 2215, 2302, 2301, 2745, 2177, 2050, 2406, 2356, 
       2178, 2397, 2429, 2785, 2583, 2428, 2049, 2355, 2354, 2468}], 
      Line3DBox[{2456, 2439, 2306, 2185, 2249, 2248, 2762, 2186, 2093, 2305, 
       2227, 1305, 2184, 2172, 2360, 2782, 2507, 2359, 1926, 2744, 2506, 2170,
        2790, 2433, 2435, 2434, 2436, 2168, 2430, 1763, 2182, 2247, 2246, 
       2183, 2631, 2555, 2304, 2226, 2245, 2244, 2460}], 
      Line3DBox[{2457, 2257, 2256, 1898, 2258, 2259, 2763, 2124, 2261, 2260, 
       1899, 1455, 2210, 2125, 1900, 2779, 2332, 2333, 2778, 1901, 2137, 2138,
        2789, 1902, 2431, 2432, 2422, 1757, 2423, 1903, 2262, 2263, 2126, 
       2667, 2265, 2264, 1904, 2266, 2267, 2587}], 
      Line3DBox[{2461, 2334, 1629, 2141, 2346, 2385, 2345, 1918, 2288, 2769, 
       2574, 2140, 2087, 1917, 2552, 2668, 2139, 2086, 1916, 2738, 2411, 2412,
        2371, 1398, 1915, 2085, 2136, 2283, 2733, 2571, 1914, 2330, 2403, 
       2331, 2135, 2569, 2732, 2308, 2463}], 
      Line3DBox[{2462, 2320, 2296, 2629, 2166, 2351, 2352, 2044, 2394, 2578, 
       2772, 2297, 2212, 2045, 2167, 2743, 2089, 2213, 2503, 2717, 2169, 2417,
        2418, 2374, 1300, 2171, 2090, 2214, 2566, 2753, 2046, 2426, 2395, 
       2427, 2396, 2174, 2760, 2240, 2353, 2467}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1058, 1231, 2589, 1059, 1245, 1087, 2652, 1260, 1102, 2657, 
       1275, 1117, 1370, 2710, 1285, 1128, 2788, 1752, 1382, 1465, 1689, 1690,
        1748, 2787, 1691, 1393, 1730, 1585, 1586, 2736, 1141, 1637, 1404, 
       1733, 1702, 1703, 2742, 1704, 1660, 1413, 1572, 2718, 1302, 1152, 1422,
        1517, 2719, 1307, 1161, 1530, 2755, 1559, 1316, 1172, 2677, 1327, 
       1187, 2687, 1342, 1202, 2698, 1357, 1217}], 
      Line3DBox[{1060, 1232, 2590, 1061, 1246, 2601, 1088, 1261, 1103, 1437, 
       2724, 1276, 1118, 2662, 1371, 1546, 1578, 1579, 1129, 1606, 2666, 1383,
        1774, 1804}], 
      Line3DBox[{1062, 1233, 2591, 1063, 1247, 2602, 1089, 1262, 2612, 1104, 
       1438, 1439, 1562, 2757, 1451, 1547, 1452, 1563, 1782, 1805}], 
      Line3DBox[{1064, 1234, 2592, 1065, 1248, 2603, 1090, 1263, 2613, 1105, 
       1440, 2725, 1542, 1441, 1717, 1372, 1453, 1373, 1604, 1454, 1607, 2763,
        1386, 1467, 1387, 1608, 1469, 2732, 1620, 1396, 1676, 1397, 1621, 
       2766, 1478, 1638, 1406, 1682, 1407, 2629, 1639, 1494, 1662, 1416, 1573,
        1417, 2631, 1663, 1512, 1424, 1576, 2758, 1425, 1555, 1523, 2748, 
       1524, 1175, 2680, 1330, 1190, 2690, 1345, 1205, 2701, 1360, 1220}], 
      Line3DBox[{1066, 1235, 2593, 1067, 1249, 2604, 1091, 1264, 2614, 1106, 
       1277, 2621, 1119, 1374, 2711, 1716, 1375, 1548, 1455, 1566, 1456, 1470,
        2733, 1622, 1699, 1623, 1477, 1625, 1677, 1624, 2767, 1480, 1640, 
       1706, 1641, 1493, 1643, 1735, 1642, 2772, 1550, 1742, 1743, 1511, 1763,
        1762, 1761, 1426, 1522, 2747, 1427, 1163, 1318, 2637, 1176, 1331, 
       2641, 1191, 1346, 1206, 2702, 1361, 1221}], 
      Line3DBox[{1068, 1236, 2594, 1070, 1250, 2605, 1092, 1265, 2615, 1107, 
       1278, 2622, 1120, 1286, 2624, 1130, 1693, 2779, 1749, 1695, 1719, 1398,
        1479, 1627, 1626, 2768, 1482, 1644, 1645, 1495, 2743, 1408, 1551, 
       1497, 1766, 2790, 1499, 1154, 1309, 2634, 1164, 1319, 2638, 1177, 1332,
        2642, 1192, 1347, 2645, 1207, 1362, 1222}], 
      Line3DBox[{1072, 1238, 2595, 1073, 2650, 1252, 1094, 2654, 1267, 1109, 
       2659, 1280, 1122, 2664, 1288, 1132, 1471, 2789, 1764, 1294, 1138, 2668,
        1399, 1483, 1589, 1297, 2739, 1144, 1648, 1649, 1500, 1300, 1149, 
       1712, 1713, 2782, 1304, 1156, 2671, 1311, 1166, 2674, 1321, 1179, 2682,
        1334, 1194, 2692, 1349, 1209, 2704, 1364, 1224}], 
      Line3DBox[{1074, 1239, 2596, 1075, 1253, 2606, 1095, 2655, 1268, 1110, 
       2660, 1281, 1123, 1376, 2730, 1457, 1289, 1133, 1757, 1765, 1472, 1758,
        1727, 1728, 1139, 2769, 1628, 1400, 1678, 1590, 1591, 2740, 1145, 
       1650, 1409, 1684, 1596, 1597, 2753, 1150, 1501, 1574, 1305, 1157, 1428,
        1722, 2721, 1312, 1167, 2675, 1322, 1180, 2683, 1335, 1195, 2693, 
       1350, 1210, 2705, 1365, 1225}], 
      Line3DBox[{1076, 1240, 2597, 1077, 1254, 2607, 1096, 1269, 2616, 1111, 
       1442, 2726, 1282, 1124, 2665, 1377, 1564, 1290, 1134, 1609, 2667, 1388,
        1567, 1582, 1583, 1696, 1629, 1401, 1679, 1592, 1593, 2741, 1146, 
       1651, 1410, 1685, 1598, 2760, 1599, 1707, 1664, 1418, 1513, 1602, 2762,
        1603, 1158, 1670, 1429, 1556, 1313, 1168, 1534, 2756, 1560, 1323, 
       1181, 2684, 1336, 1196, 2694, 1351, 1211, 2706, 1366, 1226}], 
      Line3DBox[{1078, 1241, 2598, 1079, 1255, 2608, 1097, 1270, 2617, 1112, 
       1443, 2727, 1444, 1544, 2752, 1447, 1565, 1448, 1723, 1672, 1459, 1610,
        1810}], 
      Line3DBox[{1080, 1242, 2599, 1081, 1256, 2609, 1098, 1271, 2618, 1113, 
       1445, 2728, 1543, 1446, 1718, 1378, 2712, 1458, 1379, 1605, 1461, 1612,
        2764, 1391, 1775, 1811}], 
      Line3DBox[{1082, 1243, 2600, 1083, 1257, 2610, 1099, 1272, 2619, 1114, 
       1449, 2729, 1545, 1450, 1125, 1380, 2713, 1460, 1381, 1462, 1392, 2714,
        1568, 1615, 1614, 1729, 2784, 1700, 1751, 1701, 1484, 1632, 1680, 
       1631, 2770, 1487, 1654, 1708, 1655, 1503, 1739, 1759, 1738, 2785, 1760,
        1740, 1741, 1514, 1756, 1755, 1721, 1432, 2722, 1433, 1169, 1324, 
       2639, 1184, 1339, 2643, 1199, 1354, 1214, 2709, 1369, 1229}], 
      Line3DBox[{1084, 1435, 2723, 1436, 1085, 1258, 2611, 1100, 1273, 2620, 
       1115, 1283, 2623, 1126, 1291, 2625, 1135, 1697, 2780, 1750, 1698, 1720,
        1403, 2715, 1486, 1634, 1633, 2771, 1488, 1656, 1657, 1505, 1659, 
       2745, 1658, 1552, 1506, 1516, 2746, 1507, 1159, 1314, 2636, 1170, 1325,
        2640, 1185, 1340, 2644, 1200, 1355, 2646, 1215, 1538, 1539, 1540}], 
      Line3DBox[{1216, 1356, 1537, 2697, 1201, 1341, 2686, 1186, 1326, 2676, 
       1171, 1315, 2672, 1160, 1306, 2669, 1151, 1301, 2781, 1710, 1709, 1147,
        1298, 2716, 1489, 1636, 1635, 1140, 2735, 1295, 1584, 1476, 1617, 
       1616, 2765, 1136, 1292, 1464, 2731, 1463, 1127, 1284, 2661, 1116, 1274,
        2656, 1101, 1259, 2651, 1086, 1244, 2648, 1057, 1230, 1434, 1541}], 
      Line3DBox[{1218, 1358, 2699, 1203, 1343, 2688, 1188, 1328, 2678, 1173, 
       1317, 1532, 2751, 1531, 1162, 1308, 2720, 1518, 1423, 1669, 1153, 1601,
        2761, 1600, 1776, 1815}], 
      Line3DBox[{1219, 1359, 2700, 1204, 1344, 2689, 1189, 1329, 2679, 1174, 
       1521, 1533, 1520, 2754, 1554, 2633, 1510, 1519, 1509, 1747, 1746, 1553,
        1787, 1814}], 
      Line3DBox[{1223, 1363, 2703, 1208, 1348, 2691, 1193, 1333, 2681, 1178, 
       1320, 2673, 1165, 1310, 2670, 1155, 1303, 2744, 1498, 1148, 1299, 2717,
        1496, 1647, 1646, 1143, 1296, 1588, 1481, 1754, 2738, 1753, 1137, 
       1293, 2778, 1694, 1131, 1287, 2663, 1121, 1279, 2658, 1108, 1266, 2653,
        1093, 1251, 2649, 1071, 1237, 2647, 1069}], 
      Line3DBox[{1227, 1367, 2707, 1212, 1352, 2695, 1197, 1337, 2685, 1182, 
       1536, 1561, 1535, 1577, 2635, 1526, 1557, 1525, 1575, 1666, 1791}], 
      Line3DBox[{1228, 1368, 2708, 1213, 1353, 2696, 1198, 1338, 1183, 1529, 
       2750, 1528, 1558, 1431, 2749, 1527, 1430, 1671, 1515, 1668, 2632, 1421,
        1778, 1816}], Line3DBox[{1788, 2626, 1783, 1714, 1786, 1813}], 
      Line3DBox[{1789, 1785, 2792, 1715, 1784, 1818}], 
      Line3DBox[{1807, 1780, 2737, 1142, 1405, 1812}], 
      Line3DBox[{1808, 1402, 2627, 1485, 1781, 1819}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsvXk00F3XP4xKGgiVSEkhoTQZMu4iFBqlKCIqQyqJBkXRoFCmlAZFJRWF
jEmOOVNknqfM8xjN/c7+1vU+13rW61rv9aznXet917qvf+61zr3XPp+99+d8
9j7nKxaaHd1+gI2FhaVjKgvLBPq/Tg7nalYOJhAZP2dZg0meZLJHn/K6yn54
9HiH4sx9seTgl+SvWWxhxCat4nh/RT9c5wmfvK48jKy46jt9r24scSvSLLXF
9Sk8i5WfXCPOV79fsdF8TebI7iqeR9fX1Pg84BAMhNI4y8OFJxKIUUHUiDRd
31HOeWpNeiS89HsVEskbTbhNPmvdoetFHTmXWifGA4vLICvb68dkpdUT7ZkU
j81qZ4tPy17Dm4mTtsSxeilXn38vq0XXxVKandD+5nG9CdQeWg2TGHvbdXPs
0b+iZzz6B+8wlg3ov674uCPi+SZ1FPHAF9lEBs/MSX2uiN/ic6gbxQ/t7DsZ
/JdKz/JhvG/6rmK8kDuiwMRrG3tNHfMzlf055gdOzyBMfpo2j9ZhPo9mn8R8
wtfiNiafE+sTOyZXpZGce8IbWZJvkHe/dAVZQ/pBRHBjeo9eCrm18aDYRbkY
Up5VZan9qB8mq2jkst2LJd629SwFMilEsXD/kttB/XDDodC1RP0W+dTzuKDk
WDrp3/5lRs79fohoOFvDl/ME9j4NqnqdlUaWP1eMXfagH1a1ih/nbH4NQaKF
/Fvqk4hjWr3Y2eB++Paox/fVuVRIkb51U6j+JTmsoKM57XE/nD5zbYLEhHSo
Wy8wXbT/pvLM2rODwhQnp+JXb7TPu5Bwm9oD20FDxt7IU+0o+ufn3jmH+gf2
lgHGP9ly4DnicZWNRTzwXNOYwePicS0f8Xdk3UP8EMbbw+A3O722EeNdJ56C
8YJ6jAQTb1+CdzbmR5bTcAnNDyiEPGHyw5n2vQvz6XKRF/MJA87yTD7T4iwt
9HvyyK/23HmuioFkiq/iAi35fpBeXOcq9y6bJLHwWznLvyVn7NhrHKX7wW/b
xO2cE1PJsRmZN9cbZZMDLJMPrRbuB+0i5+VyWQ/JtYL049I/3xPrarlUdb5+
uLy7xnSH9it419ixaO77fFKbZSFwjL8fXk9ZxWMvkgHvVA3rCw9lkrLIR8pj
ov3Qvp1n5JtmLgz9mK9cMiOO1DtKcJmu6oe2pOe3ZgvlQ8i8462dwkHKFw0f
7+mgOBU/Sw6hvZZjPlB7MAtbw9gX5Iox/iW3zG+k/iEkxZvxv1zn8wbEIyEw
MJ/iga1POxk8zmNDBxD/Q4s1thQ/cEXoMvjPnz+/F+Odn2yH8UJAcaA1xnv7
ea875qfMfdEBmh/gTHlZjfmRvexijfm8YRuM+YTSDVxMPmOiS+xdS0rIkRVK
ARvXPyTsLovmX7boA52DfFOs3YrJdPWZa1v2pxNubxnFTap9kP+iOubrjTyS
aHl4tfmbIpJ/ddmugtFeEFgRu9qTK5I84vAwy1hVQfpKD7DeTO2F5EeLuZx7
kqHshtrMJ9/LSBHblZ/O73th4Wa78k+5hdDDKv2iV62ABDoGVm+e0Qfs8y+P
WsmWwDTlE7vk3ZJIjq+z2YetfWB1qvLBleYSWJNiO5WV97HyYiePnv3WfaB+
cOYw2utO+oz2UO7EYY72+2RiGP/Tzk99Rv2DZk4N4/9A7MlGJ4rndexbxAOB
HdK/EM9Py407Ef/BSwaIH6SnijH4U6VWpGG8Hz3ZMF74OXpqJ8Z7N69xGuZn
kMtVieYH4llGFTA/91aoncB8mhrMwXxCTkXbPMznk9zD86O7q8iXpVJnOfcG
Ec2l+ZdPqPRCsTbfqEtRNXFuCl658VgGebj0te78Oz2Qf/Sslb9lBdlo8cVV
2a2C5Cm2JpsYdYPiIZtdF02TiVddraN9ThNxeWQZuGxHF0RfuvVC2ScfRk7l
3dtq0Eg2fzDao+vTBVe5f2UG3a4CA4XjB4yfFpMs94eKogXdUFRlzlZxsxqG
2h1W3+FMIm5P1+pptfZArvTFXIvCKnixMPN0bFqw8qnmah6dDb2Qu8aesb9Y
1LGM2gPH8e2M/Vaj/enony11nzn1Dx1FN5TQf0PM9suIZ92Pz4EUD6zr0DRG
PPxuPCmI/1pu8hmKH3R5e+8gfrLb8AjGKxCV6ETjBd/Ab0y8Ww/lDWN+7kiw
rqL5gZdnVTdhftpUns/DfN6yUMd8whKHMSafsiKHHe/z1ZE2WTt+x51mIBwX
YT98vgckxIV70wuaiDPniyfD7s/JDr79hfxXu+CGF6Sybm8hbMvXvMxnLycO
NyY4BixsA40U/cWNvB8ISfihF8zXSRZf8dfdKfkR7LaJbrvfUgtV4c/WWyq1
Ep/8my9d5jTDXvfSlllbWkC3MvjWftk8ErWW8/C1rHYQv1O4NepgI3gOee6Z
u8eHHOXimVl8qht83891CrlbC/q5HCvC7W2S3qpnZ00K6gHF+hnb0X6qEYsv
tYfctRt50d4q5Gs7+lc5l/WA+ocHN95ZoX+VuFsKiGfyVwUdigcuTFgdiXg6
3uTvQPwTuj02UfwgmCajg/iHsx+nYLyehfzRNF54x7bnNMbb7MzShvnxs7cN
o/mBVUvESzE/9587OmA+F81WE6D5JOuKhxwwn3lXjAS/tpcTbp2BK7KNMbDA
QTlKMIOed5OXsnPEmkjUicbQO7nFMGe7cPEW/U64EhabrNzdTbzO5EYGz86C
Bad72crU6oDl//a/gXHXVbevj3lk1gETB9VbH1oUw6Odvm8TvT9C9a7tJG+g
FnhW5aasVikAizub7IMvdYP/wJaxtyvKQSFg8UClYHzSzt6Xk0sm9EF1k0QW
2p/MGk6m9uTO8WA7xt6N7zX6Vzvzop36J25LH8eh/3+LMyBjdSzGu4/fKI3G
S4KaW0UwXtVi78WYn4oz6WE0P2Rn4MMazE9Gi9lMzKf2M1Z3mk8iqZr2CvNZ
e7yl6mdBhrKX7vN6DtU0aPHbEGYaTueo9z0aDmuKlF1GnMuKzZvhlZDFtir7
TpBoPNN5K6ZJec2cX7KX5PtgKOzh5gLuMlioKb+k1ZFV5dHUUs+1P/vBYZFG
QdNif+B5YDHx/ZvBJNn3zaNbW/rB1Cf5wbrJscA/NfPR2aCapPbkrO2p5d2w
LDVmnqRXA5hNUlurUJ2XdHH3huBdibXQEGKwXj+gB9iYuDOSfv7C/9KT/srD
s+cZumgf8NueVP6xXyCzIx399/32T2b98d8qEL8W8cj9xkNW/sGTsCzDo4Xi
D/6Nn7z9g3/H8GACxiv7O14yKfx3vJ4W4hKYn9O/80Ne/8nPtJZzhX/LJ/kr
n98S9ZHPYCK71BH57LXCguHz9Z2B8rRewCe3/SbyWSyDtxTrdeBcUyqtLyjN
vaaPfK7WncrxP+GztYlBHOUbqXmflI983hnbnYJ8swywSaH8JDbNui+Qz7Mm
7XZAfgb95jOZLdHagnze8YfPPfIP36H9PeOxx8hnqV2TGf5v/nz/Lfrf9rQm
G/n8Zrdewv+EzwbJd+Mx3tU13FeRz2+cLothvM6T1i7B/Iyxzg1EPidWyNVh
fkA3GPkM27bInEE+z0hvYPi860XCaaonsOXWFZnTVJ/n69Uz+nz0hX8P1R+Q
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
A6zc8e2RhV854V2r+Zy3sAdOFBnF4/qelA2P6To4T3/GrF9oC9h7Ir4MJLny
UhM5q6Hpasn774u6IdC44b0Z9X+jLBj9w3zubMb/mZXrGxDn3I5v9hQnWFpW
miPOkzrVdS7fYkHmiQL7VLk2iPetnyfV0AY3nutHh4+VEt6AsAlWnQUgoLkq
+51iL8SF8m50pfZbZ06fSO0Jb7nJfLQ/qaz0WKiqkWSwh8mmxXwkknqBSlNT
m2HPu+CftyRL4XBQwZ4IxWbCYRo7O8GlHRIXOjndfdUMgRdPJhnPqCFPSj6e
0d7QChvdZh5ro7pwIkTfvNwqGt75cEnJpXYAe1hi8i+1Rmjvl5o6Y0ExsJv9
NF4xuQvs9kk7o58Xg/wJ1A/06D88i36adeZcN6zKJCz5mosNvVoh4gjfwirW
djgufS9YTjsFntgIh+xa3QUv91jWKnY1gazNNvnFw/XE9Imr9JWYSrj9tknS
VqQT+mYeCMe4LtY1r6BxQZj0MgWMq2+Kl+blumay7PXjJwc2ZsD1ltLHCT4d
INx+PjFSq4E8vFddpVcZA1vmuNq+yusGR+njBvFFH4m77hYB1ug4CImziw19
3Qn33GDunoJqMpEn+nBgQA6E7vtktNKgB1r23VFbdb6THD8UWfxz/jvyvvUt
n7fdR+C6HfmT+0gbifnwosXjZwlcEbdUOXCx5V+/n/B2mIes828BKcFSpa8W
LUQ+qK7+zYKa8d85VV/Jy23shUTBsWfz7F7BRGX+kirTKjBYdvA7//uPsLyb
7WjOWAnEPzmdcLClHVRzEsbe36mFtVtNt36uDCMhK0crw317oHNodEV6eQXo
crk61B0j5FjKIvN7R3tB/vi9E1j3nO/8NrTu5NIbu8VYdyW+Wxr3PreD9MV2
qceSwRC0xX5NpxSt5+XcCQJ036OBOQfovmRTq38M7tur80kRcZ54FhpGcZLn
XKPpiPPf5me8de27vX2Y/9CpHD00/0QjtVKXyX+ZVaLFgzIycnJGmvraRoiS
lqq/vacTlAyjxSO25iiztBeF+t2qgOe+fOcFSC/sW7NCpyeuhWR+mXFroU0r
fPJYsjN0ewXwBTyxyLOvVL4s7L91/9wuaHjXonnfdfz3sdnrHKNHTHqUc4w/
z3mZ2A98YdwCHwJTxrXffjiKvyiDzkmJ8d90QlvB/MrQMY5rjZD90+fKRtOW
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
i73VG0Eu5mZuzJlsUrfho8iqi9HAZz9FW2luM6x+dfxN35XlxEjSM3amiieR
v/ugdXpDPfgIFR/RMKwgiS/sZgv6ZZGZb+avCDSqBQvh+x3axYVw4vNKA33K
t/Osg4fXlTf+U9+wd979IyJZfBHss/7SzdZSePF67tMePWsweSKwMTKkAU6t
PvPqgEwFfB4T+dGrNRFSNRqOvX5YBwNDRcva95dA14LawK7hZZBumxYdcbwG
BuabzHg4o4goOnzOyiuLhpN7x7j0PG2E61YdxzQKy0jJN1fpa1/TwF48br28
UD24/Cs+dY7QYHGZ9j7xdqGWYlCGD2kOF5JIzbSZ8SmllM9/EQi4Hh9IPuYt
msJTLIchgkdtBmTWs/8fKtP79+t/4sqBE+ZdLznmB0Ejn/HpvsonXvyRM/qY
NYGZVuhlqUEf4dkbVcOvGtnwY83pee9v14Pjv+LEqH/i5bZlFbVqewrIsASx
eI2qd8TiyBe3Y6ca4bSnZmmncjkoaUhG9u9nS2ZNfbFcqq4eBi8dc8u8vhrG
LXqSfHh9PGn13/8iL/AT2P4rvnsl80v/c9TO3E5PKiVaux9O2DlcmThVGklv
S2iAJ0k12ulGVURcz2aKtp8/5J9aPWLt1Vq4/3DyLKpn4NutlEb1TCyTnzqj
nm3XeT9YNLcYpPj2eUka0njo8pb1gsMa4MXxPue/8OWAWNiEB1kp5WQR6RAY
/KIWHsVWX6DzTkyKHvTto29Nxkv134TznvqfcZnFg3/qf13sXVdEpXddwa91
tatraoB6fTH5PDt8rVS/91BRe+LHIecG+GSauNHnZQHZaL9sdaVjCRxN8s30
Ua4DVx19f7qeQXeqXTtdzzDwlVInrmfhjPBsuv5hU/m2SXT9k4Wb7nDrf+84
KTLOIBOeSH2t8X+cQRa86jA3cmuCfeMODLX9HgfzVhlW8o0vINdUso4t6WiE
JdPdcd+Rdr9Nx+m+I0NS7nL7TtldH/cpuf7TMoTuU6I0/MdQ3KcGv8VTv+xh
zdJX96gdIEur7hVQOwDvvXZtRTug4leAdoMI9gsVo3YD+K/CCLQbWz2fb3h2
4B3ZZxc6qr95Lry4ef3TAJEmOHzjxxVql8D6mkcLtUsw40U0Z5eWR0kcoXYM
6nZcRDsG2TkLOTs2Re6sHbV7oN/x7QC1e4SvcXwC2r3WoZtXUDsJumJtk6md
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
T/LIFhxrp/2QoUEdbiiPaemDhdjPn9q3sTpB31idoC2sTtB3q6H93tN+vBtf
3Ed5DC/cGPM/9fO3+BdWf4ef1d/5wurv/ML1GM5juCM77/Nk530L/st53wWe
sBXmMxe0ji0+PFwZPm3J4e4d2f7rntj/e09p27Q+mI8CiR+H0jEf9fRUSALm
owxadJMxj2r3IOvDoIlP4HOO+nDMd23wHYn5HCJw3sgY8zkjFPdw+Zy3LSb7
8D7YyFklMpj/SYehWzD/0838oxrzjy3MPyqwujbHWV2bClbXRorhEQwvYHge
q2szk9W1cWJ1bX7VuxnOcBeGK7N6N2Ws3o3uf6l385P5C2B+YSrzC7AnPwnz
fg96PMoHUz3wXOdxejBhdk+R2b3VzO71DT1hgnmwU7ujJ+K9uJMtKQqoh0Sl
GZKYLzJyTKkuk38Nj6bxZWO+6E/ybBpn1YF5wvZ08xC8L3f36gBuXireOnyr
619GBvLVJ/qFBZE1y+NsrOwaIPNcbz0XVrcFRFg9l0m/1XNROdyLu86ywnwR
mPx8bYr5IsH9tQ8xX7RQKPkbfpcX6pklivHy0/hpPhgvW0nUXcTvB9d7mj/A
+Dci9EQ2xr/PdKeb43dnHxS/4Hdn8FJ4y1yM36cuVb2E3691St6Kwfh906A0
V4zfF7l46eB3VUPvh+XgOYJ/hDl3jtCg1KOH+atz4mtM8FwjFK5w5xqDvvfW
DbFldUOa/kvdkL/FG1m9jyJW70OX1fuoY/jUPqkcvovhJqxORyyr0zGa1eno
yf53nY7xrE7H38oT9FudiwJW5+JP7X0YPznD+Mlaxk/+9neTWN2Hb0q9dR+s
WN2H1wyXY/UgLjPcm9V3aGf1HSay+g5uDBdluBjDV7D6DvKsvsM8Vt9hOcMr
D/XiC/9L3Yc/4b/yQqIsL7SW5YWmsXoNP1i9BglWr0GG1VNYzuopXGH1FBzq
RTrp/oKfY1718w8LArGfDdz+CrtvhPleomykJlYu/5o0L7pcgPsXmL1yYPaq
mNmrT+y+SiK7r3KY3Ve5/a/7sSEy21mev+df8bjHP+cFVuy9/c/svf0P7L19
R4ZHMvwdw+ewcytV9h5+BTu3OsDew49j7+FnsPfwo9j8TmTze5XNbwh7r/42
e68+j71Xv3Zh8s+jFyrJsacQjnk/iR1zuLzfXfYuvRV7l76WvUv/gOGiDK9g
eHN8NKfnceEtDWjHjG2zOT3PZ/LPZvKXMfkVjpxtQ7sn/WFKCW0PEyw/2WL7
v10n/7fwbpdd7+ZsrCZ6Aj9S9A5XkiU9Y+XPZhZB5ocvmYiP35aVQHEQeee+
CvEdPXJpFAfyNjsR24vkTFmP+J/675wlkoPtpwcfjsV+6j2urPmf2hsE6sYH
meeTq23bkm7uboLR60bGbJsaDkIXHjlRHOy/2mdQnCi81CxHfBTLQ5axPOQI
lodcwvX3U+aX3xnI/I4owsem/uN3Khk+n2sfEvE7PhNhXbG3v/ezi+3rWWxf
r2D7WpG9+zdWvffdP1P27t9a9m6b7sved9uOf+99t+1PenjA3sl5wN7Jucje
yfnb+f3/G550P1Dm/qJPJGXee5+gkgoSM71T3P1MIaxi72FOZ+9h1rL3MP/U
j4yxlk1iSg1puPmhJHFYNWR3ee8b2R0J6oWrNYvGNRLVx5veT9IpIYJL8+SN
7kT/sZ8NVb3vxYWz9+KM2HtxPzYNXYNy3tES8aZygtkO47ko5+1Mm4u0fxg8
7u082j+Il2vNwv5/WPS+h5Zl3/seWtOm3vfQ9rH3uJzZe1xt7D2uod4iq2n/
UCi+BvsnlooXJbH/8kthcoj3F8xww9/ducKH08+f5F/P3hFSE+99R0i5tfcd
ocqEU5ZUP/DzXUIT1Q9xH18fhvpZUJ7sOG8NIbfdN+1+oBtI2jUmV47w5sGD
te88qr5Fk1ylzX1G59oS1bMrzsj58EDa8KNYiFsQ+VgbsXrBIEK2eYNlsAcP
9pfoS7hLOxDH1s+b4+7HkGTRgyenuvNAI+jSsusxL6Di6trLw9qjCd+gsNGn
KL59Xcm6IVEhsHh0jmPzi3AyJU5qwRlPHiw4nsXvERUFe/0M1to89CFdYTGt
wVSebwWHJylJx4B8vZjLjL4OMp5u2t/dX/JASO7JcGx/pVRNgbYHR8csrn3K
iTZZ7P/u1ZsOtH/Yc2ot1/+axBXDUJ7HRttQHvC7ks/JU7840gzlT0vJQflB
OkuHk/+58JAVON69KtdxvDCsaBg3XqulC1xRb+ZzyvZQvUHyz+YK1Ju95s01
Vj4JZKflIy2+72Hka3D1s6EqPJjfOmJSjFcysX7rX5gx2YkYKxrf9dnGg1IZ
2eGDvkaSobYTujs1EsiiyJDrm9bxYLpTS58JfZ6SuEKJDyW7U4lARnx03ioe
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
Rp3c/izmE3nivvveQIEy0Gd4BsMfMpwn6HKULyGPDNVt9zq8u47YdE4In1v/
ERYI9eIdu3vxRwy32iwwDOPKxf2uRtG4kmhc/D4a48rrDK/v24vvZrgvyfR5
/6GK7PHt02+/SxnwkxczF78pB1eGn2H4AIbXrVXh4tmkaxHLaDwLlxYZrMN4
lsdwR4bfZri68wrEib9d80qMf3/a7VqL+CaG5zH8G8PHR0q8o3ogc7QO6KIe
Nhe7WqEeZBk+nuGqDHevNNlF9QArlrQGoB5k6zb5oB5OMlyB4TIMd0u/503H
BU61hYPouIhoVcQMHFcAw68zXIzhDZ5dqDdYF1L2EvW24U26IOqtnuFXGb6W
4bfsOvgRn/vi4GOM6wd3JwogfoPhhxjel+Ge7hEv8XcVNj7j9NwqqjYLfzeI
4VIM72T4haYxG3Fc187PC6LjgieVi0JwXFsYbsvwhwwfP6vpE+pNe8RKLao3
uKWmcJ3TJ8M3Mdya4bsHGTvhvBh18lbhPD5JiufmUZPhdgx/yPDp6/mFHGcW
ki05Yx8Gy2bC0g3BTktqGtj+Sou4weICn3/x2MiI84z/1/+Xffcrn7yC5cnr
WD55ANvXjD/DMrav/3b//i3+Wz4cnFg+fJBQ2uu1vArw1z+kM/NmASTm62+c
fOhTrx2zyJCZxOyY4L/sWJRMB7NjS/5lx9h75hYF/8QpvX8Hy5SyuEOatV8S
fPtnZ0411GSO7pNclE+2ao7Ow3x1r/1MlPFk8Uvuv+KjEBlhFqcIM3l+nSN8
Yfn/QSz//8s+32HxSwOLX/6kn975zY24zOxqOZvf3nHFR/xkccqveNCffZe9
lX2XfZd9lx110z+M6pNc0PVdj/oEx82bUZ//p+ZRjn1HbMq+Ix7HviOe2Gb3
02FmIci+vGxL1zPR3hv9FNdzBsvjPWZ5vD0sj3eW990X7eSnk+F8aDfgu5IY
7tNRLL83heX3DrP83qWjo9ej3c6S5qFdgozlIlG4T8/M6t+I9r9l93AN3I9j
dorexv14M2nvem3PZugRGZBqtfkcXCuL22e8Jev/2n3+3vWQE7GM7ccOth/Z
fpf5xM6hFrL18wtvYutK+F/rKufX+RcZys6//laepjYH1A9R050TfpHqZ+JI
g/9P9KNtN87JLKmOZJs+r8HzqRu3pxT9b86n/hZXyO/bIJ1bCxGztjfiedaW
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
xzLm2c/hTEgLiJiXtSgeilUUWq9q/v2+mWfZ2kc5LEeSRvXdLetmB+DyaG/g
+6W4PCry02fK29L3u6bGzN6lxGadNKqvb+Wzlcf/C8NKG2/j/wWOiDbmf8s3
LHmK24ksDhZX4Hai1hfrmHa+a+48gr8LxWv6sxr25qEd/UNe5LtG362yqcoU
4pzsmjT6blWt53PSP1B622Q17h+Y2KDB9E9O6tGTuD9BdpVdNu5PWO5sw/Tn
6uHlpP/R/ZNxC3D/o8udtkz/ewwkquDxQnP19ZXweCHl6pfMeI2+43TQ/72U
+OS7SaPvOGUX+ZJxh2vO3HPxuMOLnEJm3OOXRpJ5AiGRUsF4nsCq9N3MPPmc
p+yJ5xUScloSi+cVSrt77wKZV5kUf3ZQ/PmE4s/Rd42aNysaXrkSmDT6PsmC
1TX9eD5De2pKB57PcFrBkJnPehSvho3Bqx4SzUV4vSBuJV07vF7QS8lKZr1o
imlk4/UFj53TyPqCT6a7Qsj6UqX4Npji21kU3w6budZj/wDrDJ2If0CbJp/c
T/xDCX1HJeXp2TqHNAeZStrOoLYw4mdQ3bOkNdjPQAinH+NnHh2XJn4JfLWP
TMR+CU3hNGb80uh7I4Zj+rlkw4FW7N/QN9P51di/QfSmGsa/2S+Vuo39Ifp0
NzQY+0NQKNzH+EOrBYUXsf+EE8aNvwtdEIrV+cX4zzNLJXdgfwsrnjZNxv4W
CZw6zk38rY1j6jvsn6HwaJQ89s8oIFbtKfHPxZ4nd6mHOSCZpV3rsT9HMJO9
mvhzI3qejR1znl1B3/Ew3s+zZPOke0mj73gMyV6chvcRFD14qRfvI/DN/Xw/
2UcM7/gW4X0HuaK9EXjfAYnVHrlk37GX1FXE+xSa+MGrBe9TUDxH6CXZp2bN
COotH3iCzHS1F+J9Dfb/5ttN9jWbmp3aeB+ES00P++ohDnG+SmL2wdP7DbXw
vglmm6+cx/smytsUsJjsm7LIJxXvs9DXKLIM77Mo2u3QGrLPGg/KbF1Z64Dk
Zc7V4X0ZLT5ZzezLovYWrngfR9adrUp4H0eBfesPkn3cnr6ncUtK6moGq89f
611dTikP4wT0lSvlT4wTgCWTbS/BCUO8ny5gXIEayv27MK6Apqk6YgRXdJzx
3I5xCJqYexVhHAIVbp4cBIe48T+2xLgFsZRX6mLcArulw88S3KLwWEqibkEk
KPq5AsY5oLOxnsE5vfSckjjmnKJmsdkY4yVYwOWTgvESCg8UNiF4aVv80Z0Y
X0FkkP9gr1Ea6lS9weArG7MBgdtrr6LggR47jMcQj18zg8fagl9rY/yG+tPy
7TB+QwtmyjP4TenTtTaM99Dy392iGO+hqruCDN4bfR+Dr+6HHtcVl7/85/2e
J8kYTyLZgLyzGE9Ceux5Bk8mmZpZYvyJGtstHmD8CedrrRn8Gd8wKRbjVVSa
tTwB41WQWDb5AcGrpRXrjmF8i5wLzj7G+Bb6qm8x+FZ49h0hjIchy1AsA+Nh
ODS4XI3g4RDd5UoYP0OE+InlGD/Dd5cEBj+XHDEQTjxWj+ak1Lr4KpeipDsr
b8mZt0IQf8vk6oB6MD3OXRWSlIe+5NTYvxZtgz6qwy0ao8P9U6F70IuzHv2e
FRttEFsKP24o3dC1boVGqp/tofpZHaqfNaE61nlUx/qF6liP0XjgcxoPHJIb
iQeepfqaoVo9NW73ZJlRfc10GvfjWDMS9+umcb/JF7p+4vZAmX9QBG4P8kvt
ZNrzlMbrRMbE68J3WU3H34v8JuaV4+8FveOxduR7L+mfJ/0DEYWhjrh/oLvg
M9M/k6kONHKMDlR4WxHPiU9v0EQ+0Xa78BqkyP60cD32e9k0z50pzXPXRvPc
rQrNdJCeUwAl+e4dU8srwXaVYrJIYjt8pjpKlzH6SkmaF+8dzYsnTPPisdD8
d59p/rsumv9Oi2U3JxlHve33i8l39TnvZMZxWma73XmvBsT6oNmNbYoHWEa3
e+smtYIaPUej5pFzNCc9R+vEcc4/c7IZ2r0+ykdtqIaSW0PTtywbP//myHk2
MYlvJM8pRNI8pyPn66Ik65G8qCBI86JOYuyNSRRPgiTFkzb0PTTlQ0P9ZtNe
yYy+hzaqp9s/ktcVvaV5XUfqz5b5ycHkh0W/aH7YkXP3B5m1I3lmkSXNM8tF
+U6XKd/pLeU7BVE99VWqp/aiempT+l4Z8KvtNud4IjP6Dp4m5Wc6Un4mF+Vn
hsoXXcD9DIesk2bjfkYpydp3ST8PZuZMIvNta8idMrK+7n0/7EDGxbjc0gfP
B7RP/8NHPB9QUPFrZj5sofrlS1S/fJbql1WTpWXxfIPTOfmNeL7BvAeCRWS+
PaZ5JDNpHsmXNI+kK9W5zKc6Fw+qc0n75COAxxdNk/8phMcXmelbTSPje3Wc
eJEQzQ8oT/MD3qH5AbtpfsAlND9gMM0PGE71IKxj9CDmVPe9juq+Rajue7x5
NdQyol8wvz+iX2ig+gWbzitl5Fygx2t+keCcMhnuboJz5NYGMeeIXRHuRQTn
mP5p/pTgnMjHYVkE/+y97lJGzhdLLbYw54vmV1erCV6a+ub4JXK+iCy/1krq
qaLxqHgaj1Kl8agx8wpO0HnFRufhaJ7ib3Qejs7bYzQfcTadtxbzLi0m60vq
sugm0v9Lg6snkf4fXS+jeYR56HoZXV8CNI9wGF1f4V2eC8k4LuZfuJKsU00v
7ln/tE7/v+3n6LuRpnS9uNH1UnZkzsCe5vcw/JOfPVbRD9iuJ3+sTGiDnLY7
ZL0gK9XLN8h6+Rp9hFkvG9QGib+CtFsGLMRfSYQOMv5q69vWH7ge5NPvdjhG
0Q9xHj7A1DNee5opn0qK8qmiKJ8qlPIrsii/ooLyK8arZzHlBWlQXlAC5QU1
0/hY2Zj4GMccs0HyvWsG3PNJO1mGeZl29iQG9pP2v5C974LtsMnKteWf2p83
Jp72g57H/wfPxvdZ
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Lighting->True,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-3, 3}, {-3, 3}, {-1.2030980439692827`, 1.2030980439692827`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{4, 5, -7}]], "Output",
 CellChangeTimes->{3.7173316116954117`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "Polyhedra.m"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
   RowBox[{"Dodecahedron", "[", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.717331672823124*^9, 3.7173316964140177`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Get","noopen",
   "\"Cannot open \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Polyhedra.m\\\\\\\"\\\"}]\\).\"",2,6,1,
   26884577711389393573,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7173316982320805`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.7173316982330837`*^9}],

Cell[BoxData[
 Graphics3DBox[$CellContext`Dodecahedron[]]], "Output",
 CellChangeTimes->{3.7173316982436113`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fac", "[", "1", "]"}], "=", "1"}]], "Input",
 CellChangeTimes->{{3.7173318080370817`*^9, 3.717331812788872*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7173318131235237`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fac", "[", "n_", "]"}], ":=", 
  RowBox[{"n", " ", 
   RowBox[{"fac", "[", 
    RowBox[{"n", "-", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.717331815227237*^9, 3.7173318377633195`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fac", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.7173318413643255`*^9, 3.7173318448605323`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.717331845103751*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fac", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.717331846152377*^9, 3.7173318478753257`*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.717331848237545*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fac", "[", "20", "]"}]], "Input",
 CellChangeTimes->{{3.7173318491580834`*^9, 3.717331852971701*^9}}],

Cell[BoxData["2432902008176640000"], "Output",
 CellChangeTimes->{3.717331853462268*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "fac"}]], "Input",
 CellChangeTimes->{{3.7173318589173193`*^9, 3.7173318609443035`*^9}}],

Cell[CellGroupData[{

Cell["Global`fac", "Print", "PrintUsage",
 CellChangeTimes->{3.7173318620329914`*^9},
 CellTags->"Info133717317461-2037573"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"fac", "[", "1", "]"}], "=", "1"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"fac", "[", "n_", "]"}], ":=", 
         RowBox[{"n", " ", 
          RowBox[{"fac", "[", 
           RowBox[{"n", "-", "1"}], "]"}]}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`fac],
  Editable->False]], "Print",
 CellChangeTimes->{3.7173318620814943`*^9},
 CellTags->"Info133717317461-2037573"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"log", "[", 
  RowBox[{"a", " ", 
   RowBox[{"b", "^", "2"}], " ", 
   RowBox[{"c", "^", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.717331903950482*^9, 3.7173319119291086`*^9}}],

Cell[BoxData[
 RowBox[{"log", "[", 
  RowBox[{"a", " ", 
   SuperscriptBox["b", "2"], " ", 
   SuperscriptBox["c", "3"]}], "]"}]], "Output",
 CellChangeTimes->{3.7173319135942545`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"log", "[", 
   RowBox[{"x_", " ", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"log", "[", "x", "]"}], "+", 
   RowBox[{"log", "[", "y", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.717331917073278*^9, 3.7173319395016956`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"log", "[", 
   RowBox[{"x_", "^", "n_"}], "]"}], ":=", 
  RowBox[{"n", " ", 
   RowBox[{"log", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7173319494557023`*^9, 3.7173319625457697`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"log", "[", 
  RowBox[{"1", " ", 
   RowBox[{"2", "^", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.717331964849888*^9, 3.7173319651418557`*^9}, {
  3.7173320130981174`*^9, 3.7173320179711514`*^9}}],

Cell[BoxData[
 RowBox[{"log", "[", "4", "]"}]], "Output",
 CellChangeTimes->{3.7173320196473846`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", "y"}], ")"}], "^", "3"}], "/", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.7173320803494787`*^9, 3.7173320903144464`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["x", "3"], "z"], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["x", "2"], " ", "y"}], "z"], "+", 
  FractionBox[
   RowBox[{"3", " ", "x", " ", 
    SuperscriptBox["y", "2"]}], "z"], "+", 
  FractionBox[
   SuperscriptBox["y", "3"], "z"]}]], "Output",
 CellChangeTimes->{3.717332091642433*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7173320994020596`*^9, 3.717332114633747*^9}}],

Cell["\<\
\\frac{x^3}{z}+\\frac{3 x^2 y}{z}+\\frac{3 x y^2}{z}+\\frac{y^3}{z}\
\>", "Output",
 CellChangeTimes->{3.717332115298364*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.717332126420392*^9, 3.717332139204901*^9}}],

Cell["x**3/z + (3*x**2*y)/z + (3*x*y**2)/z + y**3/z", "Output",
 CellChangeTimes->{3.717332139988186*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"\"\<hepple\>\"", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.7173322570488195`*^9, 3.7173322641613846`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"hepple\"\>", ",", "\<\"hepple\"\>", ",", "\<\"hepple\"\>", 
   ",", "\<\"hepple\"\>", ",", "\<\"hepple\"\>", ",", "\<\"hepple\"\>", 
   ",", "\<\"hepple\"\>", ",", "\<\"hepple\"\>", ",", "\<\"hepple\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.717332265069392*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"n", ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.717332362151509*^9, 3.7173323723631277`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.717332372580736*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7173325462290125`*^9, 3.7173325805342145`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   DynamicModuleBox[{DynamicChart`click$8954$8996 = False, 
    DynamicChart`click$8963$8996 = False, DynamicChart`click$8967$8996 = 
    False, DynamicChart`click$8971$8996 = False}, {
     {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.5]}], {{{}, {
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 DiskBox[{0, 0}, 1., {1.8849555921538759`, 
                  3.141592653589793}]},
                
                ImageSizeCache->{{34.58578643762689, 
                 181.4142135623731}, {-141.3663519088752, \
-1.5857864376268935`}}],
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8954$8996, 
                FEPrivate`Not[DynamicChart`click$8954$8996]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
           If[DynamicChart`click$8954$8996, {{{1., 0}, {
               0, 1.}}, {-0.16180339887498948`, 0.11755705045849466`}}, {{1, 
             0}, {0, 1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$8954$8996}]]}, 
         {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 DiskBox[{0, 0}, 1., {0.6283185307179586, 
                  1.8849555921538759`}]},
                
                ImageSizeCache->{{134.08733924763447`, 
                 297.91266075236547`}, {-148.41421356237308`, \
-1.5857864376268935`}}],
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8963$8996, 
                FEPrivate`Not[DynamicChart`click$8963$8996]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
           If[DynamicChart`click$8963$8996, {{{1., 0}, {0, 1.}}, {
              0.06180339887498949, 0.1902113032590307}}, {{1, 0}, {0, 1}}, {{
             1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$8963$8996}]]}, 
         {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], EdgeForm[{
          GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 DiskBox[{0, 0}, 1., {-0.6283185307179591, 
                  0.6283185307179586}]},
                
                ImageSizeCache->{{178.5857864376269, 
                 325.4142135623731}, {-89.05528989248926, 83.05528989248928}}],
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8967$8996, 
                FEPrivate`Not[DynamicChart`click$8967$8996]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
           If[DynamicChart`click$8967$8996, {{{1., 0}, {0, 1.}}, {
              0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0,
              1}}], TrackedSymbols :> {DynamicChart`click$8967$8996}]]}, 
         {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 DiskBox[{0, 0}, 
                  1., {-3.141592653589793, -0.6283185307179591}]},
                
                ImageSizeCache->{{34.58578643762689, 
                 297.9126607523655}, {-4.414213562373078, 142.4142135623731}}],
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8971$8996, 
                FEPrivate`Not[DynamicChart`click$8971$8996]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
           If[DynamicChart`click$8971$8996, {{{1., 0}, {
               0, 1.}}, {-0.061803398874989514`, -0.1902113032590307}}, {{1, 
             0}, {0, 1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {
             DynamicChart`click$8971$8996}]]}}}, {}}, {}}, {{{
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8954$8996, 
              FEPrivate`Not[DynamicChart`click$8954$8996]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$8954$8996, {{{1., 0}, {
             0, 1.}}, {-0.16180339887498948`, 0.11755705045849466`}}, {{1, 
           0}, {0, 1}}, {{1, 0}, {0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$8954$8996}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8963$8996, 
              FEPrivate`Not[DynamicChart`click$8963$8996]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$8963$8996, {{{1., 0}, {0, 1.}}, {
            0.06180339887498949, 0.1902113032590307}}, {{1, 0}, {0, 1}}, {{1, 
           0}, {0, 1}}], TrackedSymbols :> {DynamicChart`click$8963$8996}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8967$8996, 
              FEPrivate`Not[DynamicChart`click$8967$8996]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$8967$8996, {{{1., 0}, {0, 1.}}, {
            0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
           1}}], TrackedSymbols :> {DynamicChart`click$8967$8996}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8971$8996, 
              FEPrivate`Not[DynamicChart`click$8971$8996]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$8971$8996, {{{1., 0}, {
             0, 1.}}, {-0.061803398874989514`, -0.1902113032590307}}, {{1, 
           0}, {0, 1}}, {{1, 0}, {0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$8971$8996}]]}, {}}, {}}},
    DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
  ContentSelectable->False,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{
    GrayLevel[0], FontFamily -> "Arial"},
  PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}},
  PlotRangePadding->Scaled[0.02]]], "Output",
 CellChangeTimes->{3.7173325814247727`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"PieChart", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], ",", "3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7173325839683466`*^9, 3.717332601710949*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{DynamicChart`click$9300$9419 = False, 
      DynamicChart`click$9304$9419 = False, DynamicChart`click$9308$9419 = 
      False}, {
       {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.5]}], {{{}, {
           {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[0], 
            Opacity[0.5]}], GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   DiskBox[{0, 0}, 1., {2.0943951023931957`, 
                    3.141592653589793}]},
                  
                  ImageSizeCache->{{16.585786437626904`, 
                   91.41421356237309}, {-66.76804263485268, \
-1.5857864376269113`}}],
                 StatusArea[#, 1]& ,
                 TagBoxNote->"1"],
                StyleBox["1", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]],
               Annotation[#, 
                Style[1, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9300$9419, 
                  FEPrivate`Not[DynamicChart`click$9300$9419]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             If[DynamicChart`click$9300$9419, {{{1., 0}, {
                 0, 1.}}, {-0.17320508075688776`, 0.09999999999999999}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$9300$9419}]]}, 
           {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{GrayLevel[
            0], Opacity[0.5]}], GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                   DiskBox[{0, 0}, 1., {0., 2.0943951023931957`}]},
                  
                  ImageSizeCache->{{52.58578643762688, 
                   163.4142135623731}, {-76.4142135623731, \
-1.5857864376268935`}}],
                 StatusArea[#, 2]& ,
                 TagBoxNote->"2"],
                StyleBox["2", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]],
               Annotation[#, 
                Style[2, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9304$9419, 
                  FEPrivate`Not[DynamicChart`click$9304$9419]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             If[DynamicChart`click$9304$9419, {{{1., 0}, {0, 1.}}, {
                0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$9304$9419}]]}, 
           {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
            Opacity[0.5]}], GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                   DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                  ImageSizeCache->{{16.585786437626894`, 
                   163.41421356237308`}, {-4.4142135623731065`, 
                   70.4142135623731}}],
                 StatusArea[#, 3]& ,
                 TagBoxNote->"3"],
                StyleBox["3", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]],
               Annotation[#, 
                Style[3, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9308$9419, 
                  FEPrivate`Not[DynamicChart`click$9308$9419]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             If[DynamicChart`click$9308$9419, {{{1., 0}, {0, 1.}}, {
                1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {
               0, 1}}], 
              TrackedSymbols :> {
               DynamicChart`click$9308$9419}]]}}}, {}}, {}}, {{{
          GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[{{}, {}},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9300$9419, 
                FEPrivate`Not[DynamicChart`click$9300$9419]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
           If[DynamicChart`click$9300$9419, {{{1., 0}, {
               0, 1.}}, {-0.17320508075688776`, 0.09999999999999999}}, {{1, 
             0}, {0, 1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$9300$9419}]], 
          GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[{{}, {}},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9304$9419, 
                FEPrivate`Not[DynamicChart`click$9304$9419]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
           If[DynamicChart`click$9304$9419, {{{1., 0}, {0, 1.}}, {
              0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
             1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$9304$9419}]], 
          GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[{{}, {}},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9308$9419, 
                FEPrivate`Not[DynamicChart`click$9308$9419]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
           If[DynamicChart`click$9308$9419, {{{1., 0}, {0, 1.}}, {
              1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {0,
              1}}], TrackedSymbols :> {
             DynamicChart`click$9308$9419}]]}, {}}, {}}},
      DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
    ContentSelectable->False,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    LabelStyle->{
      GrayLevel[0], FontFamily -> "Arial"},
    PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}},
    PlotRangePadding->Scaled[0.02]], ",", 
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{DynamicChart`click$9345$9420 = False, 
      DynamicChart`click$9349$9420 = False, DynamicChart`click$9353$9420 = 
      False}, {
       {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.5]}], {{{}, {
           {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[0], 
            Opacity[0.5]}], GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   DiskBox[{0, 0}, 1., {2.0943951023931957`, 
                    3.141592653589793}]},
                  
                  ImageSizeCache->{{16.585786437626904`, 
                   91.41421356237309}, {-66.76804263485268, \
-1.5857864376269113`}}],
                 StatusArea[#, 1]& ,
                 TagBoxNote->"1"],
                StyleBox["1", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]],
               Annotation[#, 
                Style[1, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9345$9420, 
                  FEPrivate`Not[DynamicChart`click$9345$9420]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             If[DynamicChart`click$9345$9420, {{{1., 0}, {
                 0, 1.}}, {-0.17320508075688776`, 0.09999999999999999}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$9345$9420}]]}, 
           {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{GrayLevel[
            0], Opacity[0.5]}], GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                   DiskBox[{0, 0}, 1., {0., 2.0943951023931957`}]},
                  
                  ImageSizeCache->{{52.58578643762688, 
                   163.4142135623731}, {-76.4142135623731, \
-1.5857864376268935`}}],
                 StatusArea[#, 2]& ,
                 TagBoxNote->"2"],
                StyleBox["2", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]],
               Annotation[#, 
                Style[2, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9349$9420, 
                  FEPrivate`Not[DynamicChart`click$9349$9420]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             If[DynamicChart`click$9349$9420, {{{1., 0}, {0, 1.}}, {
                0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$9349$9420}]]}, 
           {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
            Opacity[0.5]}], GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                   DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                  ImageSizeCache->{{16.585786437626894`, 
                   163.41421356237308`}, {-4.4142135623731065`, 
                   70.4142135623731}}],
                 StatusArea[#, 3]& ,
                 TagBoxNote->"3"],
                StyleBox["3", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]],
               Annotation[#, 
                Style[3, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9353$9420, 
                  FEPrivate`Not[DynamicChart`click$9353$9420]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             If[DynamicChart`click$9353$9420, {{{1., 0}, {0, 1.}}, {
                1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {
               0, 1}}], 
              TrackedSymbols :> {
               DynamicChart`click$9353$9420}]]}}}, {}}, {}}, {{{
          GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[{{}, {}},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9345$9420, 
                FEPrivate`Not[DynamicChart`click$9345$9420]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
           If[DynamicChart`click$9345$9420, {{{1., 0}, {
               0, 1.}}, {-0.17320508075688776`, 0.09999999999999999}}, {{1, 
             0}, {0, 1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$9345$9420}]], 
          GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[{{}, {}},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9349$9420, 
                FEPrivate`Not[DynamicChart`click$9349$9420]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
           If[DynamicChart`click$9349$9420, {{{1., 0}, {0, 1.}}, {
              0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
             1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$9349$9420}]], 
          GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[{{}, {}},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9353$9420, 
                FEPrivate`Not[DynamicChart`click$9353$9420]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
           If[DynamicChart`click$9353$9420, {{{1., 0}, {0, 1.}}, {
              1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {0,
              1}}], TrackedSymbols :> {
             DynamicChart`click$9353$9420}]]}, {}}, {}}},
      DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
    ContentSelectable->False,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    LabelStyle->{
      GrayLevel[0], FontFamily -> "Arial"},
    PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}},
    PlotRangePadding->Scaled[0.02]], ",", 
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{DynamicChart`click$9390$9421 = False, 
      DynamicChart`click$9394$9421 = False, DynamicChart`click$9398$9421 = 
      False}, {
       {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.5]}], {{{}, {
           {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[0], 
            Opacity[0.5]}], GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   DiskBox[{0, 0}, 1., {2.0943951023931957`, 
                    3.141592653589793}]},
                  
                  ImageSizeCache->{{16.585786437626904`, 
                   91.41421356237309}, {-66.76804263485268, \
-1.5857864376269113`}}],
                 StatusArea[#, 1]& ,
                 TagBoxNote->"1"],
                StyleBox["1", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]],
               Annotation[#, 
                Style[1, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9390$9421, 
                  FEPrivate`Not[DynamicChart`click$9390$9421]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             If[DynamicChart`click$9390$9421, {{{1., 0}, {
                 0, 1.}}, {-0.17320508075688776`, 0.09999999999999999}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$9390$9421}]]}, 
           {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{GrayLevel[
            0], Opacity[0.5]}], GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                   DiskBox[{0, 0}, 1., {0., 2.0943951023931957`}]},
                  
                  ImageSizeCache->{{52.58578643762688, 
                   163.4142135623731}, {-76.4142135623731, \
-1.5857864376268935`}}],
                 StatusArea[#, 2]& ,
                 TagBoxNote->"2"],
                StyleBox["2", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]],
               Annotation[#, 
                Style[2, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9394$9421, 
                  FEPrivate`Not[DynamicChart`click$9394$9421]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             If[DynamicChart`click$9394$9421, {{{1., 0}, {0, 1.}}, {
                0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$9394$9421}]]}, 
           {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
            Opacity[0.5]}], GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                   DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                  ImageSizeCache->{{16.585786437626894`, 
                   163.41421356237308`}, {-4.4142135623731065`, 
                   70.4142135623731}}],
                 StatusArea[#, 3]& ,
                 TagBoxNote->"3"],
                StyleBox["3", {
                  GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                 False]],
               Annotation[#, 
                Style[3, {
                  GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9398$9421, 
                  FEPrivate`Not[DynamicChart`click$9398$9421]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             If[DynamicChart`click$9398$9421, {{{1., 0}, {0, 1.}}, {
                1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {
               0, 1}}], 
              TrackedSymbols :> {
               DynamicChart`click$9398$9421}]]}}}, {}}, {}}, {{{
          GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[{{}, {}},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9390$9421, 
                FEPrivate`Not[DynamicChart`click$9390$9421]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
           If[DynamicChart`click$9390$9421, {{{1., 0}, {
               0, 1.}}, {-0.17320508075688776`, 0.09999999999999999}}, {{1, 
             0}, {0, 1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$9390$9421}]], 
          GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[{{}, {}},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9394$9421, 
                FEPrivate`Not[DynamicChart`click$9394$9421]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
           If[DynamicChart`click$9394$9421, {{{1., 0}, {0, 1.}}, {
              0.09999999999999998, 0.17320508075688776`}}, {{1, 0}, {0, 
             1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$9394$9421}]], 
          GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[{{}, {}},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {
                GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {
                GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$9398$9421, 
                FEPrivate`Not[DynamicChart`click$9398$9421]], PassEventsDown -> 
              True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
           If[DynamicChart`click$9398$9421, {{{1., 0}, {0, 1.}}, {
              1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {0,
              1}}], TrackedSymbols :> {
             DynamicChart`click$9398$9421}]]}, {}}, {}}},
      DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
    ContentSelectable->False,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    LabelStyle->{
      GrayLevel[0], FontFamily -> "Arial"},
    PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}},
    PlotRangePadding->Scaled[0.02]]}], "}"}]], "Output",
 CellChangeTimes->{3.7173326023605137`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{"Range", "[", "n", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7173326090952673`*^9, 3.7173326244645495`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"1"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"},
      {"4"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"},
      {"4"},
      {"5"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"},
      {"4"},
      {"5"},
      {"6"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"},
      {"4"},
      {"5"},
      {"6"},
      {"7"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"},
      {"4"},
      {"5"},
      {"6"},
      {"7"},
      {"8"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"},
      {"4"},
      {"5"},
      {"6"},
      {"7"},
      {"8"},
      {"9"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"},
      {"4"},
      {"5"},
      {"6"},
      {"7"},
      {"8"},
      {"9"},
      {"10"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{3.7173326249614573`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Range", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.717332631179677*^9, 3.717332645156386*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
     "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.717332645753175*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"x", "-", 
    RowBox[{"x", "^", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1", ",", ".02"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.71733272865806*^9, 3.7173327452195997`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.0196`", ",", "0.038400000000000004`", ",", "0.0564`", ",", 
   "0.0736`", ",", "0.09`", ",", "0.1056`", ",", "0.12040000000000001`", ",", 
   "0.1344`", ",", "0.1476`", ",", "0.16`", ",", "0.1716`", ",", "0.1824`", 
   ",", "0.19240000000000002`", ",", "0.2016`", ",", "0.21`", ",", 
   "0.21760000000000002`", ",", "0.2244`", ",", "0.2304`", ",", "0.2356`", 
   ",", "0.24`", ",", "0.2436`", ",", "0.2464`", ",", "0.2484`", ",", 
   "0.2496`", ",", "0.25`", ",", "0.2496`", ",", "0.2484`", ",", "0.2464`", 
   ",", "0.24359999999999998`", ",", "0.24`", ",", "0.23559999999999998`", 
   ",", "0.2304`", ",", "0.2244`", ",", "0.21759999999999996`", ",", 
   "0.20999999999999996`", ",", "0.2016`", ",", "0.19240000000000002`", ",", 
   "0.1824`", ",", "0.17159999999999997`", ",", "0.15999999999999992`", ",", 
   "0.14759999999999995`", ",", "0.13440000000000007`", ",", 
   "0.12040000000000006`", ",", "0.10560000000000003`", ",", 
   "0.08999999999999997`", ",", "0.0736`", ",", "0.056399999999999895`", ",", 
   "0.03839999999999999`", ",", "0.019600000000000062`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.717332745989473*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7173327530180454`*^9, 3.717332759705132*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQDQEf7BlQgUPeYsY9rEJToOIcDklGoQZaKxdD+QIO
/xX/fit9sAbKF3HwCPgjUXx9E5Qv4cB1fXGBLdd2KF/GwU21lGkWx24oX8Hh
j1XBuY5L+6B8JQfRHq9XLCYHoXwVh6x7hV19Tw5B+WoO1SLr3B9WHYHyNRw8
9UAuOArlazlc0U6VfBRxHMrXcZDhfaA7YcEJKF/PQeFSfjz7uZNQvoHDwyqQ
gaegfEOHBPZzkoG3TkP5Rg6zyucsUt55Bso3dph0ut5jf+1ZKN/EwZ25gltF
4xyUb+qwQ671deAOGN/M4bns8hceeuehfHOHSwz3mDi7YHwLh6rjmlaTTsP4
lg5g736C8a0cIPQFKN8aTd4GTb8tmvl2Ds9Q7LdHc5+Dgxuy+xsc0PzniOr/
BkeHOJTwcXJ4gBx+DU5o4euMGv4Nzmjx4+LggRx/DS4OFSjx6+qQgRz/Da4O
Eijpw82BwRop/TS4OXigpC93Bw7k9NfgjpY+PRw+IKffBg+HBJT07enQgJz+
Gzyh8cHAAACX7tbh
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 51.}, {0, 0.25}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7173327606319313`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"x", "/", 
    RowBox[{"(", 
     RowBox[{"x", "+", "1"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10", ",", ".1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.717332772533045*^9, 3.7173327884181595`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.09090909090909091`", ",", "0.16666666666666669`", ",", 
   "0.23076923076923078`", ",", "0.28571428571428575`", ",", 
   "0.3333333333333333`", ",", "0.37500000000000006`", ",", 
   "0.4117647058823529`", ",", "0.4444444444444445`", ",", 
   "0.47368421052631576`", ",", "0.5`", ",", "0.5238095238095238`", ",", 
   "0.5454545454545455`", ",", "0.5652173913043479`", ",", 
   "0.5833333333333334`", ",", "0.6000000000000001`", ",", 
   "0.6153846153846154`", ",", "0.6296296296296297`", ",", 
   "0.6428571428571429`", ",", "0.6551724137931034`", ",", 
   "0.6666666666666666`", ",", "0.6774193548387097`", ",", "0.6875`", ",", 
   "0.6969696969696969`", ",", "0.7058823529411765`", ",", 
   "0.7142857142857142`", ",", "0.7222222222222223`", ",", 
   "0.7297297297297297`", ",", "0.736842105263158`", ",", 
   "0.7435897435897436`", ",", "0.75`", ",", "0.7560975609756099`", ",", 
   "0.7619047619047619`", ",", "0.7674418604651162`", ",", 
   "0.7727272727272728`", ",", "0.7777777777777777`", ",", 
   "0.7826086956521741`", ",", "0.7872340425531915`", ",", 
   "0.7916666666666666`", ",", "0.7959183673469388`", ",", "0.8`", ",", 
   "0.803921568627451`", ",", "0.8076923076923077`", ",", 
   "0.8113207547169812`", ",", "0.8148148148148149`", ",", 
   "0.8181818181818182`", ",", "0.8214285714285714`", ",", 
   "0.8245614035087719`", ",", "0.8275862068965518`", ",", 
   "0.8305084745762712`", ",", "0.8333333333333333`", ",", 
   "0.8360655737704918`", ",", "0.8387096774193549`", ",", 
   "0.8412698412698414`", ",", "0.84375`", ",", "0.8461538461538463`", ",", 
   "0.8484848484848484`", ",", "0.8507462686567163`", ",", 
   "0.8529411764705882`", ",", "0.8550724637681161`", ",", 
   "0.8571428571428571`", ",", "0.8591549295774648`", ",", 
   "0.8611111111111112`", ",", "0.863013698630137`", ",", 
   "0.8648648648648648`", ",", "0.8666666666666667`", ",", 
   "0.868421052631579`", ",", "0.8701298701298701`", ",", 
   "0.8717948717948718`", ",", "0.8734177215189872`", ",", "0.875`", ",", 
   "0.8765432098765431`", ",", "0.878048780487805`", ",", 
   "0.8795180722891566`", ",", "0.8809523809523809`", ",", 
   "0.8823529411764706`", ",", "0.883720930232558`", ",", 
   "0.885057471264368`", ",", "0.8863636363636365`", ",", 
   "0.8876404494382023`", ",", "0.8888888888888888`", ",", 
   "0.8901098901098901`", ",", "0.8913043478260869`", ",", 
   "0.8924731182795699`", ",", "0.8936170212765958`", ",", 
   "0.894736842105263`", ",", "0.8958333333333334`", ",", 
   "0.8969072164948454`", ",", "0.8979591836734694`", ",", 
   "0.898989898989899`", ",", "0.9`", ",", "0.900990099009901`", ",", 
   "0.9019607843137255`", ",", "0.9029126213592233`", ",", 
   "0.9038461538461539`", ",", "0.9047619047619047`", ",", 
   "0.9056603773584906`", ",", "0.9065420560747665`", ",", 
   "0.9074074074074074`", ",", "0.908256880733945`", ",", 
   "0.9090909090909092`"}], "}"}]], "Output",
 CellChangeTimes->{3.71733278900983*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.717332790921986*^9, 3.7173327954315863`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxVlWtME1kYhhFj1AUTL92VNBjlGlxRWxFFKfJaKYhAKYVe8IIKGKNoFMEr
xDSoRLyAASN1VzSazZp1dzFqECnVUAFBUVw2u4rXqFBvUBVINMY/zhm/74dv
TjN5+s6Tzpw5cxqQvcm4xtvLy2uN9BHHb/kQ6/V9ED9xRWGXrp6+HwWzSaSV
eCxOdpfVdJfdIVagKjixMjjxX2I/yKeb/if2xzD52E08BUvlPCQOxKS2fP+2
/MfEwRjjjjx63/CUOBTfjs+Iw6D2bVb5NjP/jK1dOumKnxOHI9Ans1370wvi
GfjznAizCrMjRHqI1VBEX5gQfYF5FlZqi0Z7QnqJIxAibq+SeTaub0kNCv/E
HEn36yaeg9q6e0vz/maeS9f/kjgKKXMe5FalMM9D9TER5vm4vPGRNJij0S6m
x/8VsQantu6ZOpjJHIO4nWLGmBfgSnFHfXEHcyz9/mtiICJq8p4hNbEN8Ctd
LQ3uFyLo3f7oF+XcL0Tj6zMHZzi41yKqvEca3GtRuS88N8DnDfWL4P4he8sI
NbFtEc0P93HI0rs6pu7gPg6/HBfhXgdHgwj3OhyoEQuO+3jErS8ZMH/kPh6q
01f3fhz/lvoEzHSICya2JaBSXp/cL8b03y/ZO7O5X4zshrPjjhVxn4jbOdNK
Squ4T4S8fM5xvwSdXxTVvi7ul+C+9LTr7nGfBGdtn6O2j/skmv8+6pOhEctt
ArEtGaG/brh4M5T7FFhyAmMM87hPQZIc7vWoH17gaVrOvR6P5AXDfSpubKre
NWs396nolR8Y9wY8aSh41VlDDAPuOlyKz3/x+QY4G0WImww44ywdVN5iPw3r
V723K7vZT8Pya+5l19zsp8G9ve7K6CH20+j++8k3ojBvt/U3X2IYoTxR4frs
R2wzwhNQ/ePwEOImI+TXXcV+OjRy2E/HuO0tk/IT2E+HNrTVJ9fIfjqyCsUG
wX4G2iJODhxay34G/OX9h/0MONuKpMF+BqTN5OKRfeybUKEZbA+qYN+EghHq
hhI7+yYob+WFnT/Nvon2H/bNiClLbt52iX0zZp595lY42TdDOX5oW2kL+2bc
uS3CvgUDh8NUb/5j34Inj0XYt8CuK/b+o5d9C1r1/S36fvat0Nwdkgb7VgRG
unZM+8K+FTm6dcW53h7yrbD/kyV2RPIzMbKrp3HzWGJkwk/8XUz0xH4F2UTV
Bg==
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 101.}, {0, 0.9090909090909092}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.717332795860544*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.7173328459564843`*^9, 3.717332857688514*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7173328585644164`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.7173328620364685`*^9, 3.7173328673211546`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.717332867609723*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prime", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.717333135259435*^9, 3.717333139140334*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Prime","intpp",
   "\"Positive integer argument expected in \\!\\(\\*RowBox[{\\\"Prime\\\", \
\\\"[\\\", \\\"0\\\", \\\"]\\\"}]\\).\"",2,33,3,26884577711389393573,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.717333139401225*^9}],

Cell[BoxData[
 RowBox[{"Prime", "[", "0", "]"}]], "Output",
 CellChangeTimes->{3.717333139402728*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prime", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.7173331433805876`*^9, 3.7173331456438537`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.717333146494028*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.717333634344911*^9, 3.7173336410150514`*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.717333641379921*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"1", ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.7173336449566965`*^9, 3.7173336512425165`*^9}, {
  3.717333781515438*^9, 3.7173337886233916`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", \\\"n\\\", \\\"}\\\"}]\\) does not \
have appropriate bounds.\"",2,36,4,26884577711389393573,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7173337896788826`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Table","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", \\\"n\\\", \\\"}\\\"}]\\) does not \
have appropriate bounds.\"",2,36,5,26884577711389393573,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.717333789698126*^9}],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"1", ",", 
   RowBox[{"{", "n", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7173337897001095`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{"1", ",", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7173337924379683`*^9, 3.717333801891405*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7173338022528734`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"PieChart", "[", 
     RowBox[{"Table", "[", 
      RowBox[{"1", ",", "n"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7173338076415453`*^9, 3.7173338201101303`*^9}, {
  3.7173338578438807`*^9, 3.7173338842412987`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{DynamicChart`click$12985$13570 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$12985$13570, 
                    FEPrivate`Not[DynamicChart`click$12985$13570]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$12985$13570, {{{1., 0}, {0, 1.}}, {
                   0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$12985$13570}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$12985$13570, 
                 FEPrivate`Not[DynamicChart`click$12985$13570]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$12985$13570, {{{1., 0}, {0, 1.}}, {
               0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$12985$13570}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, 
     PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
     Scaled[0.02]}],GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$13018$13571 = False, DynamicChart`click$13022$13571 = 
       False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13018$13571, 
                    FEPrivate`Not[DynamicChart`click$13018$13571]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13018$13571, {{{1., 0}, {0, 1.}}, {
                   1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                  0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13018$13571}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13022$13571, 
                    FEPrivate`Not[DynamicChart`click$13022$13571]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13022$13571, {{{1., 0}, {0, 1.}}, {
                   1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                  0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$13022$13571}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13018$13571, 
                 FEPrivate`Not[DynamicChart`click$13018$13571]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13018$13571, {{{1., 0}, {0, 1.}}, {
               1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {0,
               1}}], TrackedSymbols :> {DynamicChart`click$13018$13571}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13022$13571, 
                 FEPrivate`Not[DynamicChart`click$13022$13571]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13022$13571, {{{1., 0}, {0, 1.}}, {
               1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {
              0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$13022$13571}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, 
     PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
     Scaled[0.02]}],GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$13057$13572 = False, DynamicChart`click$13061$13572 = 
       False, DynamicChart`click$13065$13572 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13057$13572, 
                    FEPrivate`Not[DynamicChart`click$13057$13572]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13057$13572, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 
                   0.17320508075688773`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                  1}}], TrackedSymbols :> {
                  DynamicChart`click$13057$13572}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 
                    1.0471975511965979`}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13061$13572, 
                    FEPrivate`Not[DynamicChart`click$13061$13572]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13061$13572, {{{1., 0}, {0, 1.}}, {0.2, 
                   4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                  1}}], TrackedSymbols :> {
                  DynamicChart`click$13061$13572}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13065$13572, 
                    FEPrivate`Not[DynamicChart`click$13065$13572]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13065$13572, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$13065$13572}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13057$13572, 
                 FEPrivate`Not[DynamicChart`click$13057$13572]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13057$13572, {{{1., 0}, {
                0, 1.}}, {-0.10000000000000005`, 0.17320508075688773`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13057$13572}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13061$13572, 
                 FEPrivate`Not[DynamicChart`click$13061$13572]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13061$13572, {{{1., 0}, {0, 1.}}, {0.2, 
               4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
              1}}], TrackedSymbols :> {DynamicChart`click$13061$13572}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13065$13572, 
                 FEPrivate`Not[DynamicChart`click$13065$13572]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13065$13572, {{{1., 0}, {
                0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$13065$13572}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, 
     PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
     Scaled[0.02]}],GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$13102$13573 = False, DynamicChart`click$13106$13573 = 
       False, DynamicChart`click$13110$13573 = False, 
       DynamicChart`click$13114$13573 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13102$13573, 
                    FEPrivate`Not[DynamicChart`click$13102$13573]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13102$13573, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13102$13573}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.5707963267948966`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13106$13573, 
                    FEPrivate`Not[DynamicChart`click$13106$13573]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13106$13573, {{{1., 0}, {0, 1.}}, {
                   0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13106$13573}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-1.5707963267948966`, 0.}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13110$13573, 
                    FEPrivate`Not[DynamicChart`click$13110$13573]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13110$13573, {{{1., 0}, {0, 1.}}, {
                   0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13110$13573}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5707963267948966`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13114$13573, 
                    FEPrivate`Not[DynamicChart`click$13114$13573]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13114$13573, {{{1., 0}, {
                    0, 1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$13114$13573}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13102$13573, 
                 FEPrivate`Not[DynamicChart`click$13102$13573]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13102$13573, {{{1., 0}, {
                0, 1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13102$13573}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13106$13573, 
                 FEPrivate`Not[DynamicChart`click$13106$13573]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13106$13573, {{{1., 0}, {0, 1.}}, {
               0.14142135623730953`, 0.14142135623730953`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13106$13573}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13110$13573, 
                 FEPrivate`Not[DynamicChart`click$13110$13573]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13110$13573, {{{1., 0}, {0, 1.}}, {
               0.14142135623730953`, -0.14142135623730953`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13110$13573}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13114$13573, 
                 FEPrivate`Not[DynamicChart`click$13114$13573]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13114$13573, {{{1., 0}, {
                0, 1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$13114$13573}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, 
     PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
     Scaled[0.02]}],GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$13153$13574 = False, DynamicChart`click$13157$13574 = 
       False, DynamicChart`click$13161$13574 = False, 
       DynamicChart`click$13165$13574 = False, DynamicChart`click$13169$13574 = 
       False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.8849555921538759`, 
                    3.141592653589793}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13153$13574, 
                    FEPrivate`Not[DynamicChart`click$13153$13574]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13153$13574, {{{1., 0}, {
                    0, 1.}}, {-0.16180339887498948`, 
                   0.11755705045849466`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                  1}}], TrackedSymbols :> {
                  DynamicChart`click$13153$13574}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6283185307179586, 
                    1.8849555921538759`}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13157$13574, 
                    FEPrivate`Not[DynamicChart`click$13157$13574]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13157$13574, {{{1., 0}, {0, 1.}}, {
                   0.06180339887498949, 0.1902113032590307}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13157$13574}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179591, 
                    0.6283185307179586}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13161$13574, 
                    FEPrivate`Not[DynamicChart`click$13161$13574]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13161$13574, {{{1., 0}, {0, 1.}}, {
                   0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 
                  0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13161$13574}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 
                    1., {-1.8849555921538759`, -0.6283185307179591}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13165$13574, 
                    FEPrivate`Not[DynamicChart`click$13165$13574]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13165$13574, {{{1., 0}, {0, 1.}}, {
                   0.06180339887498946, -0.19021130325903074`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13165$13574}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.8849555921538759`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13169$13574, 
                    FEPrivate`Not[DynamicChart`click$13169$13574]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13169$13574, {{{1., 0}, {
                    0, 1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$13169$13574}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13153$13574, 
                 FEPrivate`Not[DynamicChart`click$13153$13574]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13153$13574, {{{1., 0}, {
                0, 1.}}, {-0.16180339887498948`, 0.11755705045849466`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13153$13574}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13157$13574, 
                 FEPrivate`Not[DynamicChart`click$13157$13574]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13157$13574, {{{1., 0}, {0, 1.}}, {
               0.06180339887498949, 0.1902113032590307}}, {{1, 0}, {0, 1}}, {{
              1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13157$13574}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13161$13574, 
                 FEPrivate`Not[DynamicChart`click$13161$13574]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13161$13574, {{{1., 0}, {0, 1.}}, {
               0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {
              0, 1}}], TrackedSymbols :> {DynamicChart`click$13161$13574}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13165$13574, 
                 FEPrivate`Not[DynamicChart`click$13165$13574]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13165$13574, {{{1., 0}, {0, 1.}}, {
               0.06180339887498946, -0.19021130325903074`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13165$13574}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13169$13574, 
                 FEPrivate`Not[DynamicChart`click$13169$13574]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13169$13574, {{{1., 0}, {
                0, 1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$13169$13574}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, 
     PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
     Scaled[0.02]}],GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$13210$13575 = False, DynamicChart`click$13214$13575 = 
       False, DynamicChart`click$13218$13575 = False, 
       DynamicChart`click$13222$13575 = False, DynamicChart`click$13226$13575 = 
       False, DynamicChart`click$13230$13575 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.0943951023931957`, 
                    3.141592653589793}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13210$13575, 
                    FEPrivate`Not[DynamicChart`click$13210$13575]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13210$13575, {{{1., 0}, {
                    0, 1.}}, {-0.17320508075688776`, 0.09999999999999999}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13210$13575}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.9965728, 0.58382944, 0.22525344]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    2.0943951023931957`}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13214$13575, 
                    FEPrivate`Not[DynamicChart`click$13214$13575]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13214$13575, {{{1., 0}, {
                    0, 1.}}, {-3.2162452993532734`*^-17, 0.2}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13214$13575}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8704000000000001, 0.50272, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.0471975511965979`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13218$13575, 
                    FEPrivate`Not[DynamicChart`click$13218$13575]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13218$13575, {{{1., 0}, {0, 1.}}, {
                   0.17320508075688773`, 0.1}}, {{1, 0}, {0, 1}}, {{1, 0}, {0,
                   1}}], TrackedSymbols :> {
                  DynamicChart`click$13218$13575}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 0.}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13222$13575, 
                    FEPrivate`Not[DynamicChart`click$13222$13575]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13222$13575, {{{1., 0}, {0, 1.}}, {
                   0.17320508075688776`, -0.09999999999999998}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13222$13575}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.094395102393195, -1.0471975511965974`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13226$13575, 
                    FEPrivate`Not[DynamicChart`click$13226$13575]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13226$13575, {{{1., 0}, {0, 1.}}, {
                   1.0106430996148606`*^-16, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                  0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13226$13575}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.094395102393195}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13230$13575, 
                    FEPrivate`Not[DynamicChart`click$13230$13575]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13230$13575, {{{1., 0}, {
                    0, 1.}}, {-0.1732050807568877, -0.10000000000000007`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$13230$13575}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13210$13575, 
                 FEPrivate`Not[DynamicChart`click$13210$13575]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13210$13575, {{{1., 0}, {
                0, 1.}}, {-0.17320508075688776`, 0.09999999999999999}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13210$13575}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13214$13575, 
                 FEPrivate`Not[DynamicChart`click$13214$13575]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13214$13575, {{{1., 0}, {
                0, 1.}}, {-3.2162452993532734`*^-17, 0.2}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13214$13575}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13218$13575, 
                 FEPrivate`Not[DynamicChart`click$13218$13575]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13218$13575, {{{1., 0}, {0, 1.}}, {
               0.17320508075688773`, 0.1}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
              1}}], TrackedSymbols :> {DynamicChart`click$13218$13575}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13222$13575, 
                 FEPrivate`Not[DynamicChart`click$13222$13575]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13222$13575, {{{1., 0}, {0, 1.}}, {
               0.17320508075688776`, -0.09999999999999998}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13222$13575}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13226$13575, 
                 FEPrivate`Not[DynamicChart`click$13226$13575]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13226$13575, {{{1., 0}, {0, 1.}}, {
               1.0106430996148606`*^-16, -0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {
              0, 1}}], TrackedSymbols :> {DynamicChart`click$13226$13575}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13230$13575, 
                 FEPrivate`Not[DynamicChart`click$13230$13575]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13230$13575, {{{1., 0}, {
                0, 1.}}, {-0.1732050807568877, -0.10000000000000007`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$13230$13575}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, 
     PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
     Scaled[0.02]}],GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$13273$13576 = False, DynamicChart`click$13277$13576 = 
       False, DynamicChart`click$13281$13576 = False, 
       DynamicChart`click$13285$13576 = False, DynamicChart`click$13289$13576 = 
       False, DynamicChart`click$13293$13576 = False, 
       DynamicChart`click$13297$13576 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.243994752564138, 
                    3.141592653589793}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13273$13576, 
                    FEPrivate`Not[DynamicChart`click$13273$13576]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13273$13576, {{{1., 0}, {
                    0, 1.}}, {-0.18019377358048383`, 0.08677674782351165}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13273$13576}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.994288, 0.6103824, 0.24208906666666669`]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.3463968515384828`, 
                    2.243994752564138}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13277$13576, 
                    FEPrivate`Not[DynamicChart`click$13277$13576]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13277$13576, {{{1., 0}, {
                    0, 1.}}, {-0.04450418679126287, 0.19498558243636474`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13277$13576}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.4487989505128276, 
                    1.3463968515384828`}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13281$13576, 
                    FEPrivate`Not[DynamicChart`click$13281$13576]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13281$13576, {{{1., 0}, {0, 1.}}, {
                   0.12469796037174673`, 0.15636629649360598`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13281$13576}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.4487989505128276, 
                    0.4487989505128276}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13285$13576, 
                    FEPrivate`Not[DynamicChart`click$13285$13576]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13285$13576, {{{1., 0}, {0, 1.}}, {
                   0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13285$13576}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.3463968515384819`, -0.4487989505128276}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13289$13576, 
                    FEPrivate`Not[DynamicChart`click$13289$13576]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13289$13576, {{{1., 0}, {0, 1.}}, {
                   0.1246979603717468, -0.1563662964936059}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13289$13576}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6167072, 0.5082666666666666, 0.7586295999999999]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.243994752564138, -1.3463968515384819`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13293$13576, 
                    FEPrivate`Not[DynamicChart`click$13293$13576]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13293$13576, {{{1., 0}, {
                    0, 1.}}, {-0.04450418679126278, -0.19498558243636477`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13293$13576}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.243994752564138}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13297$13576, 
                    FEPrivate`Not[DynamicChart`click$13297$13576]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13297$13576, {{{1., 0}, {
                    0, 1.}}, {-0.18019377358048383`, -0.08677674782351165}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$13297$13576}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13273$13576, 
                 FEPrivate`Not[DynamicChart`click$13273$13576]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13273$13576, {{{1., 0}, {
                0, 1.}}, {-0.18019377358048383`, 0.08677674782351165}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13273$13576}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13277$13576, 
                 FEPrivate`Not[DynamicChart`click$13277$13576]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13277$13576, {{{1., 0}, {
                0, 1.}}, {-0.04450418679126287, 0.19498558243636474`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13277$13576}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13281$13576, 
                 FEPrivate`Not[DynamicChart`click$13281$13576]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13281$13576, {{{1., 0}, {0, 1.}}, {
               0.12469796037174673`, 0.15636629649360598`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13281$13576}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13285$13576, 
                 FEPrivate`Not[DynamicChart`click$13285$13576]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13285$13576, {{{1., 0}, {0, 1.}}, {
               0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13285$13576}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13289$13576, 
                 FEPrivate`Not[DynamicChart`click$13289$13576]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13289$13576, {{{1., 0}, {0, 1.}}, {
               0.1246979603717468, -0.1563662964936059}}, {{1, 0}, {0, 1}}, {{
              1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13289$13576}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13293$13576, 
                 FEPrivate`Not[DynamicChart`click$13293$13576]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13293$13576, {{{1., 0}, {
                0, 1.}}, {-0.04450418679126278, -0.19498558243636477`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13293$13576}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13297$13576, 
                 FEPrivate`Not[DynamicChart`click$13297$13576]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13297$13576, {{{1., 0}, {
                0, 1.}}, {-0.18019377358048383`, -0.08677674782351165}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$13297$13576}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, 
     PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
     Scaled[0.02]}],GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$13342$13577 = False, DynamicChart`click$13346$13577 = 
       False, DynamicChart`click$13350$13577 = False, 
       DynamicChart`click$13354$13577 = False, DynamicChart`click$13358$13577 = 
       False, DynamicChart`click$13362$13577 = False, 
       DynamicChart`click$13366$13577 = False, DynamicChart`click$13370$13577 = 
       False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.356194490192345, 
                    3.141592653589793}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13342$13577, 
                    FEPrivate`Not[DynamicChart`click$13342$13577]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13342$13577, {{{1., 0}, {
                    0, 1.}}, {-0.18477590650225736`, 0.07653668647301798}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13342$13577}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.992656, 0.6293488, 0.2541145142857143]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    2.356194490192345}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13346$13577, 
                    FEPrivate`Not[DynamicChart`click$13346$13577]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13346$13577, {{{1., 0}, {
                    0, 1.}}, {-0.07653668647301795, 0.18477590650225736`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13346$13577}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.9691428571428572, 0.5341714285714286, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.7853981633974483, 
                    1.5707963267948966`}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13350$13577, 
                    FEPrivate`Not[DynamicChart`click$13350$13577]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13350$13577, {{{1., 0}, {0, 1.}}, {
                   0.07653668647301798, 0.18477590650225736`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13350$13577}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8457142857142858, 0.49485714285714283`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 0.7853981633974483}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13354$13577, 
                    FEPrivate`Not[DynamicChart`click$13354$13577]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13354$13577, {{{1., 0}, {0, 1.}}, {
                   0.18477590650225736`, 0.07653668647301796}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13354$13577}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.7529888, 0.4779428571428571, 0.34927977142857136`]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-0.7853981633974483, 0.}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13358$13577, 
                    FEPrivate`Not[DynamicChart`click$13358$13577]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13358$13577, {{{1., 0}, {0, 1.}}, {
                   0.18477590650225736`, -0.07653668647301796}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13358$13577}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.6909664, 0.48342857142857143`, 0.6478393142857142]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.5707963267948966`, -0.7853981633974483}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13362$13577, 
                    FEPrivate`Not[DynamicChart`click$13362$13577]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13362$13577, {{{1., 0}, {0, 1.}}, {
                   0.07653668647301798, -0.18477590650225736`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13362$13577}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.5999204571428571, 0.5149714285714285, 0.7689582857142857]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.356194490192345, -1.5707963267948966`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13366$13577, 
                    FEPrivate`Not[DynamicChart`click$13366$13577]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13366$13577, {{{1., 0}, {
                    0, 1.}}, {-0.07653668647301795, -0.18477590650225736`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13366$13577}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.356194490192345}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13370$13577, 
                    FEPrivate`Not[DynamicChart`click$13370$13577]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13370$13577, {{{1., 0}, {
                    0, 1.}}, {-0.18477590650225736`, -0.07653668647301798}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$13370$13577}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13342$13577, 
                 FEPrivate`Not[DynamicChart`click$13342$13577]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13342$13577, {{{1., 0}, {
                0, 1.}}, {-0.18477590650225736`, 0.07653668647301798}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13342$13577}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13346$13577, 
                 FEPrivate`Not[DynamicChart`click$13346$13577]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13346$13577, {{{1., 0}, {
                0, 1.}}, {-0.07653668647301795, 0.18477590650225736`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13346$13577}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13350$13577, 
                 FEPrivate`Not[DynamicChart`click$13350$13577]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13350$13577, {{{1., 0}, {0, 1.}}, {
               0.07653668647301798, 0.18477590650225736`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13350$13577}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13354$13577, 
                 FEPrivate`Not[DynamicChart`click$13354$13577]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13354$13577, {{{1., 0}, {0, 1.}}, {
               0.18477590650225736`, 0.07653668647301796}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13354$13577}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13358$13577, 
                 FEPrivate`Not[DynamicChart`click$13358$13577]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13358$13577, {{{1., 0}, {0, 1.}}, {
               0.18477590650225736`, -0.07653668647301796}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13358$13577}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13362$13577, 
                 FEPrivate`Not[DynamicChart`click$13362$13577]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13362$13577, {{{1., 0}, {0, 1.}}, {
               0.07653668647301798, -0.18477590650225736`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13362$13577}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13366$13577, 
                 FEPrivate`Not[DynamicChart`click$13366$13577]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13366$13577, {{{1., 0}, {
                0, 1.}}, {-0.07653668647301795, -0.18477590650225736`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13366$13577}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13370$13577, 
                 FEPrivate`Not[DynamicChart`click$13370$13577]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13370$13577, {{{1., 0}, {
                0, 1.}}, {-0.18477590650225736`, -0.07653668647301798}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$13370$13577}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, 
     PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
     Scaled[0.02]}],GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$13417$13578 = False, DynamicChart`click$13421$13578 = 
       False, DynamicChart`click$13425$13578 = False, 
       DynamicChart`click$13429$13578 = False, DynamicChart`click$13433$13578 = 
       False, DynamicChart`click$13437$13578 = False, 
       DynamicChart`click$13441$13578 = False, DynamicChart`click$13445$13578 = 
       False, DynamicChart`click$13449$13578 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.443460952792061, 
                    3.141592653589793}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13417$13578, 
                    FEPrivate`Not[DynamicChart`click$13417$13578]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13417$13578, {{{1., 0}, {
                    0, 1.}}, {-0.18793852415718168`, 0.06840402866513377}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13417$13578}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.991432, 0.6435736000000001, 0.26313359999999997`]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.7453292519943295`, 
                    2.443460952792061}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13421$13578, 
                    FEPrivate`Not[DynamicChart`click$13421$13578]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13421$13578, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, 0.17320508075688776`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13421$13578}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    1.7453292519943295`}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13425$13578, 
                    FEPrivate`Not[DynamicChart`click$13425$13578]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13425$13578, {{{1., 0}, {0, 1.}}, {
                   0.034729635533386045`, 0.19696155060244164`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13425$13578}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.892, 0.5096, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.34906585039886595`, 
                    1.0471975511965979`}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13429$13578, 
                    FEPrivate`Not[DynamicChart`click$13429$13578]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13429$13578, {{{1., 0}, {0, 1.}}, {
                   0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13429$13578}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.34906585039886595`, 
                    0.34906585039886595`}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13433$13578, 
                    FEPrivate`Not[DynamicChart`click$13433$13578]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13433$13578, {{{1., 0}, {0, 1.}}, {
                   0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13433$13578}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7297304, 0.48, 0.4612396]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.0471975511965974`, -0.34906585039886595`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13437$13578, 
                    FEPrivate`Not[DynamicChart`click$13437$13578]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13437$13578, {{{1., 0}, {0, 1.}}, {
                   0.15320888862379564`, -0.12855752193730785`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13437$13578}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.7453292519943293`, -1.0471975511965974`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13441$13578, 
                    FEPrivate`Not[DynamicChart`click$13441$13578]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13441$13578, {{{1., 0}, {0, 1.}}, {
                   0.03472963553338613, -0.1969615506024416}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13441$13578}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.5873303999999999, 0.52, 0.7767048]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.443460952792061, -1.7453292519943293`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13445$13578, 
                    FEPrivate`Not[DynamicChart`click$13445$13578]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13445$13578, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13445$13578}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.443460952792061}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13449$13578, 
                    FEPrivate`Not[DynamicChart`click$13449$13578]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13449$13578, {{{1., 0}, {
                    0, 1.}}, {-0.18793852415718168`, -0.06840402866513377}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$13449$13578}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13417$13578, 
                 FEPrivate`Not[DynamicChart`click$13417$13578]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13417$13578, {{{1., 0}, {
                0, 1.}}, {-0.18793852415718168`, 0.06840402866513377}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13417$13578}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13421$13578, 
                 FEPrivate`Not[DynamicChart`click$13421$13578]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13421$13578, {{{1., 0}, {
                0, 1.}}, {-0.09999999999999996, 0.17320508075688776`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13421$13578}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13425$13578, 
                 FEPrivate`Not[DynamicChart`click$13425$13578]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13425$13578, {{{1., 0}, {0, 1.}}, {
               0.034729635533386045`, 0.19696155060244164`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13425$13578}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13429$13578, 
                 FEPrivate`Not[DynamicChart`click$13429$13578]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13429$13578, {{{1., 0}, {0, 1.}}, {
               0.1532088886237956, 0.12855752193730788`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13429$13578}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13433$13578, 
                 FEPrivate`Not[DynamicChart`click$13433$13578]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13433$13578, {{{1., 0}, {0, 1.}}, {
               0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13433$13578}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13437$13578, 
                 FEPrivate`Not[DynamicChart`click$13437$13578]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13437$13578, {{{1., 0}, {0, 1.}}, {
               0.15320888862379564`, -0.12855752193730785`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13437$13578}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13441$13578, 
                 FEPrivate`Not[DynamicChart`click$13441$13578]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13441$13578, {{{1., 0}, {0, 1.}}, {
               0.03472963553338613, -0.1969615506024416}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13441$13578}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13445$13578, 
                 FEPrivate`Not[DynamicChart`click$13445$13578]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13445$13578, {{{1., 0}, {
                0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13445$13578}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13449$13578, 
                 FEPrivate`Not[DynamicChart`click$13449$13578]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13449$13578, {{{1., 0}, {
                0, 1.}}, {-0.18793852415718168`, -0.06840402866513377}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$13449$13578}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, 
     PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
     Scaled[0.02]}],GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$13498$13579 = False, DynamicChart`click$13502$13579 = 
       False, DynamicChart`click$13506$13579 = False, 
       DynamicChart`click$13510$13579 = False, DynamicChart`click$13514$13579 = 
       False, DynamicChart`click$13518$13579 = False, 
       DynamicChart`click$13522$13579 = False, DynamicChart`click$13526$13579 = 
       False, DynamicChart`click$13530$13579 = False, 
       DynamicChart`click$13534$13579 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.5132741228718345`, 
                    3.141592653589793}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13498$13579, 
                    FEPrivate`Not[DynamicChart`click$13498$13579]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13498$13579, {{{1., 0}, {
                    0, 1.}}, {-0.1902113032590307, 0.06180339887498951}}, {{1,
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13498$13579}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.99048, 0.6546373333333334, 0.2701484444444444]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.8849555921538759`, 
                    2.5132741228718345`}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13502$13579, 
                    FEPrivate`Not[DynamicChart`click$13502$13579]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13502$13579, {{{1., 0}, {
                    0, 1.}}, {-0.11755705045849461`, 0.1618033988749895}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13502$13579}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.998096, 0.5661274666666667, 0.2140296888888889]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.256637061435917, 
                    1.8849555921538759`}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13506$13579, 
                    FEPrivate`Not[DynamicChart`click$13506$13579]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13506$13579, {{{1., 0}, {0, 1.}}, {
                   1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                  0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13506$13579}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6283185307179586, 
                    1.256637061435917}]}], StatusArea[#, 1]& , TagBoxNote -> 
                    "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13510$13579, 
                    FEPrivate`Not[DynamicChart`click$13510$13579]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13510$13579, {{{1., 0}, {0, 1.}}, {
                   0.11755705045849466`, 0.16180339887498948`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13510$13579}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8320000000000001, 0.49048888888888886`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 0.6283185307179586}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13514$13579, 
                    FEPrivate`Not[DynamicChart`click$13514$13579]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13514$13579, {{{1., 0}, {0, 1.}}, {
                   0.1902113032590307, 0.06180339887498948}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13514$13579}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.7598801777777778, 0.4773333333333333, 0.3161064888888889]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-0.6283185307179591, 0.}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13518$13579, 
                    FEPrivate`Not[DynamicChart`click$13518$13579]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13518$13579, {{{1., 0}, {0, 1.}}, {
                   0.1902113032590307, -0.06180339887498953}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13518$13579}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.2566370614359172`, -0.6283185307179591}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13522$13579, 
                    FEPrivate`Not[DynamicChart`click$13522$13579]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13522$13579, {{{1., 0}, {0, 1.}}, {
                   0.11755705045849461`, -0.1618033988749895}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13522$13579}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.6558762666666667, 0.4926222222222222, 0.7345293333333333]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8849555921538759`, -1.2566370614359172`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13526$13579, 
                    FEPrivate`Not[DynamicChart`click$13526$13579]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13526$13579, {{{1., 0}, {0, 1.}}, {
                   1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                  0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13526$13579}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.5775381333333334, 0.5239111111111111, 0.7827298666666667]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.5132741228718345`, -1.8849555921538759`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13530$13579, 
                    FEPrivate`Not[DynamicChart`click$13530$13579]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13530$13579, {{{1., 0}, {
                    0, 1.}}, {-0.11755705045849461`, -0.1618033988749895}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$13530$13579}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.5132741228718345`}]}], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$13534$13579, 
                    FEPrivate`Not[DynamicChart`click$13534$13579]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$13534$13579, {{{1., 0}, {
                    0, 1.}}, {-0.1902113032590307, -0.06180339887498951}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$13534$13579}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13498$13579, 
                 FEPrivate`Not[DynamicChart`click$13498$13579]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13498$13579, {{{1., 0}, {
                0, 1.}}, {-0.1902113032590307, 0.06180339887498951}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13498$13579}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13502$13579, 
                 FEPrivate`Not[DynamicChart`click$13502$13579]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13502$13579, {{{1., 0}, {
                0, 1.}}, {-0.11755705045849461`, 0.1618033988749895}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13502$13579}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13506$13579, 
                 FEPrivate`Not[DynamicChart`click$13506$13579]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13506$13579, {{{1., 0}, {0, 1.}}, {
               1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {0,
               1}}], TrackedSymbols :> {DynamicChart`click$13506$13579}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13510$13579, 
                 FEPrivate`Not[DynamicChart`click$13510$13579]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13510$13579, {{{1., 0}, {0, 1.}}, {
               0.11755705045849466`, 0.16180339887498948`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13510$13579}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13514$13579, 
                 FEPrivate`Not[DynamicChart`click$13514$13579]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13514$13579, {{{1., 0}, {0, 1.}}, {
               0.1902113032590307, 0.06180339887498948}}, {{1, 0}, {0, 1}}, {{
              1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13514$13579}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13518$13579, 
                 FEPrivate`Not[DynamicChart`click$13518$13579]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13518$13579, {{{1., 0}, {0, 1.}}, {
               0.1902113032590307, -0.06180339887498953}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13518$13579}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13522$13579, 
                 FEPrivate`Not[DynamicChart`click$13522$13579]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13522$13579, {{{1., 0}, {0, 1.}}, {
               0.11755705045849461`, -0.1618033988749895}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13522$13579}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13526$13579, 
                 FEPrivate`Not[DynamicChart`click$13526$13579]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13526$13579, {{{1., 0}, {0, 1.}}, {
               1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {
              0, 1}}], TrackedSymbols :> {DynamicChart`click$13526$13579}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13530$13579, 
                 FEPrivate`Not[DynamicChart`click$13530$13579]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13530$13579, {{{1., 0}, {
                0, 1.}}, {-0.11755705045849461`, -0.1618033988749895}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$13530$13579}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$13534$13579, 
                 FEPrivate`Not[DynamicChart`click$13534$13579]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$13534$13579, {{{1., 0}, {
                0, 1.}}, {-0.1902113032590307, -0.06180339887498951}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$13534$13579}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, 
     PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
     Scaled[0.02]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.717333886581126*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4", ",", "1", ",", "23", ",", "4"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.717333928840865*^9, 3.7173339396596136`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 2.}, {2., 3.}, {3., 4.}, {4., 1.}, {4.340909090909091, 
      8.5}}], LineBox[{{5.7631578947368425`, 8.5}, {6., 
      4.}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 6.}, {0, 8.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7173339399774647`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "5", ",", "2", ",", "5", ",", "2"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7173339438621674`*^9, 3.7173339520190415`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.4451141552511416, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6649999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.54337899543379, 0.}, {1.45662100456621, 4.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{15.340871642774761`, 
           77.09432557190821}, {-61.658563805366, 103.06189606246322`}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.54337899543379, 0.}, {2.45662100456621, 5.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{82.41340369517589, 
           144.1668576243093}, {-102.71367877232332`, 103.06189606246322`}}],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.5433789954337898`, 0.}, {3.45662100456621, 2.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{149.485935747577, 211.23938967671043`}, {
           20.45166612854861, 103.06189606246322`}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.5433789954337898`, 0.}, {4.45662100456621, 5.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{216.55846779997813`, 
           278.3119217291116}, {-102.71367877232332`, 103.06189606246322`}}],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.543378995433789, 0.}, {5.456621004566209, 2.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{283.6309998523792, 345.38445378151266`}, {
           20.45166612854861, 103.06189606246322`}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.4451141552511416, 0.}, {5.55685114155251, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5433789954337899, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5433789954337899, 0.}]}],
          LineBox[{{5.456621004566209, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {5.456621004566209, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4451141552511416, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4.999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4.999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.7173339528336296`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PieChart3D", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "41", ",", "2", ",", "3", ",", "1", ","}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.717333966769245*^9, 3.7173339821975145`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 Graphics3DBox[
  {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.1]}], {{{}, {
      {RGBColor[0.980722, 0.7110406, 0.2420506], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$14577 = True}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 0.}, {-1., 
                 1.2246467991473532`*^-16, 0.}, {-0.9924205096719357, 
                 0.12288829066471434`, 0.}}, {{0., 0., 1.}, {0., 0., 
                 1.}, {-0.9924205096719357, 0.12288829066471434`, 1.}, {-1., 
                 1.2246467991473532`*^-16, 1.}}}], 
                
                BSplineSurface3DBox[{{{-0.9924205096719357, 
                  0.12288829066471434`, 0.}, {-1., 0.06167788881321491, 
                  0.}, {-1., 1.249000902703301*^-16, 
                  0.}}, {{-0.9924205096719357, 0.12288829066471434`, 1}, {-1.,
                     0.06167788881321491, 1}, {-1., 1.249000902703301*^-16, 
                    1}}}, SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9981033287370441, 1.}, {1., 
                  0.9981033287370441, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.9924205096719357, 0.12288829066471434`, 
                 1.}, {-0.9924205096719357, 0.12288829066471434`, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 1.}, {-1., 
                 1.2246467991473532`*^-16, 1.}, {-1., 
                 1.2246467991473532`*^-16, 0.}}}]}},
              
              ImageSizeCache->{{53.24280686767703, 
               171.53596911193978`}, {-39.87611830177859, 8.856109219483429}}],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14577, 
              FEPrivate`Not[DynamicChart`click$14577]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14577, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.19962066574740883`, 0.012312181226788559`, 
             0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {
           0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$14577}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.993574, 0.5616802000000001, 0.14735020000000001`], 
       EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$14578 = True}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIeIAaxBxtYXyq74sXB9/tPx5Wnzi7dbw8Tf9DUrx2T
+H7/+zPvbpYJnoSL/5LlnPz+yrv9uTKhszuVLsLF2TudTdNl3+3P1zo7K2nJ
Vbj4lPr/6w5bv91/VYpN8Sf7Lbh4ylarGgfDN/vDjy020nK/BxfHDj7gkKe9
OHZ3frDH7q8P9tjD4YM99nD7YI89nD/YY4+XD/YAuvB1JA==
                 "]], 
                
                BSplineSurface3DBox[{{{-0.8810121942857845, 
                  0.4730935568360101, 0.}, {-0.9694487069214788, 
                  0.3084038354768097, 0.}, {-0.9924205096719357, 
                  0.12288829066471435`, 
                  0.}}, {{-0.8810121942857845, 0.4730935568360101, 
                    1}, {-0.9694487069214788, 0.3084038354768097, 
                    1}, {-0.9924205096719357, 0.12288829066471435`, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9829730996839016, 1.}, {1., 
                  0.9829730996839016, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.8810121942857845, 0.4730935568360101, 
                 1.}, {-0.8810121942857845, 0.4730935568360101, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.9924205096719357, 0.12288829066471434`, 
                 1.}, {-0.9924205096719357, 0.12288829066471434`, 0.}}}]}},
              
              ImageSizeCache->{{33.77574442615568, 
               169.53056836498456`}, {-82.67994177493911, 4.081921711400867}}],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14578, 
              FEPrivate`Not[DynamicChart`click$14578]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14578, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.19058840008543132`, 0.06063053482260873, 0}}, {{
           1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
           1}}], TrackedSymbols :> {DynamicChart`click$14578}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.919, 0.4612, 0.1], EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$14579 = True}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1: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
                 "]], 
                
                BSplineSurface3DBox[{{{-0.7390089172206586, \
-0.6736956436465577, 0.}, {-0.065313273574101, -1.4127045608672164`, 0.}, {
                  0.6736956436465577, -0.7390089172206586, 0.}, {
                  1.4127045608672164`, -0.065313273574101, 0.}, {
                  0.7390089172206586, 0.6736956436465577, 0.}, {
                  0.065313273574101, 1.4127045608672164`, 
                  0.}, {-0.6736956436465577, 0.7390089172206586, 
                  0.}, {-0.8000948408176164, 0.6237808238779927, 
                  0.}, {-0.8810121942857847, 0.4730935568360095, 
                  0.}}, {{-0.7390089172206586, -0.6736956436465577, 
                    1}, {-0.065313273574101, -1.4127045608672164`, 1}, {
                   0.6736956436465577, -0.7390089172206586, 1}, {
                   1.4127045608672164`, -0.065313273574101, 1}, {
                   0.7390089172206586, 0.6736956436465577, 1}, {
                   0.065313273574101, 1.4127045608672164`, 
                    1}, {-0.6736956436465577, 0.7390089172206586, 
                    1}, {-0.8000948408176164, 0.6237808238779927, 
                    1}, {-0.8810121942857847, 0.4730935568360095, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.7071067811865475, 1., 
                  0.7071067811865475, 1., 0.7071067811865475, 1., 
                  0.9856861656915139, 1.}, {1., 0.7071067811865475, 1., 
                  0.7071067811865475, 1., 0.7071067811865475, 1., 
                  0.9856861656915139, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 
                   4, 4}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.7390089172206586, -0.6736956436465577, 
                 1.}, {-0.7390089172206586, -0.6736956436465577, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.8810121942857847, 0.47309355683600973`, 
                 1.}, {-0.8810121942857847, 0.47309355683600973`, 0.}}}]}},
              
              ImageSizeCache->{{36.77558621178885, 
               371.10703220118126`}, {-157.97955404692988`, 
               166.1703133306666}}],
             StatusArea[#, 41]& ,
             TagBoxNote->"41"],
            StyleBox["41", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[41, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14579, 
              FEPrivate`Not[DynamicChart`click$14579]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14579, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
            0.19848410193438715`, 0.024577658132942888`, 0}}, {{1, 0, 0}, {0, 
           1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$14579}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.757, 0.40959999999999996`, 0.1], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$14580 = True}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIOIAaxaQ0aPGLZvy19vn957lytV31P98PEQ/TFfUPC
Xu63UI9KX9z9GC6euv56wvdbr/a/uXiqdUHaQ7h40larGgfDN/vjji020nK/
tx/dHlTwwZ5a4tjt/WCP3Z0f7LH764M99nD4YA8AcFFTGg==
                 "]], 
                
                BSplineSurface3DBox[{{{-0.8810121942857843, \
-0.4730935568360105, 0.}, {-0.8224305165015497, -0.5821865084179346, 
                  0.}, {-0.7390089172206586, -0.6736956436465577, 
                  0.}}, {{-0.8810121942857843, -0.4730935568360105, 
                    1}, {-0.8224305165015497, -0.5821865084179346, 
                    1}, {-0.7390089172206586, -0.6736956436465577, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9924205096719356, 1.}, {1., 
                  0.9924205096719356, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.8810121942857843, -0.4730935568360105, 
                 1.}, {-0.8810121942857843, -0.4730935568360105, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.7390089172206586, -0.6736956436465577, 
                 1.}, {-0.7390089172206586, -0.6736956436465577, 0.}}}]}},
              
              ImageSizeCache->{{82.42075452772073, 
               221.828443906846}, {-9.296078659254931, 93.9840216804326}}],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14580, 
              FEPrivate`Not[DynamicChart`click$14580]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14580, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.16323938247124428`, -0.11555476628165032`, 
             0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {
           0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$14580}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.6755956000000001, 0.4168, 0.49185939999999995`], EdgeForm[{
       GrayLevel[0], Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$14581 = True}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIeIAaxBxtI2mpV42D4Zn/cscVGWu739sPEJ9f/X3fY
+u3+O1Jsij/Zb8HF2TqdTdNl3+0v1zo7K2nJVbj4T1nOye+vvNtfKhM6u1Pp
Ilz8flO/dkzi+/3/z7y7WSZ4Ei6+rlR2xYuD7/e/jitPnV26Hy6OHXywHyhx
7O78YI/dXx/ssYfDB3vs4fbBHns4f7DHHi8f7AEy4nuy
                 "]], 
                
                BSplineSurface3DBox[{{{-0.9924205096719356, \
-0.12288829066471478`, 0.}, {-0.9694487069214787, -0.30840383547680994`, 
                  0.}, {-0.8810121942857841, -0.4730935568360105, 
                  0.}}, {{-0.9924205096719356, -0.12288829066471478`, 
                    1}, {-0.9694487069214787, -0.30840383547680994`, 
                    1}, {-0.8810121942857841, -0.4730935568360105, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9829730996839016, 1.}, {1., 
                  0.9829730996839016, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.9924205096719356, -0.12288829066471478`, 
                 1.}, {-0.9924205096719356, -0.12288829066471478`, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.8810121942857843, -0.4730935568360105, 
                 1.}, {-0.8810121942857843, -0.4730935568360105, 0.}}}]}},
              
              ImageSizeCache->{{65.69289574218055, 
               204.08569545462143`}, {-17.571746921983248`, 
               65.96272768084049}}],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14581, 
              FEPrivate`Not[DynamicChart`click$14581]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14581, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.1905884000854313, -0.06063053482260881, 0}}, {{1,
            0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$14581}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.5687956000000001, 0.4468, 0.7284583], EdgeForm[{GrayLevel[
       0], Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$14582 = True}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 0.}, {-0.9924205096719356, -0.12288829066471478`, 
                 0.}, {-1., -1.2246467991473532`*^-16, 0.}}, {{0., 0., 1.}, {
                 0., 0., 1.}, {-1., -1.2246467991473532`*^-16, 
                 1.}, {-0.9924205096719356, -0.12288829066471478`, 1.}}}], 
                
                BSplineSurface3DBox[{{{-1., -1.2246467991473532`*^-16, 
                  0.}, {-1., -0.06167788881321539, 
                  0.}, {-0.9924205096719357, -0.12288829066471478`, 
                  0.}}, {{-1., -1.2246467991473532`*^-16, 
                    1}, {-1., -0.06167788881321539, 
                    1}, {-0.9924205096719357, -0.12288829066471478`, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9981033287370441, 1.}, {1., 
                  0.9981033287370441, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-1., -1.2246467991473532`*^-16, 
                 1.}, {-1., -1.2246467991473532`*^-16, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.9924205096719356, -0.12288829066471478`, 
                 1.}, {-0.9924205096719356, -0.12288829066471478`, 0.}}}]}},
              
              ImageSizeCache->{{61.34110460150113, 
               179.9363864949753}, {-23.32056834273807, 23.9140453630026}}],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14582, 
              FEPrivate`Not[DynamicChart`click$14582]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14582, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.19962066574740883`, -0.012312181226788647`, 
             0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {
           0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$14582}]],
        DynamicModuleValues:>{}]}, {}}}, {}}, {}},
  BoxRatios->{1, 1, 0.1},
  Boxed->False,
  FaceGridsStyle->Automatic,
  ImageSize->{336.77718995894423`, 293.6950731908481},
  ImageSizeRaw->Automatic,
  LabelStyle->{
    GrayLevel[0], FontFamily -> "Arial"},
  Lighting->"Neutral",
  PlotRange->{{1.2, -1.2}, {1.2, -1.2}, {0., 1.02}},
  ViewPoint->{-2.4689221743479903`, -1.3334908087707216`, 1.3733992718568047`},
  ViewVertical->{-0.5750744462145522, 0.33405338235914656`, 
   7.467916168821393}], "\[IndentingNewLine]", 
 RowBox[{"?", "Row"}]}], "Input",
 CellChangeTimes->{{3.717334066513013*^9, 3.717334072049811*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.1]}], {{{}, {
      {RGBColor[0.980722, 0.7110406, 0.2420506], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$14577 = True}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 0.}, {-1., 
                 1.2246467991473532`*^-16, 0.}, {-0.9924205096719357, 
                 0.12288829066471434`, 0.}}, {{0., 0., 1.}, {0., 0., 
                 1.}, {-0.9924205096719357, 0.12288829066471434`, 1.}, {-1., 
                 1.2246467991473532`*^-16, 1.}}}], 
                
                BSplineSurface3DBox[{{{-0.9924205096719357, 
                  0.12288829066471434`, 0.}, {-1., 0.06167788881321491, 
                  0.}, {-1., 1.249000902703301*^-16, 
                  0.}}, {{-0.9924205096719357, 0.12288829066471434`, 1}, {-1.,
                     0.06167788881321491, 1}, {-1., 1.249000902703301*^-16, 
                    1}}}, SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9981033287370441, 1.}, {1., 
                  0.9981033287370441, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.9924205096719357, 0.12288829066471434`, 
                 1.}, {-0.9924205096719357, 0.12288829066471434`, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 1.}, {-1., 
                 1.2246467991473532`*^-16, 1.}, {-1., 
                 1.2246467991473532`*^-16, 0.}}}]}},
              
              ImageSizeCache->{{53.24280686767703, 
               171.53596911193978`}, {-39.87611830177859, 8.856109219483429}}],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14577, 
              FEPrivate`Not[DynamicChart`click$14577]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14577, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.19962066574740883`, 0.012312181226788559`, 
             0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {
           0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$14577}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.993574, 0.5616802000000001, 0.14735020000000001`], 
       EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$14578 = True}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIeIAaxBxtYXyq74sXB9/tPx5Wnzi7dbw8Tf9DUrx2T
+H7/+zPvbpYJnoSL/5LlnPz+yrv9uTKhszuVLsLF2TudTdNl3+3P1zo7K2nJ
Vbj4lPr/6w5bv91/VYpN8Sf7Lbh4ylarGgfDN/vDjy020nK/BxfHDj7gkKe9
OHZ3frDH7q8P9tjD4YM99nD7YI89nD/YY4+XD/YAuvB1JA==
                 "]], 
                
                BSplineSurface3DBox[{{{-0.8810121942857845, 
                  0.4730935568360101, 0.}, {-0.9694487069214788, 
                  0.3084038354768097, 0.}, {-0.9924205096719357, 
                  0.12288829066471435`, 
                  0.}}, {{-0.8810121942857845, 0.4730935568360101, 
                    1}, {-0.9694487069214788, 0.3084038354768097, 
                    1}, {-0.9924205096719357, 0.12288829066471435`, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9829730996839016, 1.}, {1., 
                  0.9829730996839016, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.8810121942857845, 0.4730935568360101, 
                 1.}, {-0.8810121942857845, 0.4730935568360101, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.9924205096719357, 0.12288829066471434`, 
                 1.}, {-0.9924205096719357, 0.12288829066471434`, 0.}}}]}},
              
              ImageSizeCache->{{33.77574442615568, 
               169.53056836498456`}, {-82.67994177493911, 4.081921711400867}}],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14578, 
              FEPrivate`Not[DynamicChart`click$14578]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14578, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.19058840008543132`, 0.06063053482260873, 0}}, {{
           1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
           1}}], TrackedSymbols :> {DynamicChart`click$14578}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.919, 0.4612, 0.1], EdgeForm[{GrayLevel[0], Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$14579 = True}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1: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
                 "]], 
                
                BSplineSurface3DBox[{{{-0.7390089172206586, \
-0.6736956436465577, 0.}, {-0.065313273574101, -1.4127045608672164`, 0.}, {
                  0.6736956436465577, -0.7390089172206586, 0.}, {
                  1.4127045608672164`, -0.065313273574101, 0.}, {
                  0.7390089172206586, 0.6736956436465577, 0.}, {
                  0.065313273574101, 1.4127045608672164`, 
                  0.}, {-0.6736956436465577, 0.7390089172206586, 
                  0.}, {-0.8000948408176164, 0.6237808238779927, 
                  0.}, {-0.8810121942857847, 0.4730935568360095, 
                  0.}}, {{-0.7390089172206586, -0.6736956436465577, 
                    1}, {-0.065313273574101, -1.4127045608672164`, 1}, {
                   0.6736956436465577, -0.7390089172206586, 1}, {
                   1.4127045608672164`, -0.065313273574101, 1}, {
                   0.7390089172206586, 0.6736956436465577, 1}, {
                   0.065313273574101, 1.4127045608672164`, 
                    1}, {-0.6736956436465577, 0.7390089172206586, 
                    1}, {-0.8000948408176164, 0.6237808238779927, 
                    1}, {-0.8810121942857847, 0.4730935568360095, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.7071067811865475, 1., 
                  0.7071067811865475, 1., 0.7071067811865475, 1., 
                  0.9856861656915139, 1.}, {1., 0.7071067811865475, 1., 
                  0.7071067811865475, 1., 0.7071067811865475, 1., 
                  0.9856861656915139, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 
                   4, 4}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.7390089172206586, -0.6736956436465577, 
                 1.}, {-0.7390089172206586, -0.6736956436465577, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.8810121942857847, 0.47309355683600973`, 
                 1.}, {-0.8810121942857847, 0.47309355683600973`, 0.}}}]}},
              
              ImageSizeCache->{{36.77558621178885, 
               371.10703220118126`}, {-157.97955404692988`, 
               166.1703133306666}}],
             StatusArea[#, 41]& ,
             TagBoxNote->"41"],
            StyleBox["41", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[41, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14579, 
              FEPrivate`Not[DynamicChart`click$14579]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14579, {{{1., 0, 0}, {0, 1., 0}, {0, 0, 1.}}, {
            0.19848410193438715`, 0.024577658132942888`, 0}}, {{1, 0, 0}, {0, 
           1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$14579}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.757, 0.40959999999999996`, 0.1], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$14580 = True}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIOIAaxaQ0aPGLZvy19vn957lytV31P98PEQ/TFfUPC
Xu63UI9KX9z9GC6euv56wvdbr/a/uXiqdUHaQ7h40larGgfDN/vjji020nK/
tx/dHlTwwZ5a4tjt/WCP3Z0f7LH764M99nD4YA8AcFFTGg==
                 "]], 
                
                BSplineSurface3DBox[{{{-0.8810121942857843, \
-0.4730935568360105, 0.}, {-0.8224305165015497, -0.5821865084179346, 
                  0.}, {-0.7390089172206586, -0.6736956436465577, 
                  0.}}, {{-0.8810121942857843, -0.4730935568360105, 
                    1}, {-0.8224305165015497, -0.5821865084179346, 
                    1}, {-0.7390089172206586, -0.6736956436465577, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9924205096719356, 1.}, {1., 
                  0.9924205096719356, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.8810121942857843, -0.4730935568360105, 
                 1.}, {-0.8810121942857843, -0.4730935568360105, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.7390089172206586, -0.6736956436465577, 
                 1.}, {-0.7390089172206586, -0.6736956436465577, 0.}}}]}},
              
              ImageSizeCache->{{82.42075452772073, 
               221.828443906846}, {-9.296078659254931, 93.9840216804326}}],
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14580, 
              FEPrivate`Not[DynamicChart`click$14580]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14580, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.16323938247124428`, -0.11555476628165032`, 
             0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {
           0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$14580}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.6755956000000001, 0.4168, 0.49185939999999995`], EdgeForm[{
       GrayLevel[0], Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$14581 = True}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIeIAaxBxtI2mpV42D4Zn/cscVGWu739sPEJ9f/X3fY
+u3+O1Jsij/Zb8HF2TqdTdNl3+0v1zo7K2nJVbj4T1nOye+vvNtfKhM6u1Pp
Ilz8flO/dkzi+/3/z7y7WSZ4Ei6+rlR2xYuD7/e/jitPnV26Hy6OHXywHyhx
7O78YI/dXx/ssYfDB3vs4fbBHns4f7DHHi8f7AEy4nuy
                 "]], 
                
                BSplineSurface3DBox[{{{-0.9924205096719356, \
-0.12288829066471478`, 0.}, {-0.9694487069214787, -0.30840383547680994`, 
                  0.}, {-0.8810121942857841, -0.4730935568360105, 
                  0.}}, {{-0.9924205096719356, -0.12288829066471478`, 
                    1}, {-0.9694487069214787, -0.30840383547680994`, 
                    1}, {-0.8810121942857841, -0.4730935568360105, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9829730996839016, 1.}, {1., 
                  0.9829730996839016, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.9924205096719356, -0.12288829066471478`, 
                 1.}, {-0.9924205096719356, -0.12288829066471478`, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.8810121942857843, -0.4730935568360105, 
                 1.}, {-0.8810121942857843, -0.4730935568360105, 0.}}}]}},
              
              ImageSizeCache->{{65.69289574218055, 
               204.08569545462143`}, {-17.571746921983248`, 
               65.96272768084049}}],
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14581, 
              FEPrivate`Not[DynamicChart`click$14581]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14581, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.1905884000854313, -0.06063053482260881, 0}}, {{1,
            0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$14581}]],
        DynamicModuleValues:>{}]}, 
      {RGBColor[0.5687956000000001, 0.4468, 0.7284583], EdgeForm[{GrayLevel[
       0], Opacity[0.1]}], 
       DynamicModuleBox[{DynamicChart`click$14582 = True}, 
        GeometricTransformation3DBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 0.}, {-0.9924205096719356, -0.12288829066471478`, 
                 0.}, {-1., -1.2246467991473532`*^-16, 0.}}, {{0., 0., 1.}, {
                 0., 0., 1.}, {-1., -1.2246467991473532`*^-16, 
                 1.}, {-0.9924205096719356, -0.12288829066471478`, 1.}}}], 
                
                BSplineSurface3DBox[{{{-1., -1.2246467991473532`*^-16, 
                  0.}, {-1., -0.06167788881321539, 
                  0.}, {-0.9924205096719357, -0.12288829066471478`, 
                  0.}}, {{-1., -1.2246467991473532`*^-16, 
                    1}, {-1., -0.06167788881321539, 
                    1}, {-0.9924205096719357, -0.12288829066471478`, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9981033287370441, 1.}, {1., 
                  0.9981033287370441, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-1., -1.2246467991473532`*^-16, 
                 1.}, {-1., -1.2246467991473532`*^-16, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.9924205096719356, -0.12288829066471478`, 
                 1.}, {-0.9924205096719356, -0.12288829066471478`, 0.}}}]}},
              
              ImageSizeCache->{{61.34110460150113, 
               179.9363864949753}, {-23.32056834273807, 23.9140453630026}}],
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {
              GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {
              GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14582, 
              FEPrivate`Not[DynamicChart`click$14582]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14582, {{{1., 0, 0}, {0, 1., 0}, {
             0, 0, 1.}}, {-0.19962066574740883`, -0.012312181226788647`, 
             0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {
           0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$14582}]],
        DynamicModuleValues:>{}]}, {}}}, {}}, {}},
  BoxRatios->{1, 1, 0.1},
  Boxed->False,
  FaceGridsStyle->Automatic,
  ImageSize->{336.77718995894423`, 293.6950731908481},
  ImageSizeRaw->Automatic,
  LabelStyle->{
    GrayLevel[0], FontFamily -> "Arial"},
  Lighting->"Neutral",
  PlotRange->{{1.2, -1.2}, {1.2, -1.2}, {0., 1.02}},
  ViewPoint->{-2.4689221743479903`, -1.3334908087707216`, 1.3733992718568047`},
  ViewVertical->{-0.5750744462145522, 0.33405338235914656`, 
   7.467916168821393}]], "Output",
 CellChangeTimes->{3.7173340751069417`*^9}],

Cell[BoxData[
 StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Row\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) is an object that formats with the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"expr\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\) arranged in a row, potentially extending over several lines. \
\\n\\!\\(\\*RowBox[{\\\"Row\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"s\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
inserts \\!\\(\\*StyleBox[\\\"s\\\", \\\"TI\\\"]\\) as a separator between \
successive elements. \"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.717334075212879*^9},
 CellTags->"Info433717319675-1358479"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{"12", "+", "3"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.7173345349067307`*^9, 3.717334568362529*^9}}],

Cell[BoxData[
 SqrtBox["15"]], "Output",
 CellChangeTimes->{3.717334568792514*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7173331569483194`*^9, 3.717333161465642*^9}}]
},
WindowSize->{759, 697},
WindowMargins->{{Automatic, -37}, {-36, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (October 8, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info43717317135-2037573"->{
  Cell[282148, 4687, 307, 5, 58, "Print",
   CellTags->"Info43717317135-2037573"]},
 "Info133717317461-2037573"->{
  Cell[424197, 7062, 124, 2, 41, "Print",
   CellTags->"Info133717317461-2037573"],
  Cell[424324, 7066, 981, 29, 55, "Print",
   CellTags->"Info133717317461-2037573"]},
 "Info433717319675-1358479"->{
  Cell[695334, 13317, 932, 13, 60, "Print",
   CellTags->"Info433717319675-1358479"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info43717317135-2037573", 696978, 13359},
 {"Info133717317461-2037573", 697093, 13362},
 {"Info433717319675-1358479", 697294, 13367}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 238, 6, 30, "Input"],
Cell[821, 30, 18206, 314, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19064, 349, 265, 7, 30, "Input"],
Cell[19332, 358, 18046, 310, 228, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37415, 673, 485, 14, 30, "Input"],
Cell[37903, 689, 244080, 3989, 300, 139205, 2268, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282020, 4683, 125, 2, 30, "Input"],
Cell[282148, 4687, 307, 5, 58, "Print",
 CellTags->"Info43717317135-2037573"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282492, 4697, 268, 7, 30, "Input"],
Cell[282763, 4706, 139274, 2270, 331, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422074, 6981, 278, 5, 69, "Input"],
Cell[422355, 6988, 254, 7, 21, "Message"],
Cell[422612, 6997, 78, 1, 30, "Output"],
Cell[422693, 7000, 113, 2, 406, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422843, 7007, 147, 3, 30, "Input"],
Cell[422993, 7012, 72, 1, 30, "Output"]
}, Open  ]],
Cell[423080, 7016, 228, 6, 30, "Input"],
Cell[CellGroupData[{
Cell[423333, 7026, 126, 2, 30, "Input"],
Cell[423462, 7030, 70, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423569, 7036, 124, 2, 30, "Input"],
Cell[423696, 7040, 70, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423803, 7046, 125, 2, 30, "Input"],
Cell[423931, 7050, 88, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424056, 7056, 116, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[424197, 7062, 124, 2, 41, "Print",
 CellTags->"Info133717317461-2037573"],
Cell[424324, 7066, 981, 29, 55, "Print",
 CellTags->"Info133717317461-2037573"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[425354, 7101, 205, 5, 30, "Input"],
Cell[425562, 7108, 184, 5, 33, "Output"]
}, Open  ]],
Cell[425761, 7116, 259, 7, 30, "Input"],
Cell[426023, 7125, 230, 6, 30, "Input"],
Cell[CellGroupData[{
Cell[426278, 7135, 224, 5, 30, "Input"],
Cell[426505, 7142, 101, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426643, 7149, 227, 6, 30, "Input"],
Cell[426873, 7157, 366, 12, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427276, 7174, 128, 2, 30, "Input"],
Cell[427407, 7178, 135, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427579, 7186, 130, 2, 30, "Input"],
Cell[427712, 7190, 105, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427854, 7196, 164, 3, 30, "Input"],
Cell[428021, 7201, 313, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428371, 7212, 198, 5, 30, "Input"],
Cell[428572, 7219, 192, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428801, 7229, 198, 4, 30, "Input"],
Cell[429002, 7235, 10590, 238, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[439629, 7478, 249, 7, 30, "Input"],
Cell[439881, 7487, 25180, 561, 197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465098, 8053, 269, 7, 30, "Input"],
Cell[465370, 8062, 2883, 118, 182, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468290, 8185, 230, 6, 30, "Input"],
Cell[468523, 8193, 1063, 30, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[469623, 8228, 268, 7, 30, "Input"],
Cell[469894, 8237, 1203, 19, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471134, 8261, 129, 2, 30, "Input"],
Cell[471266, 8265, 1935, 44, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473238, 8314, 295, 8, 30, "Input"],
Cell[473536, 8324, 2993, 50, 221, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476566, 8379, 129, 2, 30, "Input"],
Cell[476698, 8383, 2606, 55, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479341, 8443, 135, 2, 30, "Input"],
Cell[479479, 8447, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479588, 8453, 137, 2, 30, "Input"],
Cell[479728, 8457, 71, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479836, 8463, 124, 2, 30, "Input"],
Cell[479963, 8467, 287, 6, 23, "Message"],
Cell[480253, 8475, 101, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[480391, 8482, 128, 2, 30, "Input"],
Cell[480522, 8486, 70, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[480629, 8492, 184, 4, 30, "Input"],
Cell[480816, 8498, 70, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[480923, 8504, 202, 4, 30, "Input"],
Cell[481128, 8510, 278, 6, 23, "Message"],
Cell[481409, 8518, 276, 6, 23, "Message"],
Cell[481688, 8526, 150, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[481875, 8535, 257, 7, 30, "Input"],
Cell[482135, 8544, 1064, 30, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483236, 8579, 386, 10, 30, "Input"],
Cell[483625, 8591, 158043, 3574, 220, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[641705, 12170, 224, 5, 30, "Input"],
Cell[641932, 12177, 1474, 36, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643443, 12218, 211, 5, 30, "Input"],
Cell[643657, 12225, 8183, 223, 239, "Output"]
}, Open  ]],
Cell[651855, 12451, 228, 5, 30, "Input"],
Cell[CellGroupData[{
Cell[652108, 12460, 21645, 427, 343, InheritFromParent],
Cell[673756, 12889, 21575, 426, 309, "Output"],
Cell[695334, 13317, 932, 13, 60, "Print",
 CellTags->"Info433717319675-1358479"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696303, 13335, 166, 4, 33, "Input"],
Cell[696472, 13341, 82, 2, 66, "Output"]
}, Open  ]],
Cell[696569, 13346, 94, 1, 30, "Input"]
}
]
*)

(* End of internal cache information *)

